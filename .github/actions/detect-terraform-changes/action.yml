# This action analyzes a terraform module and its dependencies to determine whether it has
# been affected by any changes since the base ref of the workflow context (i.e. main in most cases.)
#
name: Detect terraform changes
description: |
  Returns an output indicating whether a terraform module 
  or any of its local dependencies have been changed.

inputs:
  root-module-folder:
    description: Root module for detecting changes
    type: string
    required: true

outputs:
  has-changes:
    description: "'true' if the root terraform module has been affected by any code changes"
    value: ${{ steps.check-for-changes.outputs.has-changes }}

runs:
  using: "composite"
  steps:
    - name: "Check for changes"
      id: check-for-changes
      # Check whether the config has changed within the PR.
      # This is done by comparing the PR's base branch (usually main) against the current PR commit.
      run: |
        echo "::set-output name=has-changes::false"

        find_submodules() (
          folder=$1
          submodules=$(git grep -h 'source\s*=\s*"\.' -- ${folder} | sed 's/.*\"\(.*\)\".*/\1/' | sed s:^:${folder}/:g | xargs realpath)
          echo $(uniqify_list "$submodules")
        )

        uniqify_list() (
          echo "$1" | xargs -n1 | sort | uniq
        )

        get_all_dependency_folders() (
          folders="$1"
          folders_to_search="$folders"

          while [[ ! -z "$folders_to_search" ]]; do
            new_folders=""

            for folder in $folders_to_search; do
              echo "Searching for submodules in: $folder" >&2
              submodules=$(find_submodules $folder)
              
              echo "Found submodules: $submodules" >&2
              new_folders="$new_folders $submodules"
            done

            new_folders=$(uniqify_list "$new_folders")
            folders_to_search="$new_folders"

            folders="$folders $new_folders"
            folders=$(uniqify_list "$folders")
          done
        )

        get_git_diff() (
          folder=$1
          echo "$(git --no-pager diff --name-only origin/${{ env.baseref }} ${GITHUB_SHA} -- ${folder})"
        )
        
        folders=$(get_all_dependency_folders "${{ inputs.root-module-folder }}")

        for folder in $folders; do
          if [ -n "$(get_git_diff $folder)" ]; then
            echo "::set-output name=has-changes::true"
            break
          fi
        done