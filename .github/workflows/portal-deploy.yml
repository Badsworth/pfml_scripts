# Build and export the Paid Leave static website, and deploy to S3/Cloudfront
#
name: Portal deploy

on:
  push:
    branches:
      - master
      - deploy/portal/stage
      - deploy/portal/prod
    paths:
      - portal/**

env:
  nodeVersion: 12.x
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  terraformVersion: 0.12.24
  terraformBaseDir: ./infra/portal/environments/
  # Map branch name to environment name. This is used to set the portal_env variable below in combination with git refs.
  refs/heads/master: test
  refs/heads/deploy/portal/stage: stage
  refs/heads/deploy/portal/prod: prod

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set portal_env Value
        # see https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context
        # github.ref will give the branch or tag reference that triggered the workflow
        # e.g refs/heads/master or refs/heads/deploy/portal/stage
        run: echo "::set-env name=portal_env::${{ env[github.ref] }}"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.PFML_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PFML_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-duration-seconds: 3600
          role-to-assume: ci-run-deploys

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.nodeVersion }}

      - name: Install
        run: PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true npm ci --prefix portal

      - name: Build
        run: npm run build:${{ env.portal_env }} --prefix portal

      - name: Sync S3 Bucket
        env:
          BUCKET_NAME: massgov-pfml-${{ env.portal_env }}-portal-site-builds
          RELEASE_HASH: ${{ github.sha }}
          NEXT_OUTPUT_DIR: ./portal/out
        run: |
          aws s3 sync $NEXT_OUTPUT_DIR s3://$BUCKET_NAME/$RELEASE_HASH/ --exclude "*.html" --cache-control max-age=31536000,public &&
          aws s3 sync $NEXT_OUTPUT_DIR s3://$BUCKET_NAME/$RELEASE_HASH/ --exclude "*" --include "*.html" --cache-control s-maxage=86400,max-age=0,must-revalidate

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: deploy
    env:
      TF_VAR_cloudfront_origin_path: /${{ github.sha }}

    steps:
      - uses: actions/checkout@v2

      - name: Set portal_env Value
        # see https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context
        # github.ref will give the branch or tag reference that triggered the workflow
        # e.g refs/heads/master or refs/heads/deploy/portal/stage
        run: echo "::set-env name=portal_env::${{ env[github.ref] }}"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.PFML_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PFML_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-duration-seconds: 3600
          role-to-assume: ci-run-deploys

      - name: Terraform Init
        id: terraform_init
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.terraformVersion }}
          tf_actions_subcommand: init
          tf_actions_comment: false
          tf_actions_working_dir: ${{ env.terraformBaseDir }}${{ env.portal_env }}

      - name: Terraform Apply with new Cloudfront path
        id: terraform_apply
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.terraformVersion }}
          tf_actions_subcommand: apply
          tf_actions_comment: false
          tf_actions_working_dir: ${{ env.terraformBaseDir }}${{ env.portal_env }}

  invalidate-cloudfront:
    name: Invalidate Cloudfront Cache
    runs-on: ubuntu-latest
    needs: [deploy, release]

    steps:
      - uses: actions/checkout@v2

      - name: Set portal_env Value
        # see https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context
        # github.ref will give the branch or tag reference that triggered the workflow
        # e.g refs/heads/master or refs/heads/deploy/portal/stage
        run: echo "::set-env name=portal_env::${{ env[github.ref] }}"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.PFML_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PFML_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-duration-seconds: 3600
          role-to-assume: ci-run-deploys

      - name: Terraform Init
        id: terraform_init
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.terraformVersion }}
          tf_actions_subcommand: init
          tf_actions_comment: false
          tf_actions_working_dir: ${{ env.terraformBaseDir }}${{ env.portal_env }}

      - name: Terraform Output
        id: terraform
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.terraformVersion }}
          tf_actions_subcommand: output
          tf_actions_working_dir: ${{ env.terraformBaseDir }}${{ env.portal_env }}

      - name: Invalidate old Cloudfront cache
        env:
          TF_OUTPUT: ${{ steps.terraform.outputs.tf_actions_output }}
        run: |
          sudo apt-get install jq
          DISTRIBUTION_ID=$(echo $TF_OUTPUT | jq -r '.cloudfront_distribution_id.value')
          aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/index.html"
