name: Portal infra deploy

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - deploy/portal/stage
      - deploy/portal/prod
      - deploy/portal/performance
      - deploy/portal/training
      - deploy/portal/uat
    paths:
      - infra/portal/**

env:
  terraformVersion: 0.12.24
  terraformBaseDir: ./infra/portal/environments/
  # Map branch name to environment name. This is used to set the portal_env variable below in combination with git refs.
  refs/heads/master: test
  refs/heads/deploy/portal/stage: stage
  refs/heads/deploy/portal/prod: prod
  refs/heads/deploy/portal/performance: performance
  refs/heads/deploy/portal/training: training
  refs/heads/deploy/portal/uat: uat

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set portal_env Value
        # see https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context
        # github.ref will give the branch or tag reference that triggered the workflow
        # e.g refs/heads/master or refs/heads/deploy/portal/stage
        run: echo "portal_env=${{ env[github.ref] || 'test' }}" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.PFML_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PFML_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-duration-seconds: 3600
          role-to-assume: ci-run-deploys

      - name: Terraform Init
        id: terraform_init
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.terraformVersion }}
          tf_actions_subcommand: init
          tf_actions_comment: false
          tf_actions_working_dir: ${{ env.terraformBaseDir }}${{ env.portal_env }}

      - name: Terraform Apply
        id: terraform_apply
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.terraformVersion }}
          tf_actions_subcommand: apply
          tf_actions_comment: false
          tf_actions_working_dir: ${{ env.terraformBaseDir }}${{ env.portal_env }}

  end-to-end:
    name: End-to-End Test Deployment
    runs-on: ubuntu-latest
    needs: [ release ]
    if: github.ref != 'refs/heads/deploy/portal/prod'
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/trigger-cypress
        name: "Trigger Cypress Run"
        with:
          target_environment: ${{ env[github.ref] || 'test' }}
          cypress_tags: "Deploy,Deploy-Portal"
          github_token: ${{ secrets.PFML_DEVOPS_TOKEN }}
          # Limit to "stable" suite for any environment but test.
          only_stable: ${{ (env[github.ref] || 'test') == 'test' && 'false' || 'true' }}
