name: E2E Test Suite (All Environments)
#
# This workflow is to trigger scheduled runs every morning
#
# Scheduled runs will trigger a workflow_dispatch for all
# enviornments via the End-to-End Test Suite workflow

on:
  workflow_dispatch:
    inputs:
      cypress_tags:
        description: "Cypress Run Tags"
        required: false
        default: "Manual"
      run_unstable:
        description: "Run tests in unstable group"
        required: false
        default: "false"
      run_nightly:
        description: "Run tests in nightly group"
        required: false
        default: "false"
  schedule:
    - cron: "0 11 * * 1-5"

jobs:
  trigger_e2e:
    name: Run Cypress Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        environment:
          ["test", "stage", "performance", "training", "uat", "cps-preview"]
    steps:
      - name: Trigger E2E Workflow
        uses: aurelien-baudet/workflow-dispatch@v2
        with:
          workflow: e2e-cypress.yml
          token: ${{ secrets.PFML_DEVOPS_TOKEN }}
          wait-for-completion: false
          display-workflow-run-url: false # aurelien-baudet/workflow-dispatch@v2 outputs the link to "test" run for each environment
          run: echo "You can follow the running workflow here - https://github.com/EOLWD/pfml/actions/runs/${{github.run_id}}"
          inputs: |
            {
              "target_environment": "${{ matrix.environment }}",
              "cypress_tags": ${{ toJSON(github.event_name == 'schedule' && format('Morning Run ({0})', matrix.environment) || github.event.inputs.cypress_tags) }},
              "run_unstable": "${{ github.event.inputs.run_unstable || 'false' }}",
              "run_nightly": "${{ github.event_name == 'schedule' && 'true' || github.event.inputs.run_nightly }}",
              "title_override": "${{ github.event_name == 'schedule' && format('Scheduled Run: {0}', matrix.environment) || '' }}"
            }
      # 1 filter json, find e2e job for the corresponding environment
      # 2 log run url of job
      - uses: octokit/request-action@v2.x
        id: get_jobs_for_run
        with:
          route: GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs
          owner: EOLWD
          repo: pfml
          run_id: ${{github.run_id}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: "echo : ${{ steps.get_jobs_for_run.outputs.data.jobs }}"
