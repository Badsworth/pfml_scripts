# Verify Portal and Storybook site builds complete successfully
#
name: Portal build check

on:
  pull_request:
    paths:
      - portal/**

concurrency:
  group: ${{ github.head_ref }}-build-check
  cancel-in-progress: true

env:
  nodeVersion: 16.x
  working-dir: ./portal
  cache-package-lock: ./portal/package-lock.json
  workflow_self_link: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

jobs:
  portal:
    name: Check Portal builds successfully
    strategy:
      matrix:
        env: ['test', 'stage', 'prod']
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          cache: 'npm'
          cache-dependency-path: ${{ env.cache-package-lock }}
          node-version: ${{ env.nodeVersion }}

      - name: install
        run: npm ci --audit false
        working-directory: ${{ env.working-dir }}

      - name: build
        run: BUILD_ENV=${{ matrix.env }} npm run build
        working-directory: ${{ env.working-dir }}
  storybook:
    name: Check Storybook builds successfully
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          cache: 'npm'
          cache-dependency-path: ${{ env.cache-package-lock }}
          node-version: ${{ env.nodeVersion }}

      - name: install
        run: npm ci --audit false
        working-directory: ${{ env.working-dir }}

      - name: Smoke test Storybook
        run: npm run docs:smoke-test
        working-directory: ${{ env.working-dir }}

  get-build-state:
    name: Finalize build state
    needs: [portal, storybook]
    if: always() && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    outputs:
      build-state: ${{ steps.build-state.outputs.build-state }}
    steps:
        # https://github.com/technote-space/workflow-conclusion-action
        # this action takes the "conclusion" status from jobs and compiles them together into an env variable with a rolled up status
      - uses: technote-space/workflow-conclusion-action@v2
      - name: Set build-state value
        id: build-state
        run: echo "::set-output name=build-state::${{ env.WORKFLOW_CONCLUSION }}"

  post-to-teams:
    name: post failures to teams
    needs: [get-build-state]
    if: needs.get-build-state.outputs.build-state == 'failure' || needs.get-build-state.outputs.build-state == 'timed_out'
    runs-on: ubuntu-latest    
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.PFML_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PFML_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-to-assume: ci-run-deploys
          role-duration-seconds: 3600

      - name: Pull teams uri from SSM
        uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: "/admin/common/teams-deploy-uri"
          env_variable_name: "teams_uri"

      - name: Post to Teams
        run: |
          RESPONSE=$(curl -fsLS -X POST ${{ env.TEAMS_URI }} \
          --header 'Content-Type: application/json' \
          --data '{   
            "@type": "MessageCard",
            "themeColor": "2986CC",
            "title": "Portal Build Failed",
            "text": "Portal build failed in main: [build logs](${{ env.workflow_self_link }})"
            }'
          )