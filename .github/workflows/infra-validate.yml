# Run linting and validation for terraform configs.
#
name: Infra CI Validation

on:
  pull_request:
    paths:
      - infra/**/*.tf

env:
  working-dir: ./infra
  tf-version-pagerduty: 0.13.6
  tf-version-default: 0.12.24

jobs:
  tf-format:
    name: "tf format check"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: tf-format-check
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env[format('{0}-{1}', 'tf-version', matrix.component)] || env.tf-version-default }}
          tf_actions_subcommand: "fmt"
          tf_actions_working_dir: ${{ env.working-dir }}
          tf_actions_comment: false

  tf-validate:
    name: "tf validate"
    runs-on: ubuntu-latest

    env:
      baseref: ${{ github['base_ref'] }}

    # Run a job for each combination of a component and environment.
    # e.g. portal/test, portal/stage, env-shared/test, env-shared/stage
    strategy:
      fail-fast: false
      matrix:
        component: ["portal", "api", "env-shared", "ecs-tasks"]
        environment: ["test", "stage", "prod", "performance", "training", "uat"]
        include:
        - component: "constants"
        - component: "pfml-aws"
        - component: "pagerduty"

    steps:
      - uses: actions/checkout@v2

      - name: "Fetch status of remote ref"
        run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/${{ env.baseref }}:refs/remotes/origin/${{ env.baseref }}

      - name: "Check for changes"
        id: check-for-changes
        # Check whether the config has changed within the PR.
        # This is done by comparing the PR's base branch (usually master) against the current PR commit.
        run: |
          echo "::set-output name=has-changes::false"

          if [ -z "${{ matrix.environment }}" ]; then
            tf_dir=${{ env.working-dir }}/${{ matrix.component }}
            folders=${tf_dir}
          else
            tf_dir=${{ env.working-dir }}/${{ matrix.component }}/environments/${{ matrix.environment }}
            template_dir=${{ env.working-dir }}/${{ matrix.component }}/template
            folders="${tf_dir} ${template_dir}"
          fi

          echo "::set-output name=tf_working_dir::${tf_dir}"

          for folder in $folders; do
            if [ -n "$(git --no-pager diff --name-only origin/${{ env.baseref }} ${GITHUB_SHA} -- ${folder})" ]; then
              echo "::set-output name=has-changes::true"
              break
            fi
          done

      - name: Configure AWS Credentials
        if: steps.check-for-changes.outputs.has-changes == 'true'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.PFML_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PFML_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-to-assume: ci-run-deploys
          role-duration-seconds: 3600

      - name: tf-init
        if: steps.check-for-changes.outputs.has-changes == 'true'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env[format('{0}-{1}', 'tf-version', matrix.component)] || env.tf-version-default }}
          tf_actions_subcommand: "init"
          tf_actions_working_dir: ${{ steps.check-for-changes.outputs.tf_working_dir }}
          tf_actions_comment: false

      - name: tf-validate
        if: steps.check-for-changes.outputs.has-changes == 'true'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env[format('{0}-{1}', 'tf-version', matrix.component)] || env.tf-version-default }}
          tf_actions_subcommand: "validate"
          tf_actions_working_dir: ${{ steps.check-for-changes.outputs.tf_working_dir }}
          tf_actions_comment: false
