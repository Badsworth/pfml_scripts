# Run tests and linting for the Portal
#
name: Portal CI

on:
  push:
    branches:
      - main
    paths:
      - portal/**
  pull_request:
    paths:
      - portal/**

env:
  nodeVersion: 15.x
  deploys_channel: "C01HEAJPE76" #mass-pfml-deploys-shared
  workflow_self_link: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.nodeVersion }}

      - name: install
        run: npm ci

      - name: lint
        run: npm run lint:ci

  test:
    name: Unit tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.nodeVersion }}

      - name: install
        run: npm ci --prefix portal

      - name: test
        run: npm run test:ci --prefix portal

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: "./portal/coverage/lcov.info"
          base-path: "./portal"

  get-test-state:
    name: Finalize test state
    needs: [test]
    if: always() && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    outputs:
      test-state: ${{ steps.test-state.outputs.test-state }}
    steps:
        # https://github.com/technote-space/workflow-conclusion-action
        # this action takes the "conclusion" status from jobs and compiles them together into an env variable with a rolled up status
      - uses: technote-space/workflow-conclusion-action@v2
      - name: Set test-state value
        id: test-state
        run: echo "::set-output name=test-state::${{ env.WORKFLOW_CONCLUSION }}"

  post-to-slack:
    name: post failures to slack
    needs: [get-test-state]
    if: needs.get-test-state.outputs.test-state == 'failure' || needs.get-test-state.outputs.test-state == 'timed_out'
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.PFML_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PFML_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          role-to-assume: ci-run-deploys
          role-duration-seconds: 3600

      - name: Pull slackbot API token from SSM
        uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: "/admin/common/nava-slackbot-api-key"
          env_variable_name: "slackbot_token"

      - name: Post to Slack
        run: |
          SLACKBOT_RESPONSE=$(curl -fsLS -X POST -H "Authorization: Bearer ${{ env.SLACKBOT_TOKEN }}" \
          -H 'Content-Type: application/json;charset=utf-8' \
          --data '{
            "channel": "${{ env.deploys_channel }}",
            "attachments": [{
              "title": "Portal Unit Test failed in main (<${{ env.workflow_self_link }}|build logs>)",
              "color": "danger"
            }]
          }' https://slack.com/api/chat.postMessage)