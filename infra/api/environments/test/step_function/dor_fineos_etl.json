{
  "Comment": "DOR FINEOS ETL step function",
  "StartAt": "dor_generate",

  "States": {
    "dor_generate": {
      "Comment": "Generate fake DOR data to S3 (non-prod)",
      "Type": "Task",
      "Resource": "arn:aws:states:::ecs:runTask.sync",
      "TimeoutSeconds": 28800,
      "Parameters": {
        "LaunchType": "FARGATE",
        "PlatformVersion": "1.4.0",
        "Cluster": "${cluster_arn}",
        "TaskDefinition": "pfml-api-${environment_name}-dor-import",
        "Overrides": {
          "ContainerOverrides": [
            {
              "Name": "dor-import",
              "Command": [
                "dor-generate",
                "--folder=s3://massgov-pfml-test-agency-transfer/dor/received",
                "--count=1000"
              ]
            }
          ]
        },
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "SecurityGroups": ["${security_group}"],
            "Subnets": ["${subnet_1}", "${subnet_2}"],
            "AssignPublicIp": "DISABLED"
          }
        }
      },
      "Retry": [ 
        {
          "ErrorEquals": ["States.TaskFailed"],
          "IntervalSeconds": 1,
          "MaxAttempts": 2,
          "BackoffRate": 2.0
        } 
      ],
      "Catch": [{"ErrorEquals": ["States.ALL"], "Next": "dor_generate_notify_failure"}],
      "Next": "dor_import"
    },

    "dor_generate_notify_failure": {
      "Type": "Pass",
      "Result": {
        "task_name": "dor-generate",
        "subject": "Task 'dor-generate' failed in ${environment_name}"
      },
      "ResultPath": "$.task_failure_details",
      "Next": "failure_notification"
    },

    "dor_import": {
      "Comment": "DOR import to RDS",
      "Type": "Task",
      "Resource": "arn:aws:states:::ecs:runTask.sync",
      "TimeoutSeconds": 28800,
      "Parameters": {
        "LaunchType": "FARGATE",
        "PlatformVersion": "1.4.0",
        "Cluster": "${cluster_arn}",
        "TaskDefinition": "pfml-api-${environment_name}-dor-import",
        "Overrides": {
          "ContainerOverrides": [
            {
              "Name": "dor-import",
              "Environment": [
                { "Name": "DECRYPT", "Value": "false" }
              ]
            }
          ]
        },
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "SecurityGroups": ["${security_group}"],
            "Subnets": ["${subnet_1}", "${subnet_2}"],
            "AssignPublicIp": "DISABLED"
          }
        }
      },
      "Retry": [ 
        {
          "ErrorEquals": ["States.TaskFailed"],
          "IntervalSeconds": 1,
          "MaxAttempts": 2,
          "BackoffRate": 2.0
        } 
      ],
      "Catch": [{"ErrorEquals": ["States.ALL"], "Next": "dor_import_notify_failure"}],
      "Next": "load_employers_to_fineos_init"
    },

    "dor_import_notify_failure": {
      "Type": "Pass",
      "Result": {
        "task_name": "dor-import",
        "subject": "Task 'dor-import' failed in ${environment_name}"
      },
      "ResultPath": "$.task_failure_details",
      "Next": "failure_notification"
    },

    "load_employers_to_fineos_init": {
      "Comment": "Set number of load_employers_to_fineos tasks",
      "Type": "Pass",
      "Parameters": {
        "parallel": [
          ["load-employers-to-fineos", "--process-id=1"],
          ["load-employers-to-fineos", "--process-id=2"],
          ["load-employers-to-fineos", "--process-id=3"]
        ]
      },
      "ResultPath": "$.map",
      "OutputPath": "$.map",
      "Next": "load_employers_to_fineos_map"
    },

    "load_employers_to_fineos_map": {
      "Comment": "Create employers in FINEOS using API calls",
      "Type": "Map",
      "ItemsPath": "$.parallel",

      "Iterator": {
        "StartAt": "load_employers_to_fineos",
        "States": {
          "load_employers_to_fineos": {
            "Type": "Task",
            "Resource": "arn:aws:states:::ecs:runTask.sync",
            "TimeoutSeconds": 28800,
            "Parameters": {
              "LaunchType": "FARGATE",
              "PlatformVersion": "1.4.0",
              "Cluster": "${cluster_arn}",
              "TaskDefinition": "pfml-api-${environment_name}-load-employers-to-fineos",
              "Overrides": {
                "ContainerOverrides": [
                  {
                    "Name": "load-employers-to-fineos",
                    "Environment": [
                      { "Name": "EMPLOYER_LOAD_MODE", "Value": "updates" }
                    ],
                    "Command.$": "$"
                  }
                ]
              },
              "NetworkConfiguration": {
                "AwsvpcConfiguration": {
                  "SecurityGroups": ["${security_group}"],
                  "Subnets": ["${subnet_1}", "${subnet_2}"],
                  "AssignPublicIp": "DISABLED"
                }
              }
            },
            "End": true
          }
        }
      },
      "Retry": [ 
        {
          "ErrorEquals": ["States.TaskFailed"],
          "IntervalSeconds": 1,
          "MaxAttempts": 2,
          "BackoffRate": 2.0
        } 
      ],
      "Catch": [{"ErrorEquals": ["States.ALL"], "Next": "load_employers_to_fineos_notify_failure"}],
      "Next": "fineos_eligibility_feed_export"
    },

    "load_employers_to_fineos_notify_failure": {
      "Type": "Pass",
      "Result": {
        "task_name": "load-employers-to-fineos",
        "subject": "Task 'load-employers-to-fineos' failed in ${environment_name}"
      },
      "ResultPath": "$.task_failure_details",
      "Next": "failure_notification"
    },

    "fineos_eligibility_feed_export": {
      "Comment": "Generate eligibility files containing employees for FINEOS",
      "Type": "Task",
      "Resource": "arn:aws:states:::ecs:runTask.sync",
      "TimeoutSeconds": 28800,
      "Parameters": {
        "LaunchType": "FARGATE",
        "PlatformVersion": "1.4.0",
        "Cluster": "${cluster_arn}",
        "TaskDefinition": "pfml-api-${environment_name}-fineos-eligibility-feed-export",
        "Overrides": {
          "ContainerOverrides": [
            {
              "Name": "fineos-eligibility-feed-export",
              "Environment": [
                { "Name": "ELIGIBILITY_FEED_MODE", "Value": "updates" },
                { "Name": "ELIGIBILITY_FEED_UPDATE_BATCH_SIZE", "Value": "50000" }
              ]
            }
          ]
        },
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "SecurityGroups": ["${security_group}"],
            "Subnets": ["${subnet_1}", "${subnet_2}"],
            "AssignPublicIp": "DISABLED"
          }
        }
      },
      "Retry": [ 
        {
          "ErrorEquals": ["States.TaskFailed"],
          "IntervalSeconds": 1,
          "MaxAttempts": 2,
          "BackoffRate": 2.0
        } 
      ],
      "Catch": [{"ErrorEquals": ["States.ALL"], "Next": "fineos_eligibility_feed_export_notify_failure"}],
      "Next": "success"
    },

    "fineos_eligibility_feed_export_notify_failure": {
      "Type": "Pass",
      "Result": {
        "task_name": "fineos-eligibility-feed-export",
        "subject": "Task 'fineos-eligibility-feed-export' failed in ${environment_name}"
      },
      "ResultPath": "$.task_failure_details",
      "Next": "failure_notification"
    },

    "success": {
      "Comment": "Successful end state",
      "Type": "Succeed"
    },

    "failure_notification": {
    %{if task_failure_notification_enabled}
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "TopicArn": "${sns_failure_topic_arn}",
        "Subject.$": "$.task_failure_details.subject",
        "Message": {
          "task_name.$": "$.task_failure_details.task_name",
          "environment": "${environment_name}",
          "error.$": "$.Error",
          "cause.$": "$.Cause"
        }
      },
    %{else}
      "Type": "Pass",
    %{endif}
      "Next": "failure"
    },

    "failure": {
      "Comment": "Failure end state",
      "Type": "Fail"
    }
  }
}
