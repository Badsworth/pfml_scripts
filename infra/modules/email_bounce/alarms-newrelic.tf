
resource "newrelic_alert_policy" "low_priority_api_email_bounce_alerts" {
  name                = "PFML Low Priority API Internal Email Bounce Alerts"
  account_id          = local.newrelic_account_id
  incident_preference = "PER_CONDITION" # a new alarm will sound for every distinct alert condition violated
}

# This key was generated by Kevin Yeh on 10-21-2020 and should be replaced if he leaves.
# This was manually stored in SSM and is not managed through Terraform.
##
data "aws_ssm_parameter" "pagerduty_api_key" {
  name = "/admin/common/pagerduty-api-key"
}

locals {
  low_priority_channel_key  = var.low_priority_nr_integration_key
  high_priority_channel_key = var.high_priority_nr_integration_key

  alert_channel = {
    "test"        = local.low_priority_channel_key,
    "performance" = local.low_priority_channel_key,
    "training"    = local.low_priority_channel_key,
    "stage"       = local.low_priority_channel_key,
    "uat"         = local.low_priority_channel_key,
    "breakfix"    = local.low_priority_channel_key,
    "cps-preview" = local.low_priority_channel_key,
    "prod"        = local.high_priority_channel_key,
  }
}

resource "newrelic_alert_channel" "newrelic_low_priority_email_bounce_notifications" {
  name = "PFML Emails Low priority alerting channel"
  type = "pagerduty"

  config {
    service_key = local.low_priority_channel_key
  }
}

resource "newrelic_alert_policy_channel" "pfml_prod_low_priority_alerts" {
  policy_id = newrelic_alert_policy.low_priority_api_email_bounce_alerts.id
  channel_ids = [
    newrelic_alert_channel.newrelic_low_priority_email_bounce_notifications.id
  ]
}

# ----------------------------------------------------------------------------------------------------------------------
# Alerts relating to the API's bounced emails

resource "newrelic_nrql_alert_condition" "api_bounce_email" {
  name                         = "Email bounced for internal recipient"
  type                         = "static"
  value_function               = "single_value"
  enabled                      = true
  policy_id                    = newrelic_alert_policy.low_priority_api_email_bounce_alerts.id
  violation_time_limit_seconds = 86400 # 24 hours

  nrql {
    evaluation_offset = 3
    query             = <<-NRQL
      SELECT count(*) FROM Log
      WHERE plugin.type = 'aws-firehose'
      AND Message.bounce.bouncedRecipients is not null
      AND ( Message.bounce.bouncedRecipients LIKE '%EOL-DL-DFML-GAXVCC_Confirmation@mass.gov%' 
        OR Message.bounce.bouncedRecipients LIKE '%Accounts.Payable@detma.org%' 
        OR Message.bounce.bouncedRecipients LIKE '%EOL-DL-DFML-Agency-Reductions@mass.gov%' 
        OR Message.bounce.bouncedRecipients LIKE '%mass-pfml-payments-test-email@navapbc.com%')
    NRQL
  }

  critical {
    threshold             = 0
    threshold_duration    = 120
    operator              = "above"
    threshold_occurrences = "at_least_once"
  }
}
