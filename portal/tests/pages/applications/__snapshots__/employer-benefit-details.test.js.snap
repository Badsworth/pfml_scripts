// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EmployerBenefitCard renders fields for an EmployerBenefit instance 1`] = `
<Fragment>
  <InputChoiceGroup
    choices={
      Array [
        Object {
          "checked": false,
          "hint": "For example, vacation time, sick leave, or personal time",
          "label": "Accrued paid leave",
          "value": "Accrued paid leave",
        },
        Object {
          "checked": false,
          "hint": "Also known as temporary disability insurance",
          "label": "Short-term disability insurance",
          "value": "Short-term disability insurance",
        },
        Object {
          "checked": false,
          "hint": "Also known as a permanent disability policy",
          "label": "Permanent disability insurance",
          "value": "Permanent disability insurance",
        },
        Object {
          "checked": false,
          "hint": "For example, a paid maternity leave policy",
          "label": "Family or medical leave insurance",
          "value": "Family or medical leave insurance",
        },
      ]
    }
    label="What kind of benefit is it?"
    name="employer_benefits[0].benefit_type"
    onChange={[Function]}
    smallLabel={true}
    type="radio"
    value=""
  />
  <InputDate
    dayLabel="Day"
    example="mm / dd / yyyy"
    label="When will you start using the benefit?"
    monthLabel="Month"
    name="employer_benefits[0].benefit_start_date"
    onChange={[Function]}
    smallLabel={true}
    value=""
    yearLabel="Year"
  />
  <InputDate
    dayLabel="Day"
    example="mm / dd / yyyy"
    label="When will you stop using the benefit?"
    monthLabel="Month"
    name="employer_benefits[0].benefit_end_date"
    onChange={[Function]}
    smallLabel={true}
    value=""
    yearLabel="Year"
  />
  <ConditionalContent
    visible={false}
  >
    <InputText
      example="For example, $250 every month"
      label="How much will you receive?"
      mask="currency"
      name="employer_benefits[0].benefit_amount_dollars"
      onChange={[Function]}
      optionalText="(optional)"
      smallLabel={true}
      value=""
    />
  </ConditionalContent>
</Fragment>
`;

exports[`EmployerBenefitDetails when the user's claim has employer benefits renders the page 1`] = `
<QuestionPage
  onSave={[Function]}
  title="Other leave, income, and benefits"
>
  <Heading
    level="2"
    size="1"
  >
    Tell us about benefits you will receive from your employer.
  </Heading>
  <LeaveDatesAlert
    endDate="2021-06-01"
    headingLevel="3"
    startDate="2021-01-01"
  />
  <RepeatableFieldset
    addButtonLabel="Add another benefit"
    entries={
      Array [
        EmployerBenefit {
          "benefit_amount_dollars": 500,
          "benefit_amount_frequency": "Per Week",
          "benefit_end_date": "2021-02-01",
          "benefit_start_date": "2021-01-01",
          "benefit_type": "Family or medical leave insurance",
          "id": 1,
        },
      ]
    }
    headingPrefix="Benefit"
    onAddClick={[Function]}
    onRemoveClick={[Function]}
    removeButtonLabel="Remove benefit"
    render={[Function]}
  />
</QuestionPage>
`;
