// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EmployerBenefitCard renders fields for an EmployerBenefit instance 1`] = `
<Fragment>
  <InputChoiceGroup
    choices={
      Array [
        Object {
          "checked": false,
          "hint": "Short-term or long-term disability",
          "label": "Temporary disability insurance",
          "value": "Short-term disability insurance",
        },
        Object {
          "checked": false,
          "hint": false,
          "label": "Permanent disability insurance",
          "value": "Permanent disability insurance",
        },
        Object {
          "checked": false,
          "hint": "For example, a paid parental leave policy",
          "label": "Family or medical leave insurance",
          "value": "Family or medical leave insurance",
        },
      ]
    }
    label="What kind of employer-sponsored benefit is it?"
    name="employer_benefits[0].benefit_type"
    onChange={[Function]}
    smallLabel={true}
    type="radio"
    value=""
  />
  <InputDate
    dayLabel="Day"
    example="mm / dd / yyyy"
    label="What is the first day of leave from work that this benefit will pay you for?"
    monthLabel="Month"
    name="employer_benefits[0].benefit_start_date"
    onChange={[Function]}
    smallLabel={true}
    value=""
    yearLabel="Year"
  />
  <InputDate
    dayLabel="Day"
    example="mm / dd / yyyy"
    label="What is the last day of leave from work that this benefit will pay you for?"
    monthLabel="Month"
    name="employer_benefits[0].benefit_end_date"
    onChange={[Function]}
    optionalText="(optional)"
    smallLabel={true}
    value=""
    yearLabel="Year"
  />
  <InputChoiceGroup
    choices={
      Array [
        Object {
          "checked": false,
          "label": "Yes",
          "value": "true",
        },
        Object {
          "checked": false,
          "label": "No",
          "value": "false",
        },
      ]
    }
    label="Does this employer-sponsored benefit fully replace your wages?"
    name="employer_benefits[0].is_full_salary_continuous"
    onChange={[Function]}
    smallLabel={true}
    type="radio"
    value=""
  />
  <ConditionalContent
    clearField={[Function]}
    fieldNamesClearedWhenHidden={
      Array [
        "employer_benefits[0].benefit_amount_frequency",
        "employer_benefits[0].benefit_amount_dollars",
      ]
    }
    getField={[Function]}
    updateFields={[MockFunction]}
    visible={false}
  >
    <Fieldset>
      <FormLabel
        component="legend"
        optionalText="(optional)"
        small={true}
      >
        How much will you receive?
      </FormLabel>
      <InputCurrency
        formGroupClassName="margin-top-05"
        label="Amount"
        labelClassName="text-normal margin-top-0"
        name="employer_benefits[0].benefit_amount_dollars"
        onChange={[Function]}
        smallLabel={true}
        value={null}
      />
      <Dropdown
        choices={
          Array [
            Object {
              "label": "Daily",
              "value": "Per Day",
            },
            Object {
              "label": "Weekly",
              "value": "Per Week",
            },
            Object {
              "label": "Monthly",
              "value": "Per Month",
            },
            Object {
              "label": "All at once",
              "value": "In Total",
            },
          ]
        }
        label="Frequency"
        labelClassName="text-normal margin-top-0"
        name="employer_benefits[0].benefit_amount_frequency"
        onChange={[Function]}
        smallLabel={true}
        value=""
      />
    </Fieldset>
  </ConditionalContent>
</Fragment>
`;

exports[`EmployerBenefitsDetails when the user's claim has employer benefits renders the page 1`] = `
<QuestionPage
  onSave={[Function]}
  title="Other leave, benefits, and income"
>
  <Heading
    level="2"
    size="1"
  >
    Tell us about employer-sponsored benefits you will use during your leave dates for paid leave.
  </Heading>
  <LeaveDatesAlert
    endDate="2021-06-01"
    headingLevel="3"
    startDate="2021-01-01"
  />
  <RepeatableFieldset
    addButtonLabel="Add another benefit"
    entries={
      Array [
        EmployerBenefit {
          "benefit_amount_dollars": 500,
          "benefit_amount_frequency": "Per Week",
          "benefit_end_date": "2021-02-01",
          "benefit_start_date": "2021-01-01",
          "benefit_type": "Family or medical leave insurance",
          "employer_benefit_id": null,
          "is_full_salary_continuous": true,
        },
        EmployerBenefit {
          "benefit_amount_dollars": 700,
          "benefit_amount_frequency": "Per Month",
          "benefit_end_date": "2021-02-05",
          "benefit_start_date": "2021-01-05",
          "benefit_type": "Permanent disability insurance",
          "employer_benefit_id": null,
          "is_full_salary_continuous": false,
        },
      ]
    }
    headingPrefix="Benefit"
    limit={6}
    limitMessage="You can only add up to 3 benefits"
    onAddClick={[Function]}
    onRemoveClick={[Function]}
    removeButtonLabel="Remove benefit"
    render={[Function]}
  />
</QuestionPage>
`;

exports[`EmployerBenefitsDetails when the user's claim has no employer benefits renders the page 1`] = `
<QuestionPage
  onSave={[Function]}
  title="Other leave, benefits, and income"
>
  <Heading
    level="2"
    size="1"
  >
    Tell us about employer-sponsored benefits you will use during your leave dates for paid leave.
  </Heading>
  <LeaveDatesAlert
    endDate="2021-06-01"
    headingLevel="3"
    startDate="2021-01-01"
  />
  <RepeatableFieldset
    addButtonLabel="Add another benefit"
    entries={
      Array [
        EmployerBenefit {
          "benefit_amount_dollars": null,
          "benefit_amount_frequency": null,
          "benefit_end_date": null,
          "benefit_start_date": null,
          "benefit_type": null,
          "employer_benefit_id": null,
          "is_full_salary_continuous": null,
        },
      ]
    }
    headingPrefix="Benefit"
    limit={6}
    limitMessage="You can only add up to 3 benefits"
    onAddClick={[Function]}
    onRemoveClick={[Function]}
    removeButtonLabel="Remove benefit"
    render={[Function]}
  />
</QuestionPage>
`;
