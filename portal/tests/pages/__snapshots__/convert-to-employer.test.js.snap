// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConvertToEmployer renders form 1`] = `
Object {
  "appLogic": Object {
    "appErrors": AppErrorInfoCollection {
      "items": Array [],
      "itemsById": Object {},
    },
    "auth": Object {
      "createAccount": [MockFunction],
      "createEmployerAccount": [MockFunction],
      "forgotPassword": [MockFunction],
      "isLoggedIn": true,
      "login": [MockFunction],
      "logout": [MockFunction],
      "requireLogin": [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
      "resendForgotPasswordCode": [MockFunction],
      "resendVerifyAccountCode": [MockFunction],
      "resetEmployerPasswordAndCreateEmployerApiAccount": [MockFunction],
      "resetPassword": [MockFunction],
      "verifyAccount": [MockFunction],
      "verifyEmployerAccount": [MockFunction],
    },
    "catchError": [MockFunction],
    "claims": Object {
      "claims": ClaimCollection {
        "items": Array [],
        "itemsById": Object {},
      },
      "complete": [MockFunction],
      "create": [MockFunction],
      "get": [MockFunction],
      "hasLoadedAll": false,
      "hasLoadedClaimAndWarnings": [MockFunction],
      "load": [MockFunction],
      "loadAll": [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
      "submit": [MockFunction],
      "submitPaymentPreference": [MockFunction],
      "update": [MockFunction],
      "warningsLists": Object {},
    },
    "clearErrors": [MockFunction],
    "documents": Object {
      "attach": [MockFunction],
      "documents": DocumentCollection {
        "items": Array [],
        "itemsById": Object {},
      },
      "hasLoadedClaimDocuments": [MockFunction],
      "loadAll": [MockFunction],
    },
    "employers": Object {
      "addEmployer": [MockFunction],
      "downloadDocument": [MockFunction],
      "loadClaim": [MockFunction],
      "loadDocuments": [MockFunction],
      "loadWithholding": [MockFunction],
      "submitClaimReview": [MockFunction],
      "submitWithholding": [MockFunction],
    },
    "otherLeaves": Object {
      "removeEmployerBenefit": [MockFunction],
      "removeOtherIncome": [MockFunction],
      "removePreviousLeave": [MockFunction],
    },
    "portalFlow": Object {
      "getNextPageRoute": [MockFunction],
      "goTo": [MockFunction],
      "goToNextPage": [MockFunction],
      "goToPageFor": [MockFunction],
      "pathname": "/mock-portalFlow-pathname",
    },
    "setAppErrors": [MockFunction],
    "updateUser": [MockFunction],
    "user": User {
      "auth_id": null,
      "consented_to_data_sharing": true,
      "email_address": null,
      "roles": Array [],
      "status": null,
      "user_id": "mock_user_id",
      "user_leave_administrators": Array [],
    },
    "users": Object {
      "loadUser": [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
      "requireUserConsentToDataAgreement": [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
      "requireUserRole": [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
      "updateUser": [MockFunction],
      "user": User {
        "auth_id": null,
        "consented_to_data_sharing": true,
        "email_address": null,
        "roles": Array [],
        "status": null,
        "user_id": "mock_user_id",
        "user_leave_administrators": Array [
          UserLeaveAdministrator {
            "employer_dba": "Book Bindings 'R Us",
            "employer_fein": "**-***1823",
            "employer_id": "dda903f-f093f-ff900",
            "has_verification_data": true,
            "verified": false,
          },
          UserLeaveAdministrator {
            "employer_dba": "Knitting Castle",
            "employer_fein": "**-***3443",
            "employer_id": "dda930f-93jfk-iej08",
            "has_verification_data": true,
            "verified": true,
          },
          UserLeaveAdministrator {
            "employer_dba": "Tomato Touchdown",
            "employer_fein": "**-***7192",
            "employer_id": "io19fj9-00jjf-uiw3r",
            "has_verification_data": false,
            "verified": false,
          },
        ],
      },
    },
  },
  "claims": ClaimCollection {
    "items": Array [],
    "itemsById": Object {},
  },
  "user": User {
    "auth_id": null,
    "consented_to_data_sharing": true,
    "email_address": null,
    "roles": Array [],
    "status": null,
    "user_id": null,
    "user_leave_administrators": Array [],
  },
  "wrapper": <ComponentWithUser
    appLogic={
      Object {
        "appErrors": AppErrorInfoCollection {
          "items": Array [],
          "itemsById": Object {},
        },
        "auth": Object {
          "createAccount": [MockFunction],
          "createEmployerAccount": [MockFunction],
          "forgotPassword": [MockFunction],
          "isLoggedIn": true,
          "login": [MockFunction],
          "logout": [MockFunction],
          "requireLogin": [MockFunction] {
            "calls": Array [
              Array [],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          },
          "resendForgotPasswordCode": [MockFunction],
          "resendVerifyAccountCode": [MockFunction],
          "resetEmployerPasswordAndCreateEmployerApiAccount": [MockFunction],
          "resetPassword": [MockFunction],
          "verifyAccount": [MockFunction],
          "verifyEmployerAccount": [MockFunction],
        },
        "catchError": [MockFunction],
        "claims": Object {
          "claims": ClaimCollection {
            "items": Array [],
            "itemsById": Object {},
          },
          "complete": [MockFunction],
          "create": [MockFunction],
          "get": [MockFunction],
          "hasLoadedAll": false,
          "hasLoadedClaimAndWarnings": [MockFunction],
          "load": [MockFunction],
          "loadAll": [MockFunction] {
            "calls": Array [
              Array [],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          },
          "submit": [MockFunction],
          "submitPaymentPreference": [MockFunction],
          "update": [MockFunction],
          "warningsLists": Object {},
        },
        "clearErrors": [MockFunction],
        "documents": Object {
          "attach": [MockFunction],
          "documents": DocumentCollection {
            "items": Array [],
            "itemsById": Object {},
          },
          "hasLoadedClaimDocuments": [MockFunction],
          "loadAll": [MockFunction],
        },
        "employers": Object {
          "addEmployer": [MockFunction],
          "downloadDocument": [MockFunction],
          "loadClaim": [MockFunction],
          "loadDocuments": [MockFunction],
          "loadWithholding": [MockFunction],
          "submitClaimReview": [MockFunction],
          "submitWithholding": [MockFunction],
        },
        "otherLeaves": Object {
          "removeEmployerBenefit": [MockFunction],
          "removeOtherIncome": [MockFunction],
          "removePreviousLeave": [MockFunction],
        },
        "portalFlow": Object {
          "getNextPageRoute": [MockFunction],
          "goTo": [MockFunction],
          "goToNextPage": [MockFunction],
          "goToPageFor": [MockFunction],
          "pathname": "/mock-portalFlow-pathname",
        },
        "setAppErrors": [MockFunction],
        "updateUser": [MockFunction],
        "user": User {
          "auth_id": null,
          "consented_to_data_sharing": true,
          "email_address": null,
          "roles": Array [],
          "status": null,
          "user_id": "mock_user_id",
          "user_leave_administrators": Array [],
        },
        "users": Object {
          "loadUser": [MockFunction] {
            "calls": Array [
              Array [],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          },
          "requireUserConsentToDataAgreement": [MockFunction] {
            "calls": Array [
              Array [],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          },
          "requireUserRole": [MockFunction] {
            "calls": Array [
              Array [],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          },
          "updateUser": [MockFunction],
          "user": User {
            "auth_id": null,
            "consented_to_data_sharing": true,
            "email_address": null,
            "roles": Array [],
            "status": null,
            "user_id": "mock_user_id",
            "user_leave_administrators": Array [
              UserLeaveAdministrator {
                "employer_dba": "Book Bindings 'R Us",
                "employer_fein": "**-***1823",
                "employer_id": "dda903f-f093f-ff900",
                "has_verification_data": true,
                "verified": false,
              },
              UserLeaveAdministrator {
                "employer_dba": "Knitting Castle",
                "employer_fein": "**-***3443",
                "employer_id": "dda930f-93jfk-iej08",
                "has_verification_data": true,
                "verified": true,
              },
              UserLeaveAdministrator {
                "employer_dba": "Tomato Touchdown",
                "employer_fein": "**-***7192",
                "employer_id": "io19fj9-00jjf-uiw3r",
                "has_verification_data": false,
                "verified": false,
              },
            ],
          },
        },
      }
    }
    claims={
      ClaimCollection {
        "items": Array [],
        "itemsById": Object {},
      }
    }
    query={
      Object {
        "claim_id": "mock_application_id",
      }
    }
    user={
      User {
        "auth_id": null,
        "consented_to_data_sharing": true,
        "email_address": null,
        "roles": Array [],
        "status": null,
        "user_id": null,
        "user_leave_administrators": Array [],
      }
    }
  >
    <ComponentWithClaims
      appLogic={
        Object {
          "appErrors": AppErrorInfoCollection {
            "items": Array [],
            "itemsById": Object {},
          },
          "auth": Object {
            "createAccount": [MockFunction],
            "createEmployerAccount": [MockFunction],
            "forgotPassword": [MockFunction],
            "isLoggedIn": true,
            "login": [MockFunction],
            "logout": [MockFunction],
            "requireLogin": [MockFunction] {
              "calls": Array [
                Array [],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            },
            "resendForgotPasswordCode": [MockFunction],
            "resendVerifyAccountCode": [MockFunction],
            "resetEmployerPasswordAndCreateEmployerApiAccount": [MockFunction],
            "resetPassword": [MockFunction],
            "verifyAccount": [MockFunction],
            "verifyEmployerAccount": [MockFunction],
          },
          "catchError": [MockFunction],
          "claims": Object {
            "claims": ClaimCollection {
              "items": Array [],
              "itemsById": Object {},
            },
            "complete": [MockFunction],
            "create": [MockFunction],
            "get": [MockFunction],
            "hasLoadedAll": false,
            "hasLoadedClaimAndWarnings": [MockFunction],
            "load": [MockFunction],
            "loadAll": [MockFunction] {
              "calls": Array [
                Array [],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            },
            "submit": [MockFunction],
            "submitPaymentPreference": [MockFunction],
            "update": [MockFunction],
            "warningsLists": Object {},
          },
          "clearErrors": [MockFunction],
          "documents": Object {
            "attach": [MockFunction],
            "documents": DocumentCollection {
              "items": Array [],
              "itemsById": Object {},
            },
            "hasLoadedClaimDocuments": [MockFunction],
            "loadAll": [MockFunction],
          },
          "employers": Object {
            "addEmployer": [MockFunction],
            "downloadDocument": [MockFunction],
            "loadClaim": [MockFunction],
            "loadDocuments": [MockFunction],
            "loadWithholding": [MockFunction],
            "submitClaimReview": [MockFunction],
            "submitWithholding": [MockFunction],
          },
          "otherLeaves": Object {
            "removeEmployerBenefit": [MockFunction],
            "removeOtherIncome": [MockFunction],
            "removePreviousLeave": [MockFunction],
          },
          "portalFlow": Object {
            "getNextPageRoute": [MockFunction],
            "goTo": [MockFunction],
            "goToNextPage": [MockFunction],
            "goToPageFor": [MockFunction],
            "pathname": "/mock-portalFlow-pathname",
          },
          "setAppErrors": [MockFunction],
          "updateUser": [MockFunction],
          "user": User {
            "auth_id": null,
            "consented_to_data_sharing": true,
            "email_address": null,
            "roles": Array [],
            "status": null,
            "user_id": "mock_user_id",
            "user_leave_administrators": Array [],
          },
          "users": Object {
            "loadUser": [MockFunction] {
              "calls": Array [
                Array [],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            },
            "requireUserConsentToDataAgreement": [MockFunction] {
              "calls": Array [
                Array [],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            },
            "requireUserRole": [MockFunction] {
              "calls": Array [
                Array [],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            },
            "updateUser": [MockFunction],
            "user": User {
              "auth_id": null,
              "consented_to_data_sharing": true,
              "email_address": null,
              "roles": Array [],
              "status": null,
              "user_id": "mock_user_id",
              "user_leave_administrators": Array [
                UserLeaveAdministrator {
                  "employer_dba": "Book Bindings 'R Us",
                  "employer_fein": "**-***1823",
                  "employer_id": "dda903f-f093f-ff900",
                  "has_verification_data": true,
                  "verified": false,
                },
                UserLeaveAdministrator {
                  "employer_dba": "Knitting Castle",
                  "employer_fein": "**-***3443",
                  "employer_id": "dda930f-93jfk-iej08",
                  "has_verification_data": true,
                  "verified": true,
                },
                UserLeaveAdministrator {
                  "employer_dba": "Tomato Touchdown",
                  "employer_fein": "**-***7192",
                  "employer_id": "io19fj9-00jjf-uiw3r",
                  "has_verification_data": false,
                  "verified": false,
                },
              ],
            },
          },
        }
      }
      claims={
        ClaimCollection {
          "items": Array [],
          "itemsById": Object {},
        }
      }
      query={
        Object {
          "claim_id": "mock_application_id",
        }
      }
      user={
        User {
          "auth_id": null,
          "consented_to_data_sharing": true,
          "email_address": null,
          "roles": Array [],
          "status": null,
          "user_id": "mock_user_id",
          "user_leave_administrators": Array [
            UserLeaveAdministrator {
              "employer_dba": "Book Bindings 'R Us",
              "employer_fein": "**-***1823",
              "employer_id": "dda903f-f093f-ff900",
              "has_verification_data": true,
              "verified": false,
            },
            UserLeaveAdministrator {
              "employer_dba": "Knitting Castle",
              "employer_fein": "**-***3443",
              "employer_id": "dda930f-93jfk-iej08",
              "has_verification_data": true,
              "verified": true,
            },
            UserLeaveAdministrator {
              "employer_dba": "Tomato Touchdown",
              "employer_fein": "**-***7192",
              "employer_id": "io19fj9-00jjf-uiw3r",
              "has_verification_data": false,
              "verified": false,
            },
          ],
        }
      }
    >
      <div
        className="margin-top-8 text-center"
      >
        <Spinner
          aria-valuetext="Loading claims"
        >
          <span
            aria-valuetext="Loading claims"
            className="c-spinner"
            role="progressbar"
          />
        </Spinner>
      </div>
    </ComponentWithClaims>
  </ComponentWithUser>,
}
`;
