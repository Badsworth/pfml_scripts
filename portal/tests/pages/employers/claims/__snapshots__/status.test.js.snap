// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Status when the claim is loaded via passed-in prop renders the page without a spinner 1`] = `
<Fragment>
  <BackButton />
  <Title>
    Notices for Jane Doe
  </Title>
  <Lead>
    <Trans
      i18nKey="pages.employersClaimsStatus.lead"
    />
  </Lead>
  <Heading
    level="2"
  >
    Leave details
  </Heading>
  <div
    className="border-bottom-2px border-base-lighter"
  >
    <StatusRow
      label="Application ID"
    >
      NTN-111-ABS-01
    </StatusRow>
    <StatusRow
      label="Status"
    >
      <StatusTag
        state="approved"
      />
    </StatusRow>
    <StatusRow
      label="Leave type"
    >
      Medical leave
    </StatusRow>
    <StatusRow
      label="Leave duration"
    >
      1/1/2021 â€“ 6/1/2021
    </StatusRow>
  </div>
  <Heading
    level="2"
  >
    Notices
  </Heading>
  <div>
    <p>
      <a
        href="/"
      >
        Benefit determination notice (PDF)
      </a>
    </p>
    <p
      className="margin-top-1"
    >
      Posted 1/22/2021
    </p>
  </div>
</Fragment>
`;

exports[`Status while the claim is not loaded renders the page with a spinner 1`] = `
<ComponentWithUser
  appLogic={
    Object {
      "appErrors": AppErrorInfoCollection {
        "items": Array [],
        "itemsById": Object {},
      },
      "auth": Object {
        "createAccount": [MockFunction],
        "forgotPassword": [MockFunction],
        "isLoggedIn": true,
        "login": [MockFunction],
        "logout": [MockFunction],
        "requireLogin": [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "resendVerifyAccountCode": [MockFunction],
        "verifyAccount": [MockFunction],
      },
      "catchError": [MockFunction],
      "claims": Object {
        "claims": ClaimCollection {
          "items": Array [],
          "itemsById": Object {},
        },
        "complete": [MockFunction],
        "create": [MockFunction],
        "get": [MockFunction],
        "hasLoadedAll": false,
        "hasLoadedClaimAndWarnings": [MockFunction],
        "load": [MockFunction],
        "loadAll": [MockFunction],
        "submit": [MockFunction],
        "update": [MockFunction],
        "warningsLists": Object {},
      },
      "documents": Object {
        "attach": [MockFunction],
        "documents": DocumentCollection {
          "items": Array [],
          "itemsById": Object {},
        },
        "hasLoadedClaimDocuments": [MockFunction],
        "loadAll": [MockFunction],
      },
      "employers": Object {
        "load": [MockFunction] {
          "calls": Array [
            Array [
              "NTN-111-ABS-01",
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": Claim {
                "application_id": null,
                "created_at": null,
                "date_of_birth": null,
                "employer_benefits": Array [],
                "employer_fein": null,
                "employment_status": null,
                "fineos_absence_id": "NTN-111-ABS-01",
                "first_name": null,
                "has_continuous_leave_periods": null,
                "has_intermittent_leave_periods": null,
                "has_mailing_address": null,
                "has_reduced_schedule_leave_periods": null,
                "has_state_id": null,
                "hours_worked_per_week": null,
                "last_name": null,
                "leave_details": Object {
                  "child_birth_date": null,
                  "child_placement_date": null,
                  "continuous_leave_periods": null,
                  "employer_notification_date": null,
                  "employer_notified": null,
                  "intermittent_leave_periods": null,
                  "pregnant_or_recent_birth": null,
                  "reason": null,
                  "reason_qualifier": null,
                  "reduced_schedule_leave_periods": null,
                },
                "mailing_address": null,
                "mass_id": null,
                "middle_name": null,
                "other_incomes": Array [],
                "payment_preferences": Array [
                  Object {
                    "account_details": Object {
                      "account_number": null,
                      "account_type": null,
                      "routing_number": null,
                    },
                    "payment_method": null,
                    "payment_preference_id": null,
                  },
                ],
                "previous_leaves": Array [],
                "residential_address": Address {
                  "city": null,
                  "line_1": null,
                  "line_2": null,
                  "state": null,
                  "zip": null,
                },
                "status": null,
                "tax_identifier": null,
                "temp": Object {
                  "has_employer_benefits": null,
                  "has_other_incomes": null,
                  "has_previous_leaves": null,
                },
                "work_pattern": null,
              },
            },
          ],
        },
        "submit": [MockFunction],
      },
      "portalFlow": Object {
        "goToNextPage": [MockFunction],
        "goToPageFor": [MockFunction],
        "pathname": "/mock-portalFlow-pathname",
      },
      "setAppErrors": [MockFunction],
      "updateUser": [MockFunction],
      "user": User {
        "auth_id": null,
        "consented_to_data_sharing": true,
        "email_address": null,
        "status": null,
        "user_id": "mock_user_id",
      },
      "users": Object {
        "loadUser": [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "requireUserConsentToDataAgreement": [MockFunction] {
          "calls": Array [
            Array [],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        },
        "updateUser": [MockFunction],
        "user": User {
          "auth_id": null,
          "consented_to_data_sharing": true,
          "email_address": null,
          "status": null,
          "user_id": "mock_user_id",
        },
      },
    }
  }
  query={
    Object {
      "absence_id": "NTN-111-ABS-01",
    }
  }
>
  <Status
    appLogic={
      Object {
        "appErrors": AppErrorInfoCollection {
          "items": Array [],
          "itemsById": Object {},
        },
        "auth": Object {
          "createAccount": [MockFunction],
          "forgotPassword": [MockFunction],
          "isLoggedIn": true,
          "login": [MockFunction],
          "logout": [MockFunction],
          "requireLogin": [MockFunction] {
            "calls": Array [
              Array [],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          },
          "resendVerifyAccountCode": [MockFunction],
          "verifyAccount": [MockFunction],
        },
        "catchError": [MockFunction],
        "claims": Object {
          "claims": ClaimCollection {
            "items": Array [],
            "itemsById": Object {},
          },
          "complete": [MockFunction],
          "create": [MockFunction],
          "get": [MockFunction],
          "hasLoadedAll": false,
          "hasLoadedClaimAndWarnings": [MockFunction],
          "load": [MockFunction],
          "loadAll": [MockFunction],
          "submit": [MockFunction],
          "update": [MockFunction],
          "warningsLists": Object {},
        },
        "documents": Object {
          "attach": [MockFunction],
          "documents": DocumentCollection {
            "items": Array [],
            "itemsById": Object {},
          },
          "hasLoadedClaimDocuments": [MockFunction],
          "loadAll": [MockFunction],
        },
        "employers": Object {
          "load": [MockFunction] {
            "calls": Array [
              Array [
                "NTN-111-ABS-01",
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": Claim {
                  "application_id": null,
                  "created_at": null,
                  "date_of_birth": null,
                  "employer_benefits": Array [],
                  "employer_fein": null,
                  "employment_status": null,
                  "fineos_absence_id": "NTN-111-ABS-01",
                  "first_name": null,
                  "has_continuous_leave_periods": null,
                  "has_intermittent_leave_periods": null,
                  "has_mailing_address": null,
                  "has_reduced_schedule_leave_periods": null,
                  "has_state_id": null,
                  "hours_worked_per_week": null,
                  "last_name": null,
                  "leave_details": Object {
                    "child_birth_date": null,
                    "child_placement_date": null,
                    "continuous_leave_periods": null,
                    "employer_notification_date": null,
                    "employer_notified": null,
                    "intermittent_leave_periods": null,
                    "pregnant_or_recent_birth": null,
                    "reason": null,
                    "reason_qualifier": null,
                    "reduced_schedule_leave_periods": null,
                  },
                  "mailing_address": null,
                  "mass_id": null,
                  "middle_name": null,
                  "other_incomes": Array [],
                  "payment_preferences": Array [
                    Object {
                      "account_details": Object {
                        "account_number": null,
                        "account_type": null,
                        "routing_number": null,
                      },
                      "payment_method": null,
                      "payment_preference_id": null,
                    },
                  ],
                  "previous_leaves": Array [],
                  "residential_address": Address {
                    "city": null,
                    "line_1": null,
                    "line_2": null,
                    "state": null,
                    "zip": null,
                  },
                  "status": null,
                  "tax_identifier": null,
                  "temp": Object {
                    "has_employer_benefits": null,
                    "has_other_incomes": null,
                    "has_previous_leaves": null,
                  },
                  "work_pattern": null,
                },
              },
            ],
          },
          "submit": [MockFunction],
        },
        "portalFlow": Object {
          "goToNextPage": [MockFunction],
          "goToPageFor": [MockFunction],
          "pathname": "/mock-portalFlow-pathname",
        },
        "setAppErrors": [MockFunction],
        "updateUser": [MockFunction],
        "user": User {
          "auth_id": null,
          "consented_to_data_sharing": true,
          "email_address": null,
          "status": null,
          "user_id": "mock_user_id",
        },
        "users": Object {
          "loadUser": [MockFunction] {
            "calls": Array [
              Array [],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          },
          "requireUserConsentToDataAgreement": [MockFunction] {
            "calls": Array [
              Array [],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          },
          "updateUser": [MockFunction],
          "user": User {
            "auth_id": null,
            "consented_to_data_sharing": true,
            "email_address": null,
            "status": null,
            "user_id": "mock_user_id",
          },
        },
      }
    }
    query={
      Object {
        "absence_id": "NTN-111-ABS-01",
      }
    }
    user={
      User {
        "auth_id": null,
        "consented_to_data_sharing": true,
        "email_address": null,
        "status": null,
        "user_id": "mock_user_id",
      }
    }
  >
    <div
      className="margin-top-8 text-center"
    >
      <Spinner
        aria-valuetext="Loading"
      >
        <span
          aria-valuetext="Loading"
          className="c-spinner"
          role="progressbar"
        />
      </Spinner>
    </div>
  </Status>
</ComponentWithUser>
`;
