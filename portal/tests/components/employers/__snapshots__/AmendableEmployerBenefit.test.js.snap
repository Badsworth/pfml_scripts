// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AmendableEmployerBenefit for added benefits renders the component without a table row 1`] = `
<Fragment>
  <ConditionalContent
    visible={true}
  >
    <tr>
      <td
        className="padding-y-2 padding-left-0"
        colSpan="1"
      >
        <AmendmentForm
          className="bg-white"
          destroyButtonLabel="Cancel addition"
          onDestroy={[Function]}
        >
          <Heading
            level="4"
          >
            Add an employer-sponsored benefit
          </Heading>
          <p>
            This addition will get saved when you submit your review at the end of the page.
          </p>
          <ConditionalContent
            visible={true}
          >
            <InputChoiceGroup
              choices={
                Array [
                  Object {
                    "checked": true,
                    "hint": "Short-term or long-term disability",
                    "label": "Temporary disability insurance",
                    "value": "Short-term disability insurance",
                  },
                  Object {
                    "checked": false,
                    "hint": false,
                    "label": "Permanent disability insurance",
                    "value": "Permanent disability insurance",
                  },
                  Object {
                    "checked": false,
                    "hint": "For example, a paid parental leave policy",
                    "label": "Family or medical leave insurance",
                    "value": "Family or medical leave insurance",
                  },
                ]
              }
              label="What kind of employer-sponsored benefit is it?"
              name="employer_benefits[0].benefit_type"
              onChange={[Function]}
              smallLabel={true}
              type="radio"
            />
          </ConditionalContent>
          <InputDate
            dayLabel="Day"
            errorMsg={null}
            label="What is the first day of leave from work that this benefit will pay your employee for?"
            monthLabel="Month"
            name="employer_benefits[0].benefit_start_date"
            onChange={[Function]}
            smallLabel={true}
            value="2021-02-01"
            yearLabel="Year"
          />
          <InputDate
            dayLabel="Day"
            errorMsg={null}
            label="What is the last day of leave from work that this benefit will pay your employee for?"
            monthLabel="Month"
            name="employer_benefits[0].benefit_end_date"
            onChange={[Function]}
            optionalText="(optional)"
            smallLabel={true}
            value="2021-03-01"
            yearLabel="Year"
          />
          <ConditionalContent
            visible={true}
          >
            <InputChoiceGroup
              choices={
                Array [
                  Object {
                    "checked": false,
                    "label": "Yes",
                    "value": "true",
                  },
                  Object {
                    "checked": false,
                    "label": "No",
                    "value": "false",
                  },
                ]
              }
              errorMsg={null}
              hint="This means that for the period of time your employee receives this benefit, it will pay them the same amount of money as their wages from while they're not on leave. If this benefit will pay them any other amount, select No."
              label="Does this employer-sponsored benefit fully replace your employee's wages?"
              name="employer_benefits[0].is_full_salary_continuous"
              onChange={[Function]}
              optionalText="(optional)"
              smallLabel={true}
              type="radio"
            />
            <ConditionalContent
              visible={false}
            >
              <Fieldset>
                <FormLabel
                  component="legend"
                  optionalText="(optional)"
                  small={true}
                >
                  How much will your employee receive?
                </FormLabel>
                <InputCurrency
                  errorMsg={null}
                  label="Amount"
                  labelClassName="text-normal"
                  name="employer_benefits[0].benefit_amount_dollars"
                  onChange={[Function]}
                  smallLabel={true}
                  value={1000}
                  width="small"
                />
                <Dropdown
                  choices={
                    Array [
                      Object {
                        "label": "Daily",
                        "value": "Per Day",
                      },
                      Object {
                        "label": "Weekly",
                        "value": "Per Week",
                      },
                      Object {
                        "label": "Monthly",
                        "value": "Per Month",
                      },
                      Object {
                        "label": "All at once",
                        "value": "In Total",
                      },
                      Object {
                        "label": "Unknown",
                        "value": "Unknown",
                      },
                    ]
                  }
                  errorMsg={null}
                  label="Frequency"
                  labelClassName="text-normal"
                  name="employer_benefits[0].benefit_amount_frequency"
                  onChange={[Function]}
                  smallLabel={true}
                  value="Per Month"
                />
              </Fieldset>
            </ConditionalContent>
          </ConditionalContent>
        </AmendmentForm>
      </td>
    </tr>
  </ConditionalContent>
</Fragment>
`;

exports[`AmendableEmployerBenefit for amended benefits renders the component with a table row for existing data 1`] = `
<Fragment>
  <BenefitDetailsRow />
  <ConditionalContent
    visible={false}
  >
    <tr>
      <td
        className="padding-y-2 padding-left-0"
        colSpan="1"
      >
        <AmendmentForm
          className="bg-base-lightest border-base-lighter"
          destroyButtonLabel="Cancel amendment"
          onDestroy={[Function]}
        >
          <Heading
            level="4"
          >
            Amend employer-sponsored benefit
          </Heading>
          <p>
            This amendment will get saved when you submit your review at the end of the page.
          </p>
          <ConditionalContent
            visible={true}
          >
            <InputChoiceGroup
              choices={
                Array [
                  Object {
                    "checked": true,
                    "hint": "Short-term or long-term disability",
                    "label": "Temporary disability insurance",
                    "value": "Short-term disability insurance",
                  },
                  Object {
                    "checked": false,
                    "hint": false,
                    "label": "Permanent disability insurance",
                    "value": "Permanent disability insurance",
                  },
                  Object {
                    "checked": false,
                    "hint": "For example, a paid parental leave policy",
                    "label": "Family or medical leave insurance",
                    "value": "Family or medical leave insurance",
                  },
                ]
              }
              label="What kind of employer-sponsored benefit is it?"
              name="employer_benefits[0].benefit_type"
              onChange={[Function]}
              smallLabel={true}
              type="radio"
            />
          </ConditionalContent>
          <InputDate
            dayLabel="Day"
            errorMsg={null}
            label="What is the first day of leave from work that this benefit will pay your employee for?"
            monthLabel="Month"
            name="employer_benefits[0].benefit_start_date"
            onChange={[Function]}
            smallLabel={true}
            value="2021-02-01"
            yearLabel="Year"
          />
          <InputDate
            dayLabel="Day"
            errorMsg={null}
            label="What is the last day of leave from work that this benefit will pay your employee for?"
            monthLabel="Month"
            name="employer_benefits[0].benefit_end_date"
            onChange={[Function]}
            optionalText="(optional)"
            smallLabel={true}
            value="2021-03-01"
            yearLabel="Year"
          />
          <ConditionalContent
            visible={true}
          >
            <InputChoiceGroup
              choices={
                Array [
                  Object {
                    "checked": false,
                    "label": "Yes",
                    "value": "true",
                  },
                  Object {
                    "checked": false,
                    "label": "No",
                    "value": "false",
                  },
                ]
              }
              errorMsg={null}
              hint="This means that for the period of time your employee receives this benefit, it will pay them the same amount of money as their wages from while they're not on leave. If this benefit will pay them any other amount, select No."
              label="Does this employer-sponsored benefit fully replace your employee's wages?"
              name="employer_benefits[0].is_full_salary_continuous"
              onChange={[Function]}
              optionalText="(optional)"
              smallLabel={true}
              type="radio"
            />
            <ConditionalContent
              visible={false}
            >
              <Fieldset>
                <FormLabel
                  component="legend"
                  optionalText="(optional)"
                  small={true}
                >
                  How much will your employee receive?
                </FormLabel>
                <InputCurrency
                  errorMsg={null}
                  label="Amount"
                  labelClassName="text-normal"
                  name="employer_benefits[0].benefit_amount_dollars"
                  onChange={[Function]}
                  smallLabel={true}
                  value={1000}
                  width="small"
                />
                <Dropdown
                  choices={
                    Array [
                      Object {
                        "label": "Daily",
                        "value": "Per Day",
                      },
                      Object {
                        "label": "Weekly",
                        "value": "Per Week",
                      },
                      Object {
                        "label": "Monthly",
                        "value": "Per Month",
                      },
                      Object {
                        "label": "All at once",
                        "value": "In Total",
                      },
                      Object {
                        "label": "Unknown",
                        "value": "Unknown",
                      },
                    ]
                  }
                  errorMsg={null}
                  label="Frequency"
                  labelClassName="text-normal"
                  name="employer_benefits[0].benefit_amount_frequency"
                  onChange={[Function]}
                  smallLabel={true}
                  value="Per Month"
                />
              </Fieldset>
            </ConditionalContent>
          </ConditionalContent>
        </AmendmentForm>
      </td>
    </tr>
  </ConditionalContent>
</Fragment>
`;
