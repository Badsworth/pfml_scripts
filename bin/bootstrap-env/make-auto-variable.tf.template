# Make the "$VAR_NAME" variable optional so that "terraform plan"
# and "terraform apply" work without any required variables.
#
# This works as follows:

# 1. Accept an optional variable during a terraform plan/apply.
variable "$VAR_NAME" {
  description = "$VAR_DESCRIPTION"
  type        = string
  default     = null
}

#  2. Read the output used from the last terraform state using "terraform_remote_state".
data "terraform_remote_state" "current_$VAR_NAME" {
  # Don't do a lookup if $VAR_NAME is provided explicitly.
  # This saves some time and also allows us to do a first deploy,
  # where the tfstate file does not yet exist.
  count   = var.$VAR_NAME == null ? 1 : 0
  backend = "s3"

  config = {
    bucket = "massgov-pfml-\$ENV_NAME-env-mgmt"
    key    = "terraform/$COMPONENT.tfstate"
    region = "us-east-1"
  }

  defaults = {
    $VAR_NAME = null
  }
}

#  3. Prefer the given variable if provided, otherwise default to the value from last time.
locals {
  $VAR_NAME = (var.$VAR_NAME == null
    ? data.terraform_remote_state.current_$VAR_NAME[0].outputs.$VAR_NAME
  : var.$VAR_NAME)
}

#  4. Store the final value used as a terraform output for next time.
output "$VAR_NAME" {
  value = local.$VAR_NAME
}
