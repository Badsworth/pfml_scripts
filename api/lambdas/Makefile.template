LOCAL_INVOKE_LOG_FILE := log.txt
LOCAL_INVOKE_ENV_JSON := env.json
RELEASE_INFO_FILE := lambda-s3-package.json

## Helpers

clean:
	rm -rf .aws-sam +
	rm -rf dist +
	rm -f ./dist +
	rm -f $(LOCAL_INVOKE_LOG_FILE) +
	rm -f $(RELEASE_INFO_FILE) +

build: ## Build Lambda
build: clean build-src-wheel build-sam

build-src-wheel: ## Build Python package of source code
	cd $(API_DIR); poetry build --format wheel
	mkdir -p ./dist
	cp -r $(API_DIST_DIR)/* ./dist/		

build-sam: ## Build Lambda package via SAM
	sam build --use-container

invoke-local: ## Run Lambda locally with environment variables, event and log file name variables
ifndef LOCAL_INVOKE_EVENT_JSON
	sam local invoke "$(LAMBDA_FUNCTION_NAME)" \
		--env-vars $(LOCAL_INVOKE_ENV_JSON) \
		--log-file $(LOCAL_INVOKE_LOG_FILE) \
		--no-event
else
	sam local invoke "$(LAMBDA_FUNCTION_NAME)" \
		--env-vars $(LOCAL_INVOKE_ENV_JSON) \
		--log-file $(LOCAL_INVOKE_LOG_FILE) \
		--event $(LOCAL_INVOKE_EVENT_JSON)
endif

build-invoke-local: ## Full build before local invoke
build-invoke-local: build invoke-local

release: ## Build and upload Lambda to S3
release: build release-publish

release-publish: ## Upload lambda
	sam package \
		--s3-bucket $(LAMBDA_BUILD_BUCKET) \
		--s3-prefix $(LAMBDA_BUILD_PREFIX) \
		--use-json \
		--output-template-file $(RELEASE_INFO_FILE)

get-release-url: ## Get S3 URL for uploaded release from SAM package output file
	@jq -r '.Resources.$(LAMBDA_FUNCTION_NAME).Properties.CodeUri' $(RELEASE_INFO_FILE)

get-release-key: ## Get just the S3 key (i.e., path without the bucket name) for uploaded release
	@jq -r '.Resources.$(LAMBDA_FUNCTION_NAME).Properties.CodeUri' $(RELEASE_INFO_FILE) | sed "s|s3://${LAMBDA_BUILD_BUCKET}/${LAMBDA_BUILD_PREFIX}/||"

get-bucket-url: ## Get just the base S3 bucket url
	@echo "s3://${LAMBDA_BUILD_BUCKET}/${LAMBDA_BUILD_PREFIX}"

help: ## Displays this help screen
	@grep -Eh '^[[:print:]]+:.*?##' $(MAKEFILE_LIST) | \
	sort -d | \
	awk -F':.*?## ' '{printf "\033[36m%s\033[0m\t%s\n", $$1, $$2}' | \
	column -t -s "$$(printf '\t')"
	@echo ""	
	@echo "API_DIR=$(API_DIR)"
	@echo "API_DIST_DIR=$(API_DIST_DIR)"
	@echo "LAMBDA_FUNCTION_NAME=$(LAMBDA_FUNCTION_NAME)"
	@echo "LAMBDA_BUILD_BUCKET=$(LAMBDA_BUILD_BUCKET)"
	@echo "LAMBDA_BUILD_PREFIX=$(LAMBDA_BUILD_PREFIX)"
	@echo "LOCAL_INVOKE_LOG_FILE=$(LOCAL_INVOKE_LOG_FILE)"
	@echo "LOCAL_INVOKE_ENV_JSON=$(LOCAL_INVOKE_ENV_JSON)"
	@echo "LOCAL_INVOKE_EVENT_JSON := test_event.json=$(LOCAL_INVOKE_EVENT_JSON := test_event.json)"
	@echo "RELEASE_INFO_FILE=$(RELEASE_INFO_FILE)"
