openapi: 3.0.2
info:
  title: Paid Leave API
  description: An API for managing leave within Massachusetts Paid Family and Medical Leave.
  version: "2020-05-08"

servers:
  - url: /v1
    description: Development server

paths:
  /status:
    get:
      tags:
        - Test Endpoints
      summary: Get the API status
      responses:
        "200":
          description: A status object
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                example:
                  status: "ok"

  /users:
    post:
      tags:
        - Users
      summary: This endpoint allows a user to create new account
      operationId: massgov.pfml.api.users.users_post
      responses:
        "200":
          description: A successful request returns a 200 status code and a user object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          $ref: "#/components/responses/BadRequest"
      requestBody:
        $ref: "#/components/requestBodies/UserToCreate"

  /users/{user_id}:
    get:
      tags:
        - Users
      summary: This endpoint returns details about a user account
      operationId: massgov.pfml.api.users.users_get
      parameters:
        - name: user_id
          in: path
          schema:
            type: string
            format: uuid
          description: The user id of the account to fetch
          required: true
      responses:
        "200":
          description: A successful request returns a 200 status code and a user object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          $ref: "#/components/responses/NotFound"

  /users/current:
    get:
      tags:
        - Users
      summary: >
        This endpoint returns details about the user account corresponding to
        the currently authenticated user
      operationId: massgov.pfml.api.users.users_current_get
      responses:
        "200":
          description: A successful request returns a 200 status code and a user object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          $ref: "#/components/responses/NotFound"

  /all-fake-employees:
    get:
      tags:
        - Test Endpoints
      summary: FOR TEST PURPOSES ONLY. This endpoint provides all fake employees that were created at the start of the server.
      operationId: massgov.pfml.api.employees.employees_get_all_fake
      responses:
        "200":
          description: The endpoint returns a dictionary of existing employees. The keys are SSN/ITIN and the values are employee objects. You can use this endpoint to determine the employee ids.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Employee"

  /all-fake-applications:
    get:
      tags:
        - Test Endpoints
      summary: FOR TEST PURPOSES ONLY. This endpoint provides all fake applications that were created at the start of the server.
      operationId: massgov.pfml.api.applications.applications_get_all_fake
      responses:
        "200":
          description: The endpoint returns a dictionary of existing applications. The keys are application id and the values are application objects. You can use this endpoint to determine the applcation ids.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationResponse"

  /employees/{employee_id}:
    get:
      tags:
        - Employees
      summary: This endpoint provides details about an employee.
      operationId: massgov.pfml.api.employees.employees_get
      parameters:
        - name: employee_id
          in: path
          schema:
            type: string
          description: ID of an employee being fetched
          required: true
      responses:
        "200":
          description: A successful request returns a 200 status code and an employee object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Employee"
        "404":
          $ref: "#/components/responses/NotFound"
    patch:
      tags:
        - Employees
      summary: This endpoint allows updates to an employee record, for mutable properties.
      operationId: massgov.pfml.api.employees.employees_patch
      parameters:
        - name: employee_id
          in: path
          schema:
            type: string
          description: Employee's id
          required: true
      responses:
        "200":
          description: A successful response returns a 200 status code and an employee object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Employee"
        "404":
          $ref: "#/components/responses/NotFound"
      requestBody:
        $ref: "#/components/requestBodies/EmployeeToUpdate"

  /employees/search:
    post:
      tags:
        - Employees
      summary: This endpoint provides details about an employee and requires a request body that contains a SSN/ITIN, and first and last name.
      operationId: massgov.pfml.api.employees.employees_search
      responses:
        "200":
          description: A successful response returns a 200 status code and an employee object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Employee"
        "404":
          $ref: "#/components/responses/NotFound"
      requestBody:
        $ref: "#/components/requestBodies/EmployeeToSearch"

  /employers/{employer_id}:
    get:
      tags:
        - Employers
      summary: This endpoint provides details about an employer.
      operationId: massgov.pfml.api.employers.employers_get
      parameters:
        - name: employer_id
          in: path
          schema:
            type: string
            format: uuid
          description: Employer's id
          required: true
      responses:
        "200":
          description: A successful request returns a 200 status code and an employer object.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Employers"
        "404":
          $ref: "#/components/responses/NotFound"

  /wages:
    get:
      tags:
        - Wages
      summary: This endpoint provides wages and contributions for an employee, and requires employee_id as a query parameter.
      operationId: massgov.pfml.api.wages.wages_get
      parameters:
        - name: employee_id
          in: query
          schema:
            type: string
          description: An employee's id
          required: true
        - name: filing_period
          in: query
          schema:
            type: string
          description: Quarter in which wages were earned
          required: false
      responses:
        "200":
          description: A successful request returns a 200 status code and an array of WagesAndContributions objects. An employee will have one WagesAndContributions object for one employer per quarter.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WagesAndContributionsList"
        "404":
          $ref: "#/components/responses/NotFound"

  /eligibility/{employee_id}:
    get:
      tags:
        - Eligibility
      summary: This endpoint determines whether an employee is elibible to receive PFML benefits.
      operationId: massgov.pfml.api.eligibility.eligibility_get
      parameters:
        - name: employee_id
          in: path
          schema:
            type: string
          description: Employee's id
          required: true
        - name: leave_type
          in: query
          schema:
            type: string
          description: The type of leave an employee wishes to take. The only valid options for this mock are "fam" and "med" - for family and medical respectively.
          required: true
      responses:
        "200":
          description: A successful request returns a 200 status code and a boolean.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EligibilityDetermination"
        "404":
          $ref: "#/components/responses/NotFound"
        "400":
          $ref: "#/components/responses/BadRequest"

  /applications:
    post:
      tags:
        - Applications
      summary: Signal the Integration Platform to create an application for the logged in user. It returns an application id.
      operationId: massgov.pfml.api.applications.applications_start
      parameters:
        - name: user_id
          in: header
          schema:
            type: string
            format: uuid
          description: User id for current user logged into application.
          required: true
      responses:
        "201":
          $ref: "#/components/responses/ApplicationCreatedResponse"
        "400":
          $ref: "#/components/responses/BadRequest"

    get:
      tags:
        - Applications
      summary: Fetch all applications in the Application data model for the logged in user.
      operationId: massgov.pfml.api.applications.applications_get
      parameters:
        - name: user_id
          in: header
          schema:
            type: string
            format: uuid
          description: User id for current user logged into application.
          required: true
      responses:
        "200":
          $ref: "#/components/responses/ApplicationSearchResponse"

  /applications/{application_id}:
    get:
      tags:
        - Applications
      summary: Fetch the application in DRAFT status for the logged in user existing identified by the application id.
      operationId: massgov.pfml.api.applications.application_get
      parameters:
        - name: user_id
          in: header
          schema:
            type: string
            format: uuid
          description: User id for current user logged into application.
          required: true
        - name: application_id
          in: path
          schema:
            type: string
            format: uuid
          description: Identifier for application to be fetched.
          required: true
      responses:
        "200":
          $ref: "#/components/responses/ApplicationResponse"
        "404":
          $ref: "#/components/responses/NotFound"

    patch:
      tags:
        - Applications
      summary: Endpoint to submit the data as applicant fills the application. It is expected the Portal will call this endpoint multiple times and with incomplete data most of the time. The API will review the data provided and return any pertinent warnings or errors. It is up to the Portal when to show these warnings or errors.
      operationId: massgov.pfml.api.applications.applications_update
      parameters:
        - name: user_id
          in: header
          schema:
            type: string
            format: uuid
          description: User id for current user logged into application.
          required: true
        - name: application_id
          in: path
          schema:
            type: string
            format: uuid
          description: Identifier for application to be updated.
          required: true
      responses:
        "200":
          description: Application updated without errors.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationUpdateResponse"
        "400":
          $ref: "#/components/responses/ApplicationUpdateResponse"
      requestBody:
        $ref: "#/components/requestBodies/ApplicationRequestBody"

  /applications/{application_id}/submit_application:
    post:
      tags:
        - Applications
      summary: Signal the data entry is complete and application is ready to be submitted to FINEOS.
      operationId: massgov.pfml.api.applications.applications_submit
      parameters:
        - name: user_id
          in: header
          schema:
            type: string
            format: uuid
          description: User id for current user logged into application.
          required: true
        - name: application_id
          in: path
          schema:
            type: string
            format: uuid
          description: Identifier for application to be marked completed.
          required: true
      responses:
        "201":
          description: Application completed without errors.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApplicationUpdateResponse"
        "400":
          $ref: "#/components/responses/ApplicationUpdateResponse"

tags:
  - name: Test Endpoints
  - name: Users
  - name: Employees
  - name: Employers
  - name: Eligibility
  - name: Wages
  - name: Applications

components:
  requestBodies:
    UserToCreate:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UserToCreate"
      required: true
    EmployeeToSearch:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/EmployeeToSearch"
      required: true
    EmployeeToUpdate:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/EmployeeToUpdate"
      required: true
    ApplicationRequestBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationRequestBody"
      required: true

  responses:
    EligibilityResponse:
      description: A boolean indicating an employee's eligibility
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/EligibilityDetermination"
    ApplicationUpdateResponse:
      description: Application updated
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationUpdateResponse"
    ApplicationResponse:
      description: Application found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationResponse"
    ApplicationCreatedResponse:
      description: A new application successfully created
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationCreated"
    ApplicationSearchResponse:
      description: Search successful
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationSearchResults"
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    BadRequest:
      description: There was a problem with your request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    ValidationError:
      description: Error validating the object
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

  schemas:
    UserToCreate:
      type: object
      properties:
        auth_id:
          type: string
          format: uuid
          example: "009fa369-291b-403f-a85a-15e938c26f2f"
        email_address:
          type: string
          format: email
          example: "janedoe@example.com"
      required: ["email_address", "auth_id"]

    User:
      type: object
      properties:
        user_id:
          type: string
          example: "009fa369-291b-403f-a85a-15e938c26f2f"
        auth_id:
          type: string
          format: uuid
          example: "00000000-291b-403f-a85a-15e938c26f2f"
        email_address:
          type: string
          format: email
          example: "janedoe@example.com"
        status:
          type: string
          enum:
            - unverified
            - verified
          default: unverified
          example: unverified

    EmployeeToUpdate:
      type: object
      properties:
        first_name:
          type: string
          example: "Jane"
        middle_name:
          type: string
          example: "Alice"
        last_name:
          type: string
          example: "Doe"
        date_of_birth:
          type: string
          format: date
          example: "1980-12-31"

    EmployeeToSearch:
      type: object
      properties:
        first_name:
          type: string
          example: "Jane"
        middle_name:
          type: string
          example: "Alice"
        last_name:
          type: string
          example: "Doe"
        tax_identifier:
          $ref: '#/components/schemas/SsnItin'
      required: ['first_name', 'last_name', 'tax_identifier']

    Employee:
      type: object
      properties:
        employee_id:
          type: string
          format: uuid
          example: "009fa369-291b-403f-a85a-15e938c26a7b"
        first_name:
          type: string
          example: "Jane"
        middle_name:
          type: string
          nullable: true
          example: "Alice"
        last_name:
          type: string
          example: "Doe"
        tax_identifier:
          $ref: '#/components/schemas/SsnItin'
        date_of_birth:
          type: string
          format: date
          example: "1980-12-31"

    Employers:
      type: object
      properties:
        employer_id:
          type: string
          format: uuid
          example: "009fa369-291b-403f-a85a-15e938c26f2f"
        employer_fein:
          type: string
          example: "41-9904348"
        employer_dba:
          type: string
          example: "The Super Store"

    WagesAndContributions:
      type: object
      properties:
        filing_period:
          type: string
          example: "2019-03-31"
        employee_id:
          type: string
          format: uuid
          example: "009fa369-291b-403f-a85a-15e938c26f2f"
        employer_id:
          type: string
          format: uuid
          example: "009fa369-291b-403f-a85a-15e938c2c3f4"
        is_independent_contractor:
          type: boolean
          example: true
        is_opted_in:
          type: boolean
          example: true
        employer_ytd_wages:
          type: integer
          minimum: 0
          example: 25000
        employer_qtr_wages:
          type: number
          example: 5000
        employer_med_contribution:
          type: number
          example: 2000
        employer_fam_contribution:
          type: number
          example: 2000

    WagesAndContributionsList:
      type: array
      items:
        $ref: "#/components/schemas/WagesAndContributions"

    EligibilityDetermination:
      type: object
      properties:
        eligible:
          type: boolean
          default: false
        family_exemption:
          type: boolean
          default: false
        medical_exemption:
          type: boolean
          default: false

    ApplicationCreated:
      type: object
      properties:
        application_id:
          type: string
          format: uuid
          example: "2a340cf8-6d2a-4f82-a075-73588d003f8f"

    ApplicationRequestBody:
      type: object
      properties:
        application_nickname:
          type: string
          example: "My bonding leave request"
        application_id:
          type: string
          format: uuid
          example: "2a340cf8-6d2a-4f82-a075-73588d003f8f"
        employee_ssn:
          $ref: "#/components/schemas/SsnItin"
        employer_fein:
          $ref: "#/components/schemas/Fein"
        first_name:
          type: string
          example: "John"
        last_name:
          type: string
          example: "Doe"
        occupation:
          type: string
          enum:
            - Sales Clerk
            - Administrative
            - Engineer
            - Doctor
          example: "Sales Clerk"
        leave_details:
          $ref: "#/components/schemas/ApplicationLeaveDetails"
        payment_preferences:
          type: array
          items:
            $ref: "#/components/schemas/PaymentPreferences"

    ApplicationResponse:
      type: object
      properties:
        application_nickname:
          type: string
          example: "My bonding leave request"
        application_id:
          type: string
          format: uuid
          example: "2a340cf8-6d2a-4f82-a075-73588d003f8f"
        employee_id:
          type: string
          format: uuid
          example: "8623c9f2-8275-417b-b5d7-4bb32fedb7a7"
        employer_id:
          type: string
          format: uuid
          example: "2f0f58a0-fcad-465b-b474-ee6c961cd6e3"
        first_name:
          type: string
          example: "John"
        last_name:
          type: string
          example: "Doe"
        occupation:
          type: string
          enum:
            - Sales Clerk
            - Administrative
            - Engineer
            - Doctor
          example: "Sales Clerk"
        leave_details:
          $ref: "#/components/schemas/ApplicationLeaveDetails"
        payment_preferences:
          type: array
          items:
            $ref: "#/components/schemas/PaymentPreferences"

    ApplicationLeaveDetails:
      type: object
      properties:
        reason:
          type: string
          enum:
            - Care For A Family Member
            - Pregnancy/Maternity
            - Child Bonding
            - Serious Health Condition - Employee
          example: "Care For A Family Member"
        reason_qualifier:
          type: string
          enum:
            - New Born
            - Serious Health Condition
            - Work Related Accident/Injury
          example: "Serious Health Condition"
        reduced_schedule_leave_periods:
          type: array
          items:
            $ref: "#/components/schemas/ReducedScheduleLeavePeriods"
        continuous_leave_periods:
          type: array
          items:
            $ref: "#/components/schemas/ContinuousLeavePeriods"
        intermittent_leave_periods:
          type: array
          items:
            $ref: "#/components/schemas/IntermittentLeavePeriods"
        relationship_to_caregiver:
          type: string
          enum:
            - Parent
            - Child
            - Grandparent
            - Grandchild
            - Other Family Member
            - Service Member
            - Inlaw
            - Sibling
            - Other
          example: "Parent"
        relationship_qualifier:
          type: string
          enum:
            - Adoptive
            - Biological
            - Foster
            - Custodial Parent
            - Legal Guardian
            - Step Parent
          example: "Biological"
        employer_notified:
          type: boolean
          example: true
        employer_notification_date:
          type: string
          format: date
          example: "2020-04-24"
        employer_notification_method:
          type: string
          enum:
            - In Writing
            - In Person
            - By Telephone
            - Other
          example: "In Writing"

    ReducedScheduleLeavePeriods:
      type: object
      properties:
        start_date:
          type: string
          format: date
          example: "2020-06-08"
        end_date:
          type: string
          format: date
          example: "2020-07-31"
        status:
          type: string
          enum:
            - Estimated
            - Known
          default: Estimated
          example: "Estimated"
        thursday_off_hours:
          type: integer
          example: 4
        thursday_off_minutes:
          type: integer
          example: 0
        friday_off_hours:
          type: integer
          example: 4
        friday_off_minutes:
          type: integer
          example: 30
        saturday_off_hours:
          type: integer
          example: 0
        saturday_off_minutes:
          type: integer
          example: 0
        sunday_off_hours:
          type: integer
          example: 0
        sunday_off_minutes:
          type: integer
          example: 0
        monday_off_hours:
          type: integer
          example: 4
        monday_off_minutes:
          type: integer
          example: 0
        tuesday_off_hours:
          type: integer
          example: 4
        tuesday_off_minutes:
          type: integer
          example: 0
        wednesday_off_hours:
          type: integer
          example: 4
        wednesday_off_minutes:
          type: integer
          example: 0

    ContinuousLeavePeriods:
      type: object
      properties:
        start_date:
          type: string
          format: date
          example: "2020-06-08"
        end_date:
          type: string
          format: date
          example: "2020-07-31"
        last_day_worked:
          type: string
          format: date
          example: "2020-06-05"
        expected_return_to_work_date:
          type: string
          format: date
          example: "2020-08-03"
        start_date_full_day:
          type: boolean
          example: true
        start_date_off_hours:
          type: integer
          example: 0
        start_date_off_minutes:
          type: integer
          example: 0
        end_date_off_hours:
          type: integer
          example: 0
        end_date_off_minutes:
          type: integer
          example: 0
        end_date_full_day:
          type: boolean
          example: true
        status:
          type: string
          enum:
            - Estimated
            - Known
          default: Estimated
          example: "Known"

    IntermittentLeavePeriods:
      type: object
      properties:
        start_date:
          type: string
          format: date
          example: "2020-06-08"
        end_date:
          type: string
          format: date
          example: "2020-07-31"
        frequency:
          type: integer
          example: 4
        frequency_interval:
          type: integer
          example: 2
        frequency_interval_basis:
          type: string
          enum:
            - Days
            - Weeks
            - Months
          example: "Weeks"
        duration:
          type: integer
          example: 2
        duration_basis:
          type: string
          enum:
            - Minutes
            - Hours
            - Days
          example: "Days"

    PaymentPreferences:
      type: object
      properties:
        description:
          type: string
        payment_method:
          type: string
          enum:
            - Elec Funds Transfer
            - Check
            - Gift Card
          example: "Elec Funds Transfer"
        is_default:
          type: boolean
        account_details:
          $ref: "#/components/schemas/ApplicationPaymentAccountDetails"
        cheque_details:
          $ref: "#/components/schemas/ApplicationPaymentChequeDetails"

    ApplicationPaymentAccountDetails:
      type: object
      properties:
        account_no:
          type: string
          minLength: 6
          maxLength: 17
          example: "1234567"
        routing_number:
          $ref: "#/components/schemas/RoutingNbr"
        account_name:
          type: string
          example: "My Checking"
        account_type:
          type: string
          enum:
            - Checking
            - Savings
          example: "Checking"

    ApplicationPaymentChequeDetails:
      type: object
      properties:
        name_to_print_on_check:
          type: string
          example: "John Doe"

    ApplicationUpdateResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        warnings:
          type: array
          items:
            $ref: "#/components/schemas/WarningsAndErrors"
        errors:
          type: array
          items:
            $ref: "#/components/schemas/WarningsAndErrors"
      required:
        - code
        - message

    WarningsAndErrors:
      type: object
      properties:
        message:
          type: string
        attribute:
          type: string

    ApplicationSearchResults:
      type: array
      items:
        $ref: "#/components/schemas/ApplicationSearchResult"

    ApplicationSearchResult:
      type: object
      properties:
        application_id:
          type: string
          format: uuid
          example: "2a340cf8-6d2a-4f82-a075-73588d003f8f"
        application_nickname:
          type: string
          example: "My bonding leave request"

    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message

    SsnItin:
      type: string
      example: "000-00-0000"
      pattern: '^\d{3}-\d{2}-\d{4}$'

    Fein:
      type: string
      example: "00-0000000"
      pattern: '^\d{2}-\d{7}$'

    RoutingNbr:
      type: string
      example: "000000000"
      pattern: "^((0[0-9])|(1[0-2])|(2[1-9])|(3[0-2])|(6[1-9])|(7[0-2])|80)([0-9]{7})$"

    Uuid:
      type: string
      example: "009fa369-291b-403f-a85a-15e938c26f2f"
      format: uuid
