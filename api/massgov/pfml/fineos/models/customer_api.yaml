openapi: 3.0.1
info:
  title: Customer API
  version: 9.1.15.8
tags:
- name: Absence
- name: Supervisor
- name: Customer
- name: Enum Domain
- name: Enum Instance
paths:
  /healthcheck:
    get:
      tags:
      - Health Check
      summary: check frameworks services status
      operationId: getHealth
      parameters:
      - name: userid
        in: header
        description: user identification
        required: true
        schema:
          type: string
      responses:
        "200":
          description: ok
        "401":
          description: userid header not present or invalid
        "500":
          description: internal server error
      security:
      - userid: []
  /enum-domains/{enumDomainId}/enum-instances/{enumInstanceId}:
    get:
      tags:
      - Enum Instance
      summary: Get specified Enum Instance in a specified Enum Domain
      description: <P>Gets a specific Enum Instance as specified by <code>enumInstanceId</code>
        in a specific Enum Domain as specified by <code>enumDomainId</code></P>
      operationId: getSingleEnumInstanceInGivenDomain
      parameters:
      - name: enumDomainId
        in: path
        required: true
        schema:
          type: string
      - name: enumInstanceId
        in: path
        required: true
        schema:
          type: string
      - name: userid
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnumInstance'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /enum-domains/{enumDomainId}/enum-instances:
    get:
      tags:
      - Enum Instance
      summary: Get Enum Instance that belong to a particular Enum Domain. Sort and
        equality search available
      operationId: getAllEnumInstancesInGivenDomain
      parameters:
      - name: enumDomainId
        in: path
        required: true
        schema:
          type: string
      - name: sort
        in: query
        description: Comma separated list of sort parameters. Ascending by default,
          for descending preappend with <B>-</B>
        schema:
          $ref: '#/components/schemas/QuerySortInfo'
        examples:
          Sort by name ascending:
            summary: Sorts by name ascending
            description: Sort by name ascending
            value: name
          Sort by dOrder descending, then name ascending:
            summary: Sorts by dOrder descending, then name ascending
            description: Sort by dOrder descending, then name ascending
            value: -dOrder,name
          Sort by dOrder ascending, then dOrder ascending:
            summary: Sorts by dOrder ascending, then dOrder ascending
            description: Sort by dOrder ascending, then dOrder ascending
            value: dOrder,name
          Sort by name decending:
            summary: Sorts by name decending
            description: Sort by name decending
            value: -name
      - name: name
        in: query
        description: Enum instance name
        schema:
          type: string
      - name: fullId
        in: query
        description: Enum instance fullId, corresponds to <code>TaEnum.fullId</code>
        schema:
          type: string
      - name: retired
        in: query
        description: If <code>true</code> retired Instances only are returned,if <code>false</code>(or
          not specified) non-retired instances only are returned
        schema:
          type: boolean
      - name: startDate
        in: query
        description: Date at which the Enum was activated
        schema:
          type: string
      - name: endDate
        in: query
        description: Date at which the Enum will become inactive (since that date,
          enum should be considered inactive)
        schema:
          type: string
      - name: dOrder
        in: query
        description: Denotes the order the Enum resides within all Enum Instances
          within Domain
        schema:
          type: integer
          format: int64
      - name: subsets.name
        in: query
        description: The name of the subset to which the Enum Instance belongs
        schema:
          type: string
      - name: userid
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnumInstances'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /enum-domains/{enumDomainId}:
    get:
      tags:
      - Enum Domain
      summary: Get specific Enum Domain
      description: 'An Enum Domain is a collection of Enum Instance.  For example,
        an Enum Domain could be <I>Title</I> and the instances be: <I>Mr., Mrs., Dr.</I><P>Gets
        specific Enum Domain as specified by the <CODE>enumDomainId</CODE></P>'
      operationId: getSingle
      parameters:
      - name: enumDomainId
        in: path
        required: true
        schema:
          type: string
      - name: userid
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnumDomain'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /enum-domains:
    get:
      tags:
      - Enum Domain
      summary: Get Enum Domains. Sort available and query available.
      description: 'An Enum Domain is a collection of Enum Instance.  For example,
        an Enum Domain could be <I>Title</I> and the instances be: <I>Mr., Mrs., Dr.</I><P>This
        API provides the ability to search and sort for various Enum Domains. All
        parameters are case senstive and no wildcards are accepted.<br><br> The name
        query parameters can be specified more than once. For example: `/enum-domains?name=Title&name=StudySkills`
        will return the Enum Domain with name ''Title'' and the Enum Domain with name
        ''StudySkills''<br><br>If the query endpoint has no matches, an empty list
        is returned<br><br>If the request specifies query parameters different from
        the parameters allowed, the service will return a <b>400 error</b> code</P>'
      operationId: getAllDomains
      parameters:
      - name: name
        in: query
        description: Name of the enum domain. More than one can be specified
        required: true
        schema:
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            type: string
      - name: sort
        in: query
        description: Comma separated list of sort parameters. Ascending by default,
          for descending preappend with <B>-</B>
        schema:
          $ref: '#/components/schemas/QuerySortInfo'
        examples:
          Sort by name ascending:
            summary: Sorts by name ascending
            description: Sort by name ascending
            value: name
          Sort by name decending:
            summary: Sorts by name decending
            description: Sort by name decending
            value: -name
      - name: userid
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnumDomains'
        "400":
          description: Invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /enum-instances/{enumInstanceId}:
    get:
      tags:
      - Enum Instance
      summary: Gets Enum Instance as specified by enumInstanceId
      description: 'An Enum Instance is an specific Enum value within an Enum Domain.  For
        example, an Enum Domain could be <I>Title</I> and the instances be: <I>Mr.,
        Mrs., Dr.</I><P>Gets a specific Enum Instance as specified by <code>enumInstanceId</code>'
      operationId: getSingleEnumInstance
      parameters:
      - name: userid
        in: header
        required: true
        schema:
          type: string
      - name: enumInstanceId
        in: path
        required: true
        schema:
          type: string
      - name: userid
        in: header
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnumInstance'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /customer/absence/startAbsence:
    post:
      tags:
      - Absence
      summary: A new absence case
      description: Create a new blank Absence case with no intake form details and
        with the data provided in the request payload. Depending on the Notification
        case configuration, create a standalone Absence or add it to an existing or
        new Notification Case.
      operationId: startAbsence
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      requestBody:
        description: Start absence object details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbsenceCase'
        required: true
      responses:
        "200":
          description: Absence case creation successfull
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbsenceCaseSummary'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognize the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /customer/absence/absenceReasons:
    get:
      tags:
      - Absence
      summary: Absence Reasons for an Employee
      description: The API returns a list of non-hidden Absence Reasons. The API will
        accept an optional Notification Reason parameter, and when supplied, the list
        of Absence Reasons will be filtered by Notification Reason
      operationId: getAbsenceReasons
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: notificationReason
        in: query
        description: String which contains Notification Reasons name.
        schema:
          type: string
          default: ""
      responses:
        "200":
          description: Absence Reasons for an Employee
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AbsenceReasonSummary'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognize the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /customer/absence/notifications:
    get:
      tags:
      - Absence
      summary: Notifications for an Absence Customer
      description: Returns Notifications for an Absence Customer
      operationId: getNotificationCases
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Notifications for an Absence Customer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationCaseSummary'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognize the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /customer/absence/absence-period-decisions:
    get:
      tags:
      - Absence
      summary: Retrieves decisions related to requested leave periods.
      description: This API returns a list of decisions taken in relation to leave
        periods requested by an employee
      operationId: getAbsencePeriodDecisions
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource.
        required: true
        schema:
          type: string
          description: Id of the user accessing the resource.
      - name: absenceId
        in: query
        description: The absence case number. If no case number is given, the API
          will return all requested periods for all available absences.<br><br>Either
          absenceId or Start Date and End Date must be provided.
        schema:
          type: string
          description: The Absence Case Number for which we want to retrieve the Period
            Decisions
      - name: startDate
        in: query
        description: The search period start date. If a start date is given, only
          periods ending after this date will be returned.
        schema:
          type: string
          description: The Start Date from which we want to retrieve the Period Decisions
      - name: endDate
        in: query
        description: The search period end date. If an end date is given, only periods
          starting before this date will be returned.
        schema:
          type: string
          description: The End Date to which we want to retrieve the Period Decisions
      responses:
        "200":
          description: List of Absence Period Decisions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeriodDecisions'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /customer/absence/absences/{absenceId}/absence-period-decisions:
    get:
      tags:
      - Absence
      summary: List of Absence Period Decisions
      description: Return a list of Absence Period Decisions
      operationId: getAbsencePeriodDecisions_1
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: userid
        in: header
        schema:
          type: string
          description: Id of the user accessing the resource.
      - name: absenceId
        in: path
        required: true
        schema:
          type: string
          description: The Absence Case Number for which we want to retrieve the Period
            Decisions
          default: ""
      responses:
        "200":
          description: List of Absence Period Decisions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbsencePeriodDecisions'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognize the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /customer/absence/notifications/{notificationCaseId}/complete-intake:
    post:
      tags:
      - Absence
      summary: Completes the intake process for absence user's notification case.
      description: "This API will be used to complete the intake process associated\
        \ with Notification Case. It will validate that the notification id provided\
        \ in the URL is valid for the absence employee and that the user owns the\
        \ notification case.<br> The APIs will process the wizard process of every\
        \ child case as follows:<br>&nbsp;&nbsp;\t-&nbsp;\tThe API will check is there\
        \ any Wizard process associated with the child case. If the child case has\
        \ a wizard process, it will process each step of the wizard. Once all the\
        \ steps of the process complete it create the task for back-office user for\
        \ the child case.<br>&nbsp;&nbsp;\t-&nbsp;\tIf it fails to process any of\
        \ the steps in the wizard process, it will stop processing that child case.\
        \ In this case no task will be created for the back-office user and it will\
        \ push on the managing process for the child case.<br> If for any reason,\
        \ the wizard process does not complete for any of the child cases, no further\
        \ processing will be completed.<br> If all child cases have been successfully\
        \ processed, then it will check is there any Wizard process associated with\
        \ the notification case. If the notification case has the wizard process,\
        \ it will process each step of the wizard. No task will be created for the\
        \ notification case. The managing process for the notification case will be\
        \ pushed on.<br> If it fails to process any of the steps in the wizard process,\
        \ it will stop processing."
      operationId: completeIntake
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: notificationCaseId
        in: path
        description: Notification Case ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationCaseSummary'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /customer/absence/absences/{absenceId}:
    get:
      tags:
      - Absence
      summary: Details of an absence
      description: "This API will return the details of the Absence case that has\
        \ the absenceId provided in the URL.It will first validate that the absence\
        \ case id provided is valid for the absence customer. If it is valid then\
        \ the API returns the following data in the response:<br>&nbsp;&nbsp;\t-&nbsp;\
        \ Absence case basic details such as date created, status, etc.<br>&nbsp;&nbsp;\t\
        -&nbsp; List of requested absence periods from the absence case leave details.\
        \ This list includes<br>&nbsp;&nbsp;\t &nbsp; &nbsp;  requested time off periods,\
        \ reduced schedule periods and the first episodic leave period<br>&nbsp;&nbsp;\t\
        -&nbsp; List of absence days for this absence case.<br>&nbsp;&nbsp;\t-&nbsp;\
        \ List of reported time off and reduced schedule periods from the absence\
        \ case leave details<br>&nbsp;&nbsp;\t-&nbsp; List of selected leave plans\
        \ for this absence case.<br>&nbsp;&nbsp;\t-&nbsp; List of Financial Case IDs\
        \ from the Absence Case."
      operationId: getAbsenceDetail
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: absenceId
        in: path
        description: Absence Case ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Details of the Absence
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbsenceDetails'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /customer/absence/absences:
    get:
      tags:
      - Absence
      summary: Absences for the user
      description: Lists the Absences of the user
      operationId: getAbsences
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      responses:
        "200":
          description: List of absences
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AbsenceCaseSummary'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognize the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
  /customer/absence/agreement/leavePlans/{leavePlanId}:
    get:
      tags:
      - Absence
      summary: Details of a leave plan
      description: Returns the details of the Leave Plan for an employee, referenced
        by the ID
      operationId: getLeavePlanDetail
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: leavePlanId
        in: path
        description: Leave Plan ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Details of the leave plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeavePlanModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /customer/absence/isRegistered:
    get:
      tags:
      - Absence
      summary: External user is registered Employee
      description: Returns boolean depending on whether the employee is registered
      operationId: isEmployeeRegistered
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: externalUserId
        in: header
        description: The external user id
        required: true
        schema:
          type: string
          default: ""
      responses:
        "200":
          description: User status whether the employee is registered or not
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeRegistrationStatus'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognize the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /customer/absence/agreement/leavePlans:
    get:
      tags:
      - Absence
      summary: List of leave plans
      description: Returns the list of the Leave Plans associated with the employee's
        employer
      operationId: getLeavePlans
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: pageNbr
        in: query
        description: pageNbr
        schema:
          type: integer
          format: int64
      - name: pageSize
        in: query
        description: pageSize
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: List of leave plans
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LeavePlanSummary'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /customer/absence/employment:
    get:
      tags:
      - Absence
      summary: Employment details of current user
      description: Returns Employment Details of current user
      operationId: getEmployeeEmploymentDetails
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Employment Details of current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmploymentDetails'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognize the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /customer/absence/agreement/documents:
    get:
      tags:
      - Absence
      summary: Service Agreement Documents of Employer
      description: Returns Service Agreement Documents of Employer
      operationId: getEmployerDocuments
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Service Agreement Documents of Employer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AbsenceCaseSummary'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognize the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /customer/absence/start-accommodation:
    post:
      tags:
      - Absence
      summary: This API will be used to start an accommodation case for an absence
        employee.To start an accommodation case all the mandatory and valid data must
        be provided. The data must include at least any one of the Accommodation or
        Limitation detail.It will also create a notification case if notification
        id is not provided in the request data and the accommodation case is configured
        to have a notification case.If provided in the request it will validate that
        the notification case belong/ls to the employee, if yes, the newly created
        accommodation case will be added as a child case to the notification case.
      operationId: startAccommodation
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      requestBody:
        description: Start accommodation object details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccommodationCase'
        required: true
      responses:
        "200":
          description: Absence case creation successfull
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccommodationCaseSummary'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognize the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /customer/absence/{absenceId}/reflexive-questions:
    post:
      tags:
      - Absence
      summary: To process the additional information of a reason adaptive data question
        group for the specified absence case leave request.
      description: The reflexive questions allows to update additional information
        of an absence case leave request.
      operationId: createReflexiveQuestions
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: absenceId
        in: path
        description: Absence Case ID
        required: true
        schema:
          type: string
      requestBody:
        description: Additional Information details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdditionalInformation'
        required: true
      responses:
        "200":
          description: Successful Request
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /customer/absence/absences/leave-plans/{leavePlanId}/leave-availability:
    get:
      tags:
      - Absence
      summary: Get the available leave balance details of the absence customer as
        on given date.
      description: Get the available leave balance details of the absence customer
        as on given date. The leave balance will be approximate balance avilable with
        the absence customer as per the leave plan entitlement. The start and end
        date of the leave calculation period is calcualted based on the Leave Plan
        Calculation period.The Calculation period may be any of the following type.<UL><li><B>Rolling
        Back :</B> A Rolling Back period is a fixed-length period measured backwards
        from the date that an employee has requested leave under a leave plan. In
        this example, the leave request starts on 13-Oct-2018. As the Time Within
        Period is 12 months, the calculation period is from 14-Oct-2017 to 13-Oct-2018.</li><li><B>Rolling
        Forward :</B> A Rolling Forward period is a fixed-length period measured forward
        from the first approved date of absence taken by an employee under a leave
        plan. The next rolling forward period begins on the next approved date of
        absence taken by the same employee under the same leave plan following completion
        of the previous rolling forward period.In this example, the first leave request
        was on 11-Jan-2017. As the Time Within Period is 12 months, the calculation
        period runs until 10-Jan-2018.</li><li><B>Fixed Year :</B> With a Fixed Year
        calculation period, the entitlement period starts on a specified date and
        counts from this date each year. For example,If an employee requests leave
        on 24-May-2018 and the Starting From date is 13-Nov-2017, the entitlement
        period runs from 13-Nov-2017 to 12-Nov-2018.</li><li><B>Calendar Year :</B>
        This generally runs from Jan 01 to Dec 31 in each year. This is the case when
        it's a 12-month time within period. It's also possible to have a 24-month
        time within period and a Calendar year calculation period.For example, if
        an employee requests leave on 20-June-2018, the entitlement period the application
        considers is from 01-Jan 2018 to 31-Dec-2018.</li></UL>
      operationId: getAbsenceCustomerLeaveAvailability
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: leavePlanId
        in: path
        required: true
        schema:
          type: string
          default: ""
      - name: calculationDate
        in: query
        schema:
          type: string
          default: ""
      responses:
        "200":
          description: Get the available leave balance details of the absence customer
            as on given date.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeLeaveBalance'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognize the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /supervisor/absence/employees:
    get:
      tags:
      - Supervisor
      summary: Employees managed by the supervisor
      description: Lists the employees managed by the supervisor
      operationId: getSubordinateForSupervisor
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource.
        required: true
        schema:
          type: string
      - name: pageNbr
        in: query
        description: pageNbr
        schema:
          type: integer
          format: int64
      - name: pageSize
        in: query
        description: pageSize
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: A list of employees with pagination information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmployeeSearchResults'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognize the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
  /supervisor/absence/absences/{absenceId}:
    get:
      tags:
      - Supervisor
      summary: Absence details managed by the supervisor
      description: "This API will return the details of the Absence case that has\
        \ the absenceId provided in the URL.It will first validate that the absence\
        \ case id provided is valid for the supervisor. If it is valid then the API\
        \ returns the following data in the response:<br>&nbsp;&nbsp;\t-&nbsp; Absence\
        \ case basic details such as date created, status, etc.<br>&nbsp;&nbsp;\t\
        -&nbsp; List of requested absence periods from the absence case leave details.\
        \ This list includes<br>&nbsp;&nbsp;\t &nbsp; &nbsp;  requested time off periods,\
        \ reduced schedule periods and the first episodic leave period<br>&nbsp;&nbsp;\t\
        -&nbsp; List of absence days for this absence case.<br>&nbsp;&nbsp;\t-&nbsp;\
        \ List of reported time off and reduced schedule periods from the absence\
        \ case leave details<br>&nbsp;&nbsp;\t-&nbsp; List of selected leave plans\
        \ for this absence case.<br>&nbsp;&nbsp;\t-&nbsp; List of Financial Case IDs\
        \ from the Absence Case."
      operationId: getSupervisedAbsenceDetail
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource.
        required: true
        schema:
          type: string
      - name: absenceId
        in: path
        description: Absence Case ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Absence details managed by the supervisor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupervisedAbsenceDetails'
        "401":
          description: Cannot recognize the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /supervisor/absence/notifications:
    get:
      tags:
      - Supervisor
      summary: Absence notifications for the supervisor
      description: Lists the absences notifications for the supervisor
      operationId: getSupervisedNotifications
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource.
        required: true
        schema:
          type: string
      - name: searchStartDate
        in: query
        description: Enter search start date in yyyy-mm-dd format only.
        schema:
          type: string
      - name: searchEndDate
        in: query
        description: Enter search end date in yyyy-mm-dd format only.
        schema:
          type: string
      - name: employeeId
        in: query
        description: employeeId
        schema:
          type: string
      - name: statuses
        in: query
        description: statuses
        schema:
          type: string
      - name: pageNbr
        in: query
        description: pageNbr
        schema:
          type: integer
          format: int64
      - name: pageSize
        in: query
        description: pageSize
        schema:
          type: integer
          format: int64
      - name: sort
        in: query
        description: String which contains comma delimited column names. Results can
          be sorted based on those columns.
        schema:
          type: string
      responses:
        "200":
          description: A list of notifications with pagination information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationCaseSummaryForAbsenceTypes'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognize the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
  /supervisor/absence/absences:
    get:
      tags:
      - Supervisor
      summary: Absences managed by the supervisor
      description: Lists the Absences managed by the supervisor
      operationId: getSupervisedAbsences
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource.
        required: true
        schema:
          type: string
      - name: searchStartDate
        in: query
        description: Enter search start date in yyyy-mm-dd format only.
        schema:
          type: string
      - name: searchEndDate
        in: query
        description: Enter search end date in yyyy-mm-dd format only.
        schema:
          type: string
      - name: employeeId
        in: query
        description: employeeId
        schema:
          type: string
      - name: statuses
        in: query
        description: statuses
        schema:
          type: string
      - name: pageNbr
        in: query
        description: pageNbr
        schema:
          type: integer
          format: int64
      - name: pageSize
        in: query
        description: pageSize
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: A list of absences with pagination information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSupervisedAbsences'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognize the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
  /supervisor/absence/absences/{absenceId}/addEForm/{eformType}:
    post:
      tags:
      - Supervisor
      description: Adds new EForm document
      operationId: addExtraData
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource.
        required: true
        schema:
          type: string
      - name: absenceId
        in: path
        description: absence case Number
        required: true
        schema:
          type: string
      - name: eformType
        in: path
        description: The name of the Simple Eform Type or Eform Type to create
        required: true
        schema:
          type: string
      requestBody:
        description: List of eFormAttributes of the EForm document which will be created
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EFormAttribute'
        required: true
      responses:
        "200":
          description: EForm document added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EForm'
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognize the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /customer/claims/{claimId}/medicalDetails:
    get:
      tags:
      - Customer
      summary: Returns medical details on a claim for a customer
      description: Returns medical details on a claim for a customer.
      operationId: getClaimMedicalDetails
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: claim case number
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Medical Details on a claim for a customer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalDetailsResponse'
  /customer/claims/{claimId}/socialSecurityBenefit:
    get:
      tags:
      - Customer
      summary: 'A Customer user should only be able to view Social Security Benefit
        information on claims which the Customer user is authorised to access. '
      description: Get the detail of claims social security benefit detail for customer.
      operationId: getSocialSecurityBenefit
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: claim case number
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Get the detail of claims social security benefit detail for
            customer.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SocialSecurityBenefitResponse'
  /customer/claims/{claimId}/socialSecurityBenefit/decisions:
    get:
      tags:
      - Customer
      summary: Get the details of claims social security decision associated to the
        claim case for customer.
      operationId: getSocialSecurityDecision
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: claim case number
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Read Successfull, get the details of claims social security
            decision associated to the claim case for customer.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SocialSecurityDecisionResponse'
  /customer/claims/{claimId}/medicalDetails/diagnosisCodes/{diagnosisCodeId}/removeDiagnosisCode:
    post:
      tags:
      - Customer
      summary: Remove diagnosis code to claim case medical details.
      description: Remove diagnosis code to claim case medical details.
      operationId: removeDiagnosisDetailsForCustomer
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: Claim case number
        required: true
        schema:
          type: string
      - name: diagnosisCodeId
        in: path
        description: The diagnosis code id.
        required: true
        schema:
          type: string
          description: Business Entity OID
          format: string
          example: TE:00012:0000001234
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Diagnosis details Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosisDetails'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationMessageModel'
  /customer/claims/{claimId}/medicalDetails/hospitalisationDetails/{hospitalisationDetailsId}/updateHospitalisationDetails:
    post:
      tags:
      - Customer
      summary: Update hospitalisation medical details information of the claim case.
      description: Update hospitalisation medical details information of the claim
        case.
      operationId: updateHospitalisationDetails
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: The claim case number.
        required: true
        schema:
          type: string
      - name: hospitalisationDetailsId
        in: path
        description: The hospitalisation id received in the request.
        required: true
        schema:
          type: string
          description: Business Entity OID
          format: string
          example: TE:00012:0000001234
      requestBody:
        description: Hospitalization details to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HospitalisationDetails'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: update hospitalisationDetails related information of the claim
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HospitalisationDetailsResponse'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationMessageModel'
  /customer/claims/{claimId}/medicalDetails/hospitalisationDetails/{hospitalisationDetailsId}/removeHospitalisationDetails:
    post:
      tags:
      - Customer
      summary: Remove hospitalisation medical details associated with claim case.
      description: Remove hospitalisation medical details associated with claim case.
      operationId: removeHospitalisationDetails
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: The claim case number.
        required: true
        schema:
          type: string
      - name: hospitalisationDetailsId
        in: path
        description: The hospitalisation Oid received in the request.
        required: true
        schema:
          type: string
          description: Business Entity OID
          format: string
          example: TE:00012:0000001234
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Removed successfully.
  /customer/claims/{claimId}/approvalOrders:
    get:
      tags:
      - Customer
      description: Returns Approval Orders for a customer
      operationId: getApprovalOrders
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: claim case number
        required: true
        schema:
          type: string
      - name: orderType
        in: query
        description: order type
        required: true
        schema:
          type: string
          enum:
          - expense
          - service
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: A Approval Orders for a customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalOrders'
  /customer/claims/{claimId}/approvalOrders/{approvalOrderId}/decisions:
    get:
      tags:
      - Customer
      description: Returns Approval Order decisions for a customer
      operationId: getApprovalOrderDecisions
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: claim case number
        required: true
        schema:
          type: string
      - name: approvalOrderId
        in: path
        description: approvalOrderId
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: A Approval Order decisions for a customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApprovalOrderDecisions'
  /customer/claims/{claimId}/otherIncomeSources/addOtherIncomeSource:
    post:
      tags:
      - Customer
      summary: Add the other income sources details associated to the claim case.
      description: Add the other income sources details associated to the claim case.
      operationId: addOtherIncomeSource
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: Claim case number
        required: true
        schema:
          type: string
      requestBody:
        description: OtherIncomeSource details to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncomeSource'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Returns the other income sources details added to the claim.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeSourceResponse'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationMessageModel'
  /customer/claims/{claimId}/otherIncomeSources:
    get:
      tags:
      - Customer
      description: Returns Income Sources listed on a claim for a customer
      operationId: readIncomeSource
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: claim case number
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: A list of Income Sources on a claim for a customer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IncomeSourceResponse'
  /customer/claims/{claimId}/otherIncomeSources/{incomeSourceId}/removeOtherIncomeSource:
    post:
      tags:
      - Customer
      summary: Remove other income source details associated with the claim case.
      description: Remove other income source details associated with the claim case.
      operationId: removeOtherIncomeSource
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: claim case number
        required: true
        schema:
          type: string
      - name: incomeSourceId
        in: path
        description: Other Income Source Id to be removed.
        required: true
        schema:
          type: string
          description: Business Entity OID
          format: string
          example: TE:00012:0000001234
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Other Income Source details successfully removed
  /customer/claims/{claimId}/otherIncomeSources/{incomeSourceId}/updateOtherIncomeSource:
    post:
      tags:
      - Customer
      summary: Update the other income sources details associated to the claim case.
      description: Update the other income sources details associated to the claim
        case.
      operationId: updateOtherIncomeSource
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: Claim case number
        required: true
        schema:
          type: string
      - name: incomeSourceId
        in: path
        description: The income sources id received in the request.
        required: true
        schema:
          type: string
          description: Business Entity OID
          format: string
          example: TE:00012:0000001234
      requestBody:
        description: OtherIncomeSource details to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncomeSource'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Returns the other income sources details updated to the claim.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncomeSourceResponse'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationMessageModel'
  /customer/cases/{caseId}/documents/base64Upload/{documentType}:
    post:
      tags:
      - Customer
      summary: Upload documents to the FINEOS system using a JSON payload with Base64
        encoding for the file content and file details.
      description: Upload documents to the FINEOS system using a JSON payload with
        Base64 encoding for the file content and file details.
      operationId: uploadBase64EndodedFile
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: caseId
        in: path
        description: The case number of the case for which we upload the document.
        required: true
        schema:
          type: string
      - name: documentType
        in: path
        description: The name of external document type we wish to upload.
        required: true
        schema:
          type: string
      requestBody:
        description: Basic information needed for Uploading a document
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Base64EncodedFileData'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Document will be successfully uploaded and Document Object
            will be returned as a JSON.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationMessageModel'
  /customer/login-time:
    post:
      tags:
      - Customer
      summary: Update login details of a party.
      description: Update login details of a party.
      operationId: UpdateLastPortalLoginDetails
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Returns the login details of a party.
  /customer/occupations:
    get:
      tags:
      - Customer
      summary: Retrieve the occupations of a customer.
      description: Retrieve Occupation details for a Customer at a Party level.
      operationId: getCustomerOccupation
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: The occupations of a customer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReadCustomerOccupation'
  /customer/occupations/{occupationId}/week-based-work-pattern:
    get:
      tags:
      - Customer
      summary: Retrieve the week-based work pattern for a customer
      description: This API returns the week-based work pattern (if any) linked to
        the Occupation identified by the occupationId provided in the URL, for a Customer
        at Party level. It is expected that prior to calling this API, the GET /customer/occupations
        endpoint will have been used to retrieve information on the occupation, including
        the workPatternBasis attribute which indicates the type of work pattern in
        use on the Occupation (Unknown, Week Based, Other). When workPatternBasis
        is Week Based, this API can then be used to retrieve the work pattern. A Week
        Based work pattern is one that is set up in back office by selecting a Work
        Pattern Type of Fixed, 2 weeks Rotating, 3 weeks Rotating or 4 weeks Rotating.
        If this API is used to try to retrieve a work pattern from a non-existent
        occupation, or from an Occupation that does not have a work pattern defined,
        or that has a work pattern that is not Week Based, an error response will
        be returned.
      operationId: getWeekBasedWorkPattern
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: occupationId
        in: path
        description: Id of the Occupation for which the work pattern is to be returned
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: The week-based Work Pattern linked to an Occupation for a Customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeekBasedWorkPattern'
    post:
      tags:
      - Customer
      summary: Add a week-based work pattern for a customer
      description: |-
        This API creates a week-based work pattern relating to the Occupation identified by the occupationId provided in the URL, for a Customer at Party level. It is expected that prior to calling this API, the GET /customer/occupations endpoint will have been used to retrieve information on the occupation, including the workPatternBasis attribute which indicates the type of work pattern in use on the Occupation (Unknown, Week Based, Other). When workPatternBasis is Unknown, this API can then be used to add a work pattern.
        A Week Based work pattern is one that is set up in back office by selecting a Work Pattern type of Fixed, 2 weeks Rotating, 3 weeks Rotating or 4 weeks Rotating. If this API is used to try to create a work pattern on a non-existent Occupation, or on an Occupation that already has a work pattern defined, an error response will be returned.
      operationId: addWeekBasedWorkPattern
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: occupationId
        in: path
        description: Id of the Occupation for which the work pattern is to be created
        required: true
        schema:
          type: string
      requestBody:
        description: The work pattern to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WeekBasedWorkPattern'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: The week-based Work Pattern created for an Occupation for a
            Customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeekBasedWorkPattern'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationMessageModel'
  /customer/occupations/{occupationId}/week-based-work-pattern/replace:
    post:
      tags:
      - Customer
      summary: Update a week-based work pattern for a customer
      description: |-
        This API updates the week-based work pattern relating to the Occupation identified by the occupationId provided in the URL, for a Customer at Party level. It is expected that prior to calling this API, the GET /customer/occupations endpoint will have been used to retrieve information on the occupation, including the workPatternBasis attribute which indicates the type of work pattern in use on the Occupation (Unknown, Week Based, Other). When workPatternBasis is Week Based, this API can then be used to update the work pattern.
        A Week Based work pattern is one that is set up in back office by selecting a Work Pattern type of Fixed, 2 weeks Rotating, 3 weeks Rotating or 4 weeks Rotating. If this API is used to try to update a work pattern on a non-existent Occupation, or on an Occupation that does not have a week-based work pattern defined, an error response will be returned.
      operationId: updateWeekBasedWorkPattern
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: occupationId
        in: path
        description: Id of the Occupation for which the work pattern is to be updated
        required: true
        schema:
          type: string
      requestBody:
        description: The details to be used to update the work pattern
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WeekBasedWorkPattern'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: The week-based Work Pattern updated for an Occupation for a
            Customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeekBasedWorkPattern'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationMessageModel'
  /customer/claims/{claimId}/complete-intake:
    post:
      tags:
      - Customer
      summary: This API will be used to complete the intake process associated with
        Claim Case.
      description: This API will be used to complete the intake process associated
        with Claim Case. It will validate that the claim id provided in the URL is
        valid for the customer. Then it will check if there is any Wizard process
        associated with the case. <br> If the case has a wizard process, it will process
        each step of the wizard. Once all the steps of the process complete it will
        create a task for the back-office user and it will push on the managing process
        for the claim case.<br> If it fails to process any of the steps in the wizard
        process, it will stop processing and no task will be created for the back-office
        user.
      operationId: processCompleteIntake
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: Claim case number
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Claim Summary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimSummary'
  /customer/notifications/{notificationCaseId}/complete-intake:
    post:
      tags:
      - Customer
      summary: This API will be used to complete the notification case intake process
        associated with Claim Case.
      description: "This API will be used to complete the intake process associated\
        \ with Notification Case. It will validate that the notification id provided\
        \ in the URL is valid for the customer and that the user owns the notification\
        \ case.<br> The APIs will process the wizard process of every child case as\
        \ follows:<br>&nbsp;&nbsp;\t-&nbsp;\tThe API will check is there any Wizard\
        \ process associated with the child case. If the child case has a wizard process,\
        \ it will process each step of the wizard. Once all the steps of the process\
        \ complete it create the task for back-office user for the child case.<br>&nbsp;&nbsp;\t\
        -&nbsp;\tIf it fails to process any of the steps in the wizard process, it\
        \ will stop processing that child case. In this case no task will be created\
        \ for the back-office user and it will push on the managing process for the\
        \ child case.<br> If for any reason, the wizard process does not complete\
        \ for any of the child cases, no further processing will be completed.<br>\
        \ If all child cases have been successfully processed, then it will check\
        \ is there any Wizard process associated with the notification case. If the\
        \ notification case has the wizard process, it will process each step of the\
        \ wizard. No task will be created for the notification case. The managing\
        \ process for the notification case will be pushed on.<br> If it fails to\
        \ process any of the steps in the wizard process, it will stop processing."
      operationId: completeNotificationCaseIntake
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: notificationCaseId
        in: path
        description: Notification case number
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: A list of notification case summary along with child claims
            summaries.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationCaseSummaryForClaims'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationMessageModel'
  /customer/cases/{caseId}/outstanding-supporting-evidence:
    get:
      tags:
      - Customer
      summary: Returns a list of Evidences and Outstanding Requirements from the given
        case.
      description: Returns a list of Evidences and Outstanding Requirements from the
        given case.<BR> If the case is a Notification, it returns all Evidences and
        Outstanding Requirements from all direct sub-cases accessible by the user.
      operationId: getOutstandingSupportingEvidence
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: caseId
        in: path
        description: Id of the case to get Evidences and Outstanding Requirements
          from.
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Returns a list of Evidences or Outstanding Requirements.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OutstandingSupportingEvidence'
  /customer/cases/{caseId}/documents/{documentId}/doc-received-for-outstanding-supporting-evidence:
    post:
      tags:
      - Customer
      summary: This API will be used to update the outstanding supporting evidence
        items that exist on the case or any of it's child cases.
      description: The API expects that there is at least one outstanding supporting
        evidence item existing on either the provided case or one of it's child cases,
        that is either an open outstanding requirement on one of the cases, or a pending
        evidence request on one of the absence cases for the same document type.<BR>
        For all cases, it will link the document to the any open outstanding requirements
        where the document type for the outstanding requirement (as determined by
        an event) matches the document type of the provided document.<BR> In addition,
        where the case or any or it's sub cases are absence cases, it will also update
        the evidences on the absence cases for the same document type to mark them
        as received.<BR> A task will then be generated for the back office user to
        inform them that one or many outstanding supporting evidence items have been
        updated, so that they can view the related document and determine whether
        it satisfies the outstanding requirement. The task will be created on either
        an absence, accommodation, generic or a claim case. It will never be created
        for a notification case. If all outstanding supporting evidence items that
        are updated are specific to a claim or generic case only OR if there is a
        mix of claim and absence outstanding supporting evidence items updated, the
        task will be associated with a claim or generic case. Otherwise, it will be
        associated with an absence case.
      operationId: updateOutstandingRequirementEvdience
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: caseId
        in: path
        description: The case number to update the outstanding requirement and evdience
          receipt.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Update's the outstanding supporting evidence items that exist
            on the case or any of it's child cases.
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationMessageModel'
  /customer/occupations/{occupationId}/employer-questions:
    get:
      tags:
      - Customer
      summary: Returns the employer questions for the given category of the questions
        for the employer on the given occupation with the questions effective on the
        today's date.
      description: Returns the employer questions for the given category of the questions
        for the employer on the given occupation with the questions effective on the
        today's date.
      operationId: getEmployerQuestions
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: occupationId
        in: path
        description: The Id of the occupation having employer for which the questions
          will be retrieved.
        required: true
        schema:
          type: integer
          format: int64
      - name: category
        in: query
        description: The category of the employer questions retrieved.
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: The customer has no occupation for given occupation id. | The
            category is not a valid instructions/questions category. | The category
            is not allowed for API use.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Returns an EmployerQuestions object that represents the employer
            questions for the given category of the questions for the employer on
            the given occupation with the questions effective on the today's date.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployerQuestions'
  /customer/cases/{caseId}/employer-questions-answers:
    get:
      tags:
      - Customer
      summary: Returns the latest customer answers to employer questions for the given
        category of questions for the employer on the case.
      description: Returns the latest customer answers to employer questions for the
        given category of questions for the employer on the case.
      operationId: getAnswerQuestionsByCase
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: caseId
        in: path
        description: The Id of the case for which the employer questions and answers
          will be retrieved
        required: true
        schema:
          type: string
      - name: category
        in: query
        description: The category of the employer questions retrieved.
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: Case does not belong to the user, no such category or a category
            not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Returns the latest customer answers to employer questions for
            the given category of questions for the employer on the case.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployerQuestionAnswers'
    post:
      tags:
      - Customer
      summary: Creates or updates the answers to the employer questions for the given
        category of questions for the employer on the case.
      description: Creates or updates the answers to the employer questions for the
        given category of questions for the employer on the case.
      operationId: updateEmployeeAnswers
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: caseId
        in: path
        description: The Id of the case for which the answers to employer questions
          will be created or updated.
        required: true
        schema:
          type: string
      requestBody:
        description: List of eform answers
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeAnswers'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: The customer has no occupation for given occupation id. | The
            category is not a valid instructions/questions category. | The category
            is not allowed for API use. | The Case does not belong to the user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Creates or updates the answers to the employer questions for
            the given category of questions for the employer on the case.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployerQuestionAnswers'
  /customer/cases/{caseId}/occupations:
    get:
      tags:
      - Customer
      summary: Retrieve the occupations for a case
      description: This API returns the Occupations, if any, linked to the case identified
        by the caseId provided in the URL, for a Customer at case level. If this API
        is used to try to retrieve Occupations from a non-existent case, or from a
        case that does not belong to the user, an error response will be returned.
      operationId: getCaseOccupations
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: caseId
        in: path
        description: Id of the case for which the occupations are to be returned
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: The Occupations linked to a case for a Customer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReadOccupation'
  /customer/cases/{caseId}/managedRequirements/{managedReqId}/documents:
    get:
      tags:
      - Customer
      description: Returns a list of documents linked to a managed requirement
      operationId: getDocsForManagedReq
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: caseId
        in: path
        description: claim case number
        required: true
        schema:
          type: string
      - name: managedReqId
        in: path
        description: Managed Requirement Id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: List of documents linked to the managed requirement
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
  /customer/cases/{caseId}/eForms:
    get:
      tags:
      - Customer
      description: Returns a list of EForm documents for a claim.
      operationId: getEForms
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: caseId
        in: path
        description: Claim case number
        required: true
        schema:
          type: string
      - name: eFormTypes
        in: query
        description: String which contains comma delimited column names.
        schema:
          type: string
          default: ""
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognize the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Request successful. An array of eFormSummary objects will be
            returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EFormSummary'
  /customer/claims/{claimId}/payments:
    get:
      tags:
      - Customer
      summary: Returns all the payments made on the claim which relate to the customer
        or which have been configured to be returned to the customer.
      description: Returns all the payments made (paid payments not payments waiting
        to be paid) on the claim which relate to the customer or which have been configured
        to be returned to the customer.
      operationId: getPayments
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: Id of the claim. Only payments associated to this claim are returned.
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: A list of payments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment'
  /customer/claims/{claimId}/lodgeClaim:
    post:
      tags:
      - Customer
      description: This operation is triggered by a customer when he/she is finished
        with updating a claim. This operation will notify head office users to take
        over this claim.
      operationId: lodgeClaim
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: Claim case number
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Lodgement successful
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationMessageModel'
  /customer/readCustomerContactDetails:
    get:
      tags:
      - Customer
      description: Returns the Customer's contact details for the user. This includes
        email address and phone numbers.
      operationId: readCustomerContactDetails
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: The Customer Contact Details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactDetails'
  /customer/readCustomerDetails:
    get:
      tags:
      - Customer
      description: Returns customer Details for the user. This includes Personal Details.
      operationId: readCustomerDetails
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: The Customer's personal Details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
  /customer/claims/{claimId}/readDisabilityDetails:
    get:
      tags:
      - Customer
      description: Retrieves disability claims details, so that user can review some
        key information about the claim
      operationId: readDisabilityClaim
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: Claim case number
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Read successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadDisabilityResult'
  /customer/cases/{caseId}/readEForm/{eFormId}:
    get:
      tags:
      - Customer
      description: Returns EForm document.
      operationId: readEForm
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: caseId
        in: path
        description: Claim case number
        required: true
        schema:
          type: string
      - name: eFormId
        in: path
        description: Id of an EForm document
        required: true
        schema:
          type: integer
          format: int64
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognize the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Successful response with EForm document with a given eFormId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EForm'
  /customer/claims/{claimId}/payments/{paymentId}/paymentLines:
    get:
      tags:
      - Customer
      summary: Returns the payment lines for the payment passed as a parameter.
      description: Returns the payment lines (breakdown of the adjustments comprising
        the payment amount) for the payment passed as a parameter
      operationId: readPaymentLines
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: claimId
        in: path
        description: Id of the claim. Only payments associated to this claim are returned.
        required: true
        schema:
          type: string
      - name: paymentId
        in: path
        description: Id of payment for which to get the payment lines
        required: true
        schema:
          type: string
          description: Business Entity OID
          format: string
          example: TE:00012:0000001234
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: An Array of payment lines representing the adjustments which
            make up the payment amount
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentLine'
  /customer/registerCustomer:
    post:
      tags:
      - Customer
      description: Creates a new customer user in FINEOS. Once the customer is registered
        they cannot re-register with the same user id.
      operationId: registerCustomer
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: ExternalUserId
        in: header
        description: The user id to register
        required: true
        schema:
          type: string
      requestBody:
        description: Customer to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Customer user created successfully
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationMessageModel'
  /customer/claims/startClaim/{claimCaseType}:
    post:
      tags:
      - Customer
      description: Creates a claim with the customer as the default participant and
        links policies to it
      operationId: startClaim
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimCaseType
        in: path
        description: Name of a claim case type
        required: true
        schema:
          type: string
      requestBody:
        description: Basic information needed for creating a claim
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartClaim'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Claim Summary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClaimSummary'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationMessageModel'
  /customer/updateCustomerContactDetails:
    post:
      tags:
      - Customer
      summary: Updates customer contact details
      description: Updates the Customer's contact details including email address
        and phone numbers, returns updated contact details as response.
      operationId: updateCustomerContactDetails
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      requestBody:
        description: The CustomerContactDetails document.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactDetails'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Customer contact details have been updated successfully, returns
            updated contact details as response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactDetails'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationMessageModel'
  /customer/updateCustomerDetails:
    post:
      tags:
      - Customer
      description: Updates the Customer's Personal Details.
      operationId: updateCustomerDetails
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      requestBody:
        description: The Customer document which contains the updated details.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: The Customer's details have been updated successfully.
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationMessageModel'
  /customer/claims/{claimId}/updateDisabilityDetails:
    post:
      tags:
      - Customer
      description: API to update a claim on-line of type Disability claim only.
      operationId: updateDisabilityClaim
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: Claim case number
        required: true
        schema:
          type: string
      requestBody:
        description: Set of disability claim information exposed to a customer for
          editing
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisabilityClaim'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Update successful
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationMessageModel'
  /customer/claims/notifications:
    get:
      tags:
      - Customer
      summary: Get the notification cases for the customer.
      description: Get all notification cases for the customer which has one or more
        child case along with child cases.
      operationId: getNotificationCases_1
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: A list of notification case summary along with child claims
            summaries.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationCaseSummaryForClaims'
  /customer/claims/{claimId}/occupations/addOccupation:
    post:
      tags:
      - Customer
      summary: Adds an occupation detail for a claim case.
      description: Adds an occupation detail for a claim case.
      operationId: addOccupation
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: The id of claim case.
        required: true
        schema:
          type: string
      requestBody:
        description: The occupation detail to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimOccupation'
        required: true
      responses:
        "400":
          description: Bad Request,if any invalid enum is provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Returns the occupation details added.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadOccupation'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationMessageModel'
  /customer/claims/{claimId}/occupations/{occupationId}/removeOccupation:
    post:
      tags:
      - Customer
      summary: Removes an occupation detail for a claim case.
      description: Removes an occupation detail for a claim case.
      operationId: removeOccupation
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: The id of claim case.
        required: true
        schema:
          type: string
      - name: occupationId
        in: path
        description: The id of occupation to be removed.
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /customer/cases/{caseId}/documents/{documentId}/download:
    get:
      tags:
      - Customer
      description: Returns the document to download.
      operationId: getDocumentContentsAsStream
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: caseId
        in: path
        description: Id of the claim case.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: Id of the document to download. Only document associated with
          the claim is allowed to download.
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: The document downloaded successfully.
  /customer/cases/{caseId}/managedRequirements:
    get:
      tags:
      - Customer
      description: Returns a list of managed requirements relating to / to be actioned
        by the customer
      operationId: getManagedRequirements
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: caseId
        in: path
        description: claim case number
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: List of managed requirements for the customer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ManagedRequirementSummary'
  /customer/cases/{caseId}/documents:
    get:
      tags:
      - Customer
      description: Returns the documents that have been added to the claim or to a
        contact on the claim .
      operationId: getDocuments
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: caseId
        in: path
        description: Id of the claim. Only documents associated with this claim or
          this claims contacts are returned.
        required: true
        schema:
          type: string
      - name: includeChildCases
        in: query
        description: Flag if set to TRUE, will also return documents that are linked
          to child cases of the provided CaseID, for the cases that are owned by the
          use
        schema:
          type: boolean
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: A list of documents linked to the claim
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
  /customer/claims:
    get:
      tags:
      - Customer
      summary: Lists the User's Claims
      description: Returns all claims from the system that the customer is authorised
        to access
      operationId: getClaims
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Claims from the system that the customer is authorised to access
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClaimSummary'
  /customer/cases/{caseId}/addEForm/{eformType}:
    post:
      tags:
      - Customer
      summary: Adds an EForm
      description: Adds a new EForm document to a Case, returning the newly created
        data
      operationId: addEForm
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: caseId
        in: path
        description: Claim case number
        required: true
        schema:
          type: string
      - name: eformType
        in: path
        description: The name of the Simple Eform Type or Eform Type to create
        required: true
        schema:
          type: string
      requestBody:
        description: List of eFormAttributes of the EForm document which will be created
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EFormAttribute'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Returns the newly created EForm
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EForm'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationMessageModel'
  /customer/cases/{caseId}/updateEForm/{eFormId}:
    post:
      tags:
      - Customer
      description: Update existing EForm document
      operationId: updateEForm
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: caseId
        in: path
        description: Claim case number
        required: true
        schema:
          type: string
      - name: eFormId
        in: path
        description: Id of an EForm document
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Updated EForm document
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/EFormAttribute'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: EForm document updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EForm'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationMessageModel'
  /customer/cases/{caseId}/managedRequirements/{managedReqId}/linkDocument/{docId}:
    post:
      tags:
      - Customer
      description: Links the document to the managed requirement if the claim belongs
        to the customer and the managed requirement is linked to the claim.
      operationId: linkDocumentToManagedRequirement
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: caseId
        in: path
        description: Claim case number
        required: true
        schema:
          type: string
      - name: managedReqId
        in: path
        description: The managed Requirement id
        required: true
        schema:
          type: integer
          format: int64
      - name: docId
        in: path
        description: The document id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Successful Request
  /customer/cases/{caseId}/managedRequirements/{managedReqId}/eforms:
    get:
      tags:
      - Customer
      description: Get the documents for the managed requirement if the claim belongs
        to the customer and the managed requirement is linked to the claim.
      operationId: getEformForManagedRequirement
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: caseId
        in: path
        description: Claim case number
        required: true
        schema:
          type: string
      - name: managedReqId
        in: path
        description: The managed Requirement id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Request successful. An array of eFormSummary objects will be
            returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EFormSummary'
  /customer/nextPaymentDetails:
    get:
      tags:
      - Customer
      summary: Get the details of the next estimated payment detail.
      description: Get the details of the next estimated payment (related to any of
        the customers claims) due to be sent to the customer (if any).
      operationId: getCustomerNextPayment
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Request successful. The details of the next payment to the
            customer will be returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NextPayment'
  /customer/webMessages:
    get:
      tags:
      - Customer
      description: Gets the list of web messages sent by the customer to the insurer
        and sent by the insurer to the customer.
      operationId: getWebMessages
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: unReadMessages
        in: query
        description: Flag indicating whether to return unRead messages only. If this
          flag is false, all messages will be returned by default.
        schema:
          type: boolean
      - name: caseId
        in: query
        description: The Id of the case for which we want to retrieve the web messages
        schema:
          type: string
          default: ""
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Request successful. The list of web messages related to the
            customer will be returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebMessageSummary'
  /customer/addWebMessage:
    post:
      tags:
      - Customer
      description: Allows a customer to create a web message to communicate with the
        insurer through the customer portal
      operationId: addWebMessage
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      requestBody:
        description: New Web Message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewWebMessage'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Request successful. The Web Message that the customer created
            will be returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewWebMessage'
  /customer/markWebMessagesAsRead:
    post:
      tags:
      - Customer
      description: Allows a customer to mark web message(s) as read
      operationId: markMessagesAsRead
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      requestBody:
        description: List of Web Message ids. The messages matching these ids will
          be marked as read
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/WebMessageId'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Request successful. The Web Message(s) that the customer specified
            to be marked as read have been updated
  /customer/cases/{caseId}/documents/{documentId}/markread:
    post:
      tags:
      - Customer
      summary: Mark a document as read by customer or delegate within the FINEOS system.
      description: Mark a document as read by user within the FINEOS system.
      operationId: markDocumentAsRead
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: caseId
        in: path
        description: The case number for the case to which the document is associated
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: The I value of the document we wish to mark as read
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Document successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        "404":
          description: Document not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /customer/cases/{caseId}/participants:
    get:
      tags:
      - Customer
      summary: Retrieves a list of the participants for a particular case.
      description: Retrieves a list of the participants for a particular case
      operationId: getCaseParticipants
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: caseId
        in: path
        description: The Case number
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Read successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CaseParticipantsSummary'
  /customer/cases/{caseId}/participants/{participantId}/readParticipantDetails:
    get:
      tags:
      - Customer
      description: Returns a Case Participant details (date of birth, gender, correspondence
        address etc.) for a customer
      operationId: readParticipantDetails
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: caseId
        in: path
        description: the case number
        required: true
        schema:
          type: string
      - name: participantId
        in: path
        description: the participant Id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Case Participant details for a customer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Participant'
  /customer/cases/{caseId}/participants/{participantId}/readParticipantContactDetails:
    get:
      tags:
      - Customer
      summary: Returns details for a particular case Participant.
      description: Returns details for a particular case Participant (date of birth,
        gender, correspondence address etc.)
      operationId: readParticipantContactDetails
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: caseId
        in: path
        description: claim case number
        required: true
        schema:
          type: string
      - name: participantId
        in: path
        description: participant Id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Case Participant details for a customer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParticipantContactDetails'
  /customer/claims/{claimId}/benefits:
    get:
      tags:
      - Customer
      description: Returns a list of benefits for a customer
      operationId: getClaimBenefits
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: claim case number
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: A list of benefit summaries for a customer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BenefitSummary'
  /customer/claims/{claimId}/benefits/{benefitId}/readDisabilityBenefit:
    get:
      tags:
      - Customer
      description: Returns a disability Benefit for a customer
      operationId: getClaimDisabilityBenefit
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: claim case number
        required: true
        schema:
          type: string
      - name: benefitId
        in: path
        description: benefit case number
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: A disability benefit for a customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadDisabilityBenefitResult'
  /customer/claims/{claimId}/benefits/{benefitId}/readLumpSumBenefit:
    get:
      tags:
      - Customer
      description: Returns a lump sum Benefit for a customer
      operationId: getClaimLumpSumBenefit
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: claim case number
        required: true
        schema:
          type: string
      - name: benefitId
        in: path
        description: benefit case number
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: A lump sum benefit for a customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadLumpSumBenefitResult'
  /customer/cases/{caseId}/caseStatusHistory:
    get:
      tags:
      - Customer
      summary: Returns list of the case statuses that a particular case.
      description: Returns list of the case statuses that a particular case has cycled
        through
      operationId: getCaseStatusHistory
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: caseId
        in: path
        description: case number
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: A list of the case statuses that a particular case has cycled
            through
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CaseStatusHistory'
  /customer/cases/{caseId}/occupations/{occupationId}/week-based-work-pattern:
    get:
      tags:
      - Customer
      summary: Retrieve the week-based work pattern for an occupation linked to a
        case
      description: |-
        This API returns the week-based work pattern, if any, linked to the Occupation identified by the occupationId provided in the URL, relating to the Case identified by the caseId provided in the URL. It is expected that prior to calling this API, the GET /customer/cases/{caseId}/occupations endpoint will have been used to retrieve information on the occupation, including the workPatternBasis attribute which indicates the type of work pattern in use on the Occupation (Unknown, Week Based, Other). When workPatternBasis is Week Based, this API can then be used to retrieve the work pattern.
        A Week Based work pattern is one that is set up in back office by selecting a Work Pattern type of Fixed, 2 weeks Rotating, 3 weeks Rotating or 4 weeks Rotating. If this API is used to try to retrieve a work pattern from a non-existent occupation, or from an Occupation that does not have a work pattern defined, or that has a work pattern that is not Week Based, an error response will be returned. If this API is used to try to retrieve a work pattern from an Occupation linked to a non-existent Case or a Case that does not belong to the user, an error response will be returned.
      operationId: getCaseWeekBasedWorkPattern
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: caseId
        in: path
        description: Id of the Case for which the work pattern for an Occupation is
          to be returned
        required: true
        schema:
          type: string
      - name: occupationId
        in: path
        description: Id of the Occupation for which the work pattern is to be returned
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: The week-based Work Pattern linked to an Occupation for a Case
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeekBasedWorkPattern'
  /customer/claims/{claimId}/nextPayment:
    get:
      tags:
      - Customer
      summary: Get the details of the next estimated payment.
      description: Get the details of the next estimated payment (related to the specified
        claim) due to be sent to the customer (if any).
      operationId: getCustomerNextPaymentForClaim
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: Id of the claim. Only the next estimated payment associated to
          this claim is returned.
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Request successful. The details of the next payment to the
            customer from the claim will be returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NextPayment'
  /customer/cases/{caseId}/documents/{documentId}/base64Download:
    get:
      tags:
      - Customer
      description: Returns the document to download, base64 encoded, in a JSON object.
      operationId: getDocumentContentsAsBase64EncodedString
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: caseId
        in: path
        description: Id of the claim case.
        required: true
        schema:
          type: string
      - name: documentId
        in: path
        description: Id of the document to download. Only document associated with
          the claim is allowed to download.
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: The document downloaded successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Base64EncodedFileData'
  /customer/cases/{caseId}/documents/upload/{documentType}:
    post:
      tags:
      - Customer
      description: This API will provide the customer to upload documentation to the
        FINEOS system.
      operationId: uploadFile
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: caseId
        in: path
        description: The case number of the case for which we upload the document.
        required: true
        schema:
          type: string
      - name: documentType
        in: path
        description: The name of external document type we wish to upload.
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - documentContents
              type: object
              properties:
                documentContents:
                  type: string
                  description: Uploaded file
                  format: binary
                documentDescription:
                  type: string
                managedRequirementId:
                  type: integer
                  format: int64
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Document successfully uploaded.
  /customer/paymentPreferences:
    get:
      tags:
      - Customer
      summary: Lists of  payment preferences for the Customer
      description: 'Returns the list of payment preference objects '
      operationId: getPaymentPreferences
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Request successful. The details of the payment preferences
            to the customer will be returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentPreferenceResponse'
  /customer/addPaymentPreference:
    post:
      tags:
      - Customer
      summary: Add payment preference details for a party
      description: ' Add payment preference details for a party.'
      operationId: addPaymentPreference
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      requestBody:
        description: Payment preference details to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPaymentPreference'
        required: true
      responses:
        "400":
          description: Bad Request,if any invalid enum is provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Returns the payment preference details added related to the
            party.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentPreferenceResponse'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationMessageModel'
  /customer/paymentPreference/{paymentPreferenceId}/updatePaymentPreference:
    post:
      tags:
      - Customer
      summary: Updates a payment preference details for a party.
      description: Updates a payment preference detail for a party.
      operationId: updatePaymentPreference
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: paymentPreferenceId
        in: path
        description: The payment preference id
        required: true
        schema:
          type: string
      requestBody:
        description: Payment preference details to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPaymentPreference'
        required: true
      responses:
        "400":
          description: Bad Request,if any invalid enum is provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Returns the payment preference details updated related for
            a party.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentPreferenceResponse'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationMessageModel'
  /customer/claims/{claimId}/occupations/{occupationId}/earnings:
    get:
      tags:
      - Customer
      summary: Get the Pre-Disability Earnings Details for a customer
      description: Returns the Pre-Disability Earnings Details for a customer
      operationId: getEarnings
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: claim case number
        required: true
        schema:
          type: string
      - name: occupationId
        in: path
        description: occupation Id number
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Pre-Disability Earnings Details for a customer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EarningsResponse'
  /customer/claims/{claimId}/occupations/{occupationId}/addWeeklyBasisPreDisabilityEarnings:
    post:
      tags:
      - Customer
      summary: Create weekly basis pre-disability earnings.
      description: Add weekly basis pre-disability earnings details for a customer.
      operationId: addWeeklyBasisPreDisabilityEarnings
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: Claim case number
        required: true
        schema:
          type: string
      - name: occupationId
        in: path
        description: Occupation Id number
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: EarningsRequest detail object to add weekly pre-disability earnings
          for a customer.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WeeklyEarningsRequest'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Returns the newly created JSON weekly basis pre-disability
            earnings object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarningsResponse'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationMessageModel'
  /customer/claims/{claimId}/occupations/{occupationId}/updateOccupation:
    post:
      tags:
      - Customer
      summary: Updates occupation details of a claim.
      description: Updates occupation details of a claim.
      operationId: updateOccupation
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: Claim id of a claim associated with the customer.
        required: true
        schema:
          type: string
      - name: occupationId
        in: path
        description: Occupation id of a occupation associated with a claim.
        required: true
        schema:
          type: string
      requestBody:
        description: Occupation details to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClaimOccupation'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Returns the updated occupation details of a claim.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadOccupation'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationMessageModel'
  /customer/claims/{claimId}/occupations/{occupationId}/addMonthlyBasisPreDisabilityEarnings:
    post:
      tags:
      - Customer
      summary: Create monthly basis pre-disability earnings.
      description: Add monthly basis pre-disability earnings details for a customer.
      operationId: addMonthlyBasisPreDisabilityEarnings
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: Claim case number
        required: true
        schema:
          type: string
      - name: occupationId
        in: path
        description: Occupation Id number
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: EarningsRequest detail object to add monthly pre-disability earnings
          for a customer.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonthlyEarningsRequest'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Returns the newly created JSON monthly basis pre-disability
            earnings object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EarningsResponse'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationMessageModel'
  /customer/claims/{claimId}/occupations/{occupationId}/updateWeeklyBasisPreDisabilityEarnings/{earningsId}:
    post:
      tags:
      - Customer
      summary: Update weekly basis Pre-Disability Earnings for a customer
      description: Updates and Returns the updated Pre-Disability Earnings Details
        for a customer
      operationId: updateWeeklyBasisPreDisabilityEarnings
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: claim case number
        required: true
        schema:
          type: string
      - name: occupationId
        in: path
        description: occupation Id number
        required: true
        schema:
          type: integer
          format: int64
      - name: earningsId
        in: path
        description: earnings Id
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Earnings record details to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WeeklyEarningsRequest'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Returns the JSON for updated weekly basis pre-disability earnings
            object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EarningsResponse'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationMessageModel'
  /customer/claims/{claimId}/occupations/{occupationId}/removePreDisabilityEarningsRecord/{earningsId}:
    post:
      tags:
      - Customer
      summary: Remove the earnings record for the claim occupation.
      description: Removes the earnings record for the claim occupation.
      operationId: removeEarnings
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: The id of claim case.
        required: true
        schema:
          type: string
      - name: occupationId
        in: path
        description: The id of occupation.
        required: true
        schema:
          type: integer
          format: int64
      - name: earningsId
        in: path
        description: The id of earning record to be removed.
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Earnings details successfully removed
  /customer/claims/{claimId}/occupations/{occupationId}/updateMonthlyBasisPreDisabilityEarnings/{earningsId}:
    post:
      tags:
      - Customer
      summary: Update monthly basis Pre-Disability Earnings for a customer
      description: Updates and Returns the updated Pre-Disability Earnings Details
        for a customer
      operationId: updateMonthlyBasisPreDisabilityEarnings
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: claim case number
        required: true
        schema:
          type: string
      - name: occupationId
        in: path
        description: occupation Id number
        required: true
        schema:
          type: integer
          format: int64
      - name: earningsId
        in: path
        description: earnings Id
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Earnings record details to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonthlyEarningsRequest'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Returns the JSON for updated monthly basis pre-disability earnings
            object.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EarningsResponse'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationMessageModel'
  /customer/claims/{claimId}/benefits/{benefitId}/mainPayeeDetails:
    get:
      tags:
      - Customer
      summary: Returns details for the main payee on a recurring benefit.
      description: Returns details for the main payee on a recurring benefit for customer.
      operationId: getPayeeDetails
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: claim case number
        required: true
        schema:
          type: string
      - name: benefitId
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Returns details for the main payee on a recurring benefit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainPayeeDetails'
  /customer/claims/{claimId}/futurePayments:
    get:
      tags:
      - Customer
      summary: Lists of  future payments for the customer.
      description: 'Returns the list of future payment objects '
      operationId: getFuturePayment
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: claim id of the customer
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Request successful. The details of the recurring future payments
            to the customer will be returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FuturePayment'
  /customer/taxCodeRecords:
    get:
      tags:
      - Customer
      summary: Returns the tax code records for the customer.
      description: Returns the tax code records for the customer or the represented
        customer.
      operationId: getTaxCodeRecords
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Tax code records for the customer.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaxTypeDetailsResponse'
  /customer/addTaxCodeRecord:
    post:
      tags:
      - Customer
      summary: Add tax code details to a party.
      description: Add tax code details to a party.
      operationId: addTaxCodeRecord
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      requestBody:
        description: Tax code details to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxTypeDetails'
        required: true
      responses:
        "400":
          description: Bad Request, if any invalid enum is provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Returns the tax code details of a party.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxTypeDetailsResponse'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationMessageModel'
  /customer/{taxCodeId}/updateTaxCodeRecord:
    post:
      tags:
      - Customer
      summary: Update tax code details of a party.
      description: Update tax code details of a party.
      operationId: updateTaxCodeRecord
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: taxCodeId
        in: path
        description: Tax code id.
        required: true
        schema:
          type: string
      requestBody:
        description: Tax code details to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxTypeDetails'
        required: true
      responses:
        "400":
          description: Bad Request, if any invalid enum is provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Returns the tax code details of a party.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxTypeDetailsResponse'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationMessageModel'
  /customer/{taxCodeId}/removeTaxCodeRecord:
    post:
      tags:
      - Customer
      summary: Removes a tax code record for the customer.
      description: Removes the tax code record for the customer or the represented
        customer.
      operationId: removeTaxCodeRecord
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: taxCodeId
        in: path
        description: Tax code id
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Tax code record removed for the customer.
  /customer/claims/{claimId}/updateMedicalDetails:
    post:
      tags:
      - Customer
      summary: Updates the medical detail on a claim for a customer.
      description: Updates the medical detail on a claim for a customer.
      operationId: updateClaimMedicalDetails
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: claim case number
        required: true
        schema:
          type: string
      requestBody:
        description: Medical details to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicalDetails'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Returns the medical details which are updated on a claim for
            a customer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalDetailsResponse'
  /customer/claims/{claimId}/medicalDetails/pregnancyDetails:
    get:
      tags:
      - Customer
      summary: Returns pregnancy details on a claim for a customer
      description: Returns pregnancy details on a claim for a customer.
      operationId: getClaimPregnancyDetails
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: claim case number
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Pregnancy details on a claim for a customer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PregnancyDetails'
  /customer/claims/{claimId}/medicalDetails/updatePregnancyDetails:
    post:
      tags:
      - Customer
      description: Update the pregnancy details associated to the claim case.
      operationId: updatePregnancyDetails
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: Claim case number
        required: true
        schema:
          type: string
      requestBody:
        description: Pregnancy details to be updated.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PregnancyDetails'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Returns the pregnancy details added related to the claim.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PregnancyDetails'
  /customer/claims/{claimId}/medicalDetails/diagnosisCodes:
    get:
      tags:
      - Customer
      summary: Get the Diagnosis Codes linked to the Medical Details recorded on Customer
      description: Returns Diagnosis Codes Details for Claim Medical Details for a
        Customer user
      operationId: getClaimDiagnosisCodes
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: claim case number
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Diagnosis Codes Details for Medical Details on a claim for
            a Customer user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiagnosisDetails'
  /customer/claims/{claimId}/medicalDetails/restrictionsLimitations:
    get:
      tags:
      - Customer
      summary: Returns restrictions limitations on a claim for a customer
      description: Returns restrictions limitations on a claim for a customer
      operationId: getClaimRestrictionsLimitations
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: claim case number
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognize the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Read successful. Returns restrictions and limitations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestrictionsLimitations'
  /customer/claims/{claimId}/medicalDetails/hospitalisationDetails:
    get:
      tags:
      - Customer
      summary: Get the list of hospitalisation associated to the claim case.
      description: Get the list of hospitalisation associated to the claim case.
      operationId: getHospitalizationDetails
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: claim case number
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Returns the list of hospitalisation details for specified claim.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HospitalisationDetailsResponse'
  /customer/claims/{claimId}/medicalDetails/updateRestrictionsLimitations:
    post:
      tags:
      - Customer
      summary: Updates the restrictions limitations on a claim for a customer.
      description: Updates the restrictions limitations on a claim for a customer.
      operationId: updateClaimRestrictionsLimitations
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: Claim case number
        required: true
        schema:
          type: string
      requestBody:
        description: restrictions and limitations related information of the claim.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestrictionsLimitations'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Returns the restrictions limitations which are updated on a
            claim for a customer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestrictionsLimitations'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationMessageModel'
  /customer/claims/{claimId}/medicalDetails/addDiagnosisCode:
    post:
      tags:
      - Customer
      summary: Add diagnosis code to claim case medical details.
      description: Add diagnosis code to claim case medical details.
      operationId: addDiagnosisDetailsForCustomer
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: Claim case number
        required: true
        schema:
          type: string
      requestBody:
        description: The diagnosis details to be added to the claim case.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewDiagnosisDetails'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Diagnosis details Added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosisDetails'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationMessageModel'
  /customer/claims/{claimId}/medicalDetails/diagnosisCodes/{diagnosisCodeId}/updateDiagnosisCode:
    post:
      tags:
      - Customer
      summary: Update diagnosis code to claim case medical details.
      description: Update diagnosis code to claim case medical details.
      operationId: updateDiagnosisDetailsForCustomer
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: Claim case number
        required: true
        schema:
          type: string
      - name: diagnosisCodeId
        in: path
        description: The diagnosis code id.
        required: true
        schema:
          type: string
          description: Business Entity OID
          format: string
          example: TE:00012:0000001234
      requestBody:
        description: The diagnosis details to be updated to the claim case.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewDiagnosisDetails'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Diagnosis details Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosisDetails'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationMessageModel'
  /customer/readRepresentedCustomers:
    get:
      tags:
      - Customer
      summary: Reads all represented customers
      description: Returns all the represented customers for the user
      operationId: readRepresentedCustomers
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: All the represented customers for the user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomerSummary'
  /customer/claims/{claimId}/medicalDetails/addHospitalisationDetails:
    post:
      tags:
      - Customer
      summary: Add the hospitalisation details associated to the claim case.
      description: Add the hospitalisation details associated to the claim case.
      operationId: addHospitalisationDetails
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: role
        in: header
        description: This header parameter will be used by the portal user.
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: Claim case number
        required: true
        schema:
          type: string
      requestBody:
        description: Hospitalization details to be added.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HospitalisationDetails'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: Returns the hospitalisation details added related to the claim.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HospitalisationDetailsResponse'
        "422":
          description: Request could not be processed by the application for some
            application specific reason e.g. validation error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationMessageModel'
  /customer/claims/{claimId}/occupations:
    get:
      tags:
      - Customer
      description: Retrieve the occupations of a claim.
      operationId: getClaimOccupations
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: representedCustomerId
        in: header
        description: customer number of the represented customer user accessing the
          resource
        schema:
          type: string
      - name: claimId
        in: path
        description: Claim id of a claim associated with the customer.
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: The occupations of a claim
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ReadOccupation'
  /customer/isRegistered:
    get:
      tags:
      - Customer
      description: API to check if a user is currently registered in FINEOS.
      operationId: isRegistered
      parameters:
      - name: userid
        in: header
        description: Id of the user accessing the resource
        required: true
        schema:
          type: string
      - name: ExternalUserId
        in: header
        description: The customer's user id
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "401":
          description: Cannot recognise the delegated user id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserErrorModel'
        "403":
          description: User does not have permission to access the resource or the
            instance data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
        "200":
          description: isRegistered response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationResponse'
components:
  schemas:
    EnumInstance:
      type: object
      properties:
        id:
          type: string
          description: Enum instance ID (unique in the domain)
        name:
          type: string
          description: Enum instance name
        domainId:
          type: integer
          description: Enum Domain ID, corresponds to <code>domainId</code>
          format: int64
        fullId:
          type: integer
          description: Enum instance fullId, corresponds to <code>TaEnum.fullId</code>
          format: int64
        domainName:
          type: string
          description: Name of domain to which this instance belongs to
        retired:
          type: boolean
          description: If <code>true</code> retired Instances only are returned,if
            <code>false</code>(or not specified) non-retired instances only are returned
        startDate:
          type: string
          description: Date at which the Enum was activated
          format: date
        endDate:
          type: string
          description: Date at which the Enum will become inactive (since that date,
            enum should be considered inactive)
          format: date
        dOrder:
          type: integer
          description: Denotes the order the Enum resides within all Enum Instances
            within Domain
          format: int64
        subsets:
          uniqueItems: true
          type: array
          description: List of subsets to which this instance belongs to
          items:
            $ref: '#/components/schemas/EnumSubsetSummary'
        _links:
          type: object
          additionalProperties:
            type: string
            description: 'Links to related objects (in this case: SELF and DOMAIN)'
            format: url
            example: '{''self'': '''',''domain'': ''''}'
          description: 'Links to related objects (in this case: SELF and DOMAIN)'
          example: '{''self'': '''',''domain'': ''''}'
      description: This model class expose EnumInstance from TA
    EnumSubsetSummary:
      type: object
      properties:
        name:
          type: string
          description: Enum subset name
      description: This model class expose EnumSubset summary information.
    ApiError:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        code:
          type: string
        title:
          type: string
        detail:
          type: string
        source:
          $ref: '#/components/schemas/ErrorSource'
        meta:
          type: object
          additionalProperties:
            type: object
        _links:
          type: object
          additionalProperties:
            type: string
            format: url
    ErrorResponse:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
    ErrorSource:
      type: object
      properties:
        pointer:
          type: string
        parameter:
          type: string
    EnumInstances:
      type: object
      properties:
        elements:
          type: array
          items:
            $ref: '#/components/schemas/EnumInstance'
        totalSize:
          type: integer
          format: int32
        meta:
          type: object
          additionalProperties:
            type: object
        _links:
          type: object
          additionalProperties:
            type: string
            format: url
    QuerySortInfo:
      type: object
      properties:
        sortStatementsText:
          type: string
        sortOrderItemsList:
          type: array
          items:
            $ref: '#/components/schemas/SortOrderItem'
    SortOrderItem:
      type: object
      properties:
        columnName:
          type: string
        direction:
          type: string
          enum:
          - ASC
          - DESC
    EnumDomain:
      type: object
      properties:
        id:
          type: string
          description: Enum domain ID (unique in the system)
        name:
          type: string
          description: Enum domain name
        description:
          type: string
          description: Description of this domain
        editable:
          type: boolean
          description: Flag whether this domain is allowed to be edited. Domain can
            be edited from back office system only - No edit domain endpoint exists.
        alphaSort:
          type: boolean
          description: When value is equal to 'true' it indicating that domain instances
            when presented to user should be sorted alphabetically, 'false' otherwise.
            This parameter does not influence sort order of instances when returned
            by this API
        defaultSort:
          type: boolean
          description: When value is equal to 'true' it indicating that default instance
            should be shown (to user) first in an alphabetically sorted view, 'false'
            othrwise. This parameter does not influence sort order of instances when
            returned by this API
        instances:
          type: array
          description: 'List of the instances that belongs to this domain '
          items:
            $ref: '#/components/schemas/EnumInstanceSummary'
        subsets:
          type: array
          description: List of subsets that belongs to this domain
          items:
            $ref: '#/components/schemas/EnumSubset'
        _links:
          type: object
          additionalProperties:
            type: string
            description: 'Links to related objects (in this case: self and instances)'
            format: url
            example: '{''self'': '''',''instances'': ''''}'
          description: 'Links to related objects (in this case: self and instances)'
          example: '{''self'': '''',''instances'': ''''}'
      description: Enum Domain from TA
    EnumInstanceSummary:
      type: object
      properties:
        id:
          type: string
          description: Enum instance ID
        name:
          type: string
          description: Enum instance name
        _links:
          type: object
          additionalProperties:
            type: string
            description: 'Links to related objects (in this case: enumInstance)'
            format: url
            example: '{''enumInstance'': ''''}'
          description: 'Links to related objects (in this case: enumInstance)'
          example: '{''enumInstance'': ''''}'
      description: This model class expose EnumInstance Summary
    EnumSubset:
      type: object
      properties:
        name:
          type: string
          description: Enum subset name
        instances:
          type: array
          description: 'List of the instances that belongs to this Subset '
          items:
            $ref: '#/components/schemas/EnumInstanceSummary'
      description: This model class expose EnumSubset detailed information, this means
        that except name also list of EnumInstanceSummary objects get exposed.
    EnumDomains:
      type: object
      properties:
        elements:
          type: array
          items:
            $ref: '#/components/schemas/EnumDomain'
        totalSize:
          type: integer
          format: int32
        meta:
          type: object
          additionalProperties:
            type: object
        _links:
          type: object
          additionalProperties:
            type: string
            format: url
    AbsenceCaseSummary:
      type: object
      properties:
        absenceHandler:
          maxLength: 50
          minLength: 0
          type: string
          description: ' The Person handling the absence case'
        absenceHandlerEmailAddress:
          maxLength: 40
          minLength: 0
          type: string
          description: The phone number of the absence case handler
        absenceHandlerPhoneNumber:
          maxLength: 20
          minLength: 0
          type: string
          description: The email address of the absence case handler
        absenceId:
          maxLength: 254
          minLength: 0
          type: string
          description: Absence case identifier
        reason:
          maxLength: 100
          minLength: 0
          type: string
          description: Reason for the absence
        reasonQualifier1:
          maxLength: 100
          minLength: 0
          type: string
          description: Qualifier 1
        reasonQualifier2:
          maxLength: 100
          minLength: 0
          type: string
          description: Qualifier 2
        startDate:
          type: string
          description: ISO 8601 date time format
          format: date-time
          example: 1999-12-31T23:59:59Z
        endDate:
          type: string
          description: ISO 8601 date time format
          format: date-time
          example: 1999-12-31T23:59:59Z
        status:
          maxLength: 100
          minLength: 0
          type: string
          description: Value expected to be from is for enum domain CurrentPhase
        hasFinancialInformation:
          type: boolean
          description: Absence case has financial information
        createdDate:
          type: string
          description: ISO 8601 date time format
          format: date-time
          example: 1999-12-31T23:59:59Z
        notificationCaseId:
          type: string
          description: Notification case id, if applicable for the absence case
    ErrorModel:
      required:
      - error
      type: object
      properties:
        error:
          type: string
        correlationId:
          type: string
        errorDetail:
          type: string
        stacktrace:
          type: string
    UserErrorModel:
      required:
      - error
      type: object
      properties:
        error:
          type: string
    AbsenceCase:
      required:
      - intakeSource
      - notifiedBy
      type: object
      properties:
        additionalComments:
          maxLength: 2000
          minLength: 0
          type: string
          description: Description for this case as entered by the user.
        intakeSource:
          maxLength: 100
          minLength: 0
          type: string
          description: The source of the intake process.
        notifiedBy:
          maxLength: 100
          minLength: 0
          type: string
          description: The notifier for this absence case.
        reason:
          maxLength: 100
          minLength: 0
          type: string
          description: The absence reason.
        reasonQualifier1:
          maxLength: 100
          minLength: 0
          type: string
          description: The qualifier1 for the absence reason.
        reasonQualifier2:
          maxLength: 100
          minLength: 0
          type: string
          description: The qualifier2 for the absence reason.
        reducedScheduleLeavePeriods:
          type: array
          items:
            $ref: '#/components/schemas/ReducedScheduleLeavePeriod'
        timeOffLeavePeriods:
          type: array
          items:
            $ref: '#/components/schemas/TimeOffLeavePeriod'
        episodicLeavePeriods:
          type: array
          items:
            $ref: '#/components/schemas/EpisodicLeavePeriod'
        notificationCaseId:
          maxLength: 254
          minLength: 0
          type: string
          description: An existing Notification Case Id. If empty a new parent Notification
            may be created depending on how the Notification case type is configured.
        notificationReason:
          maxLength: 100
          minLength: 0
          type: string
          description: Notification Reason selected during Notification case intake.
        primaryRelationship:
          type: string
          description: The name of the primary relationship.
        primaryRelQualifier1:
          type: string
          description: The qualifier1 of the primary relationship.
        primaryRelQualifier2:
          type: string
          description: The qualifier2 of the primary relationship.
        secondaryRelationship:
          type: string
          description: The name of the secondary relationship.
        secondaryRelQualifier1:
          type: string
          description: The qualifier1 of the secondary relationship.
        secondaryRelQualifier2:
          type: string
          description: The qualifier2 of the secondary relationship.
        employerNotified:
          type: boolean
          description: Indicates whether the employer has been notified about the
            leave request.
        employerNotificationDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        employerNotificationMethod:
          type: string
          description: The method used to notify the employer about the leave request.
            Only relevant if the employer has been notified (valid if the employer
            has been notified).e.g. Other, By Telephone, In Person and In Writing.
            This maps to enum NotificationMethod(domain id 2547).
    EpisodicLeavePeriod:
      required:
      - endDate
      - startDate
      type: object
      properties:
        startDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        endDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        frequency:
          type: integer
          description: The Frequency of Episodes
          format: int64
        frequencyInterval:
          type: integer
          description: Number indicating the episodic frequency interval
          format: int64
        frequencyIntervalBasis:
          type: string
          description: Frequency interval Basis for e.g. Days, Weeks, Months. This
            maps to enum TimeUnits(domain id 6757)
        duration:
          type: integer
          description: Duration of each individual Episode
          format: int64
        durationBasis:
          type: string
          description: Duration Basis for e.g. Minutes, Hours, Days. This maps to
            enum TimeUnits(domain id 6757)
    ReducedScheduleLeavePeriod:
      required:
      - endDate
      - startDate
      type: object
      properties:
        startDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        endDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        status:
          maxLength: 100
          minLength: 0
          type: string
          description: The status of this absence period. This maps to enum AbsenceStatus(domain
            id 6812).
        mondayOffHours:
          type: integer
          description: The end date off hours for Monday.
          format: int32
        mondayOffMinutes:
          type: integer
          description: The end date off minutes for Monday.
          format: int32
        tuesdayOffHours:
          type: integer
          description: The end date off hours for Tuesday.
          format: int32
        tuesdayOffMinutes:
          type: integer
          description: The end date off minutes for Tuesday.
          format: int32
        wednesdayOffHours:
          type: integer
          description: The end date off hours for Wednesday.
          format: int32
        wednesdayOffMinutes:
          type: integer
          description: The end date off minutes for Wednesday.
          format: int32
        thursdayOffHours:
          type: integer
          description: The end date off hours for Thursday.
          format: int32
        thursdayOffMinutes:
          type: integer
          description: The end date off minutes for Thursday.
          format: int32
        fridayOffHours:
          type: integer
          description: The end date off hours for Friday.
          format: int32
        fridayOffMinutes:
          type: integer
          description: The end date off minutes for Friday.
          format: int32
        saturdayOffHours:
          type: integer
          description: The end date off hours for Saturday.
          format: int32
        saturdayOffMinutes:
          type: integer
          description: The end date off minutes for Saturday.
          format: int32
        sundayOffHours:
          type: integer
          description: The end date off hours for Sunday.
          format: int32
        sundayOffMinutes:
          type: integer
          description: The end date off minutes for Sunday.
          format: int32
    TimeOffLeavePeriod:
      required:
      - endDate
      - startDate
      - status
      type: object
      properties:
        startDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        endDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        lastDayWorked:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        expectedReturnToWorkDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        startDateFullDay:
          type: boolean
          description: The start date full day.
        startDateOffHours:
          type: integer
          description: The start date off hours.
          format: int32
        startDateOffMinutes:
          type: integer
          description: The start date off minutes.
          format: int32
        endDateOffHours:
          type: integer
          description: The end date off hours.
          format: int32
        endDateOffMinutes:
          type: integer
          description: The end date off minutes.
          format: int32
        endDateFullDay:
          type: boolean
          description: The end date full day.
        status:
          maxLength: 100
          minLength: 0
          type: string
          description: The absence status for the absence period. This maps to enum
            AbsenceStatus(domain id 6812).
    AbsenceReasonSummary:
      required:
      - reason
      - reasonQualifier1
      - reasonQualifier2
      type: object
      properties:
        reason:
          maxLength: 100
          minLength: 0
          type: string
          description: The name for the absence reason.
        reasonQualifier1:
          maxLength: 100
          minLength: 0
          type: string
          description: The first qualifier for the absence reason.
        reasonQualifier2:
          maxLength: 100
          minLength: 0
          type: string
          description: The second qualifier for the absence reason.
        coveredPerson:
          type: string
          description: Covered person type.
        askForSecondaryRelationship:
          type: boolean
          description: Specify secondary reason.
        eventType:
          maxLength: 100
          minLength: 0
          type: string
          description: The Event type for the absence reason.
        category:
          maxLength: 100
          minLength: 0
          type: string
          description: The Category for the absence reason.
        allowedGender:
          maxLength: 100
          minLength: 0
          type: string
          description: Gender of the covered person
        medicalRelated:
          maxLength: 100
          minLength: 0
          type: string
          description: Medical information of  the covered person
        seriousHealth:
          maxLength: 100
          minLength: 0
          type: string
          description: Indicates whether the condition is serious or not.
        militaryRelated:
          maxLength: 100
          minLength: 0
          type: string
          description: MilitaryRelated information of  the covered person.
        disabilityIntegration:
          maxLength: 100
          minLength: 0
          type: string
          description: Determines if the reason is classed as a disability condition.
        accommodation:
          maxLength: 100
          minLength: 0
          type: string
          description: Determine whether the reason requires a workplace accommodation.
        notificationReason:
          maxLength: 100
          minLength: 0
          type: string
          description: The notification reason associated with this absence reason.
    ExtensionAttribute:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: The name of the attribute which extends standard claim set
            of attributes.
        stringValue:
          type: string
          description: Value of the class extension attribute of a string type.
        booleanValue:
          type: boolean
          description: Value of the class extension attribute of a boolean type.
        dateOnlyValue:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        decimalValue:
          type: number
          description: Value of the class extension attribute of a Decimal type.
        enumValue:
          $ref: '#/components/schemas/ModelEnum'
        moneyValue:
          type: string
          description: Value of the class extension attribute of a Money type.
        integerValue:
          type: integer
          description: Value of the class extension attribute of a string type.
          format: int32
      description: The extension attributes.
    LimitationDetail:
      type: object
      properties:
        limitationType:
          type: string
          description: Represents a Limitation to be associated to an Accommodation
            Case.
        id:
          maxLength: 254
          minLength: 0
          type: string
          description: 'The unique identifier for this limitation. '
      description: Represents a Limitation to be associated to an Accommodation Case.
    ModelEnum:
      required:
      - domainName
      - instanceValue
      type: object
      properties:
        domainName:
          maxLength: 100
          minLength: 0
          type: string
          description: Domain name.
        instanceValue:
          maxLength: 100
          minLength: 0
          type: string
          description: Enum instance value.
    NotificationAbsenceCaseSummary:
      type: object
      properties:
        absenceHandler:
          maxLength: 50
          minLength: 0
          type: string
          description: ' The Person handling the absence case'
        absenceHandlerEmailAddress:
          maxLength: 40
          minLength: 0
          type: string
          description: The phone number of the absence case handler
        absenceHandlerPhoneNumber:
          maxLength: 20
          minLength: 0
          type: string
          description: The email address of the absence case handler
        absenceId:
          maxLength: 254
          minLength: 0
          type: string
          description: Absence case identifier
        reason:
          maxLength: 100
          minLength: 0
          type: string
          description: Reason for the absence
        reasonQualifier1:
          maxLength: 100
          minLength: 0
          type: string
          description: Qualifier 1
        reasonQualifier2:
          maxLength: 100
          minLength: 0
          type: string
          description: Qualifier 2
        startDate:
          type: string
          description: ISO 8601 date time format
          format: date-time
          example: 1999-12-31T23:59:59Z
        endDate:
          type: string
          description: ISO 8601 date time format
          format: date-time
          example: 1999-12-31T23:59:59Z
        status:
          maxLength: 100
          minLength: 0
          type: string
          description: Value expected to be from is for enum domain CurrentPhase
        hasFinancialInformation:
          type: boolean
          description: Absence case has financial information
        createdDate:
          type: string
          description: ISO 8601 date time format
          format: date-time
          example: 1999-12-31T23:59:59Z
      description: The absence child cases under this notification case.
    NotificationAccommodationCaseSummary:
      type: object
      properties:
        accommodationCaseId:
          maxLength: 256
          minLength: 0
          type: string
          description: The Case Number for the accommodation case
        status:
          type: string
          description: The Accommodation Case current phase.
        notifiedBy:
          type: string
          description: The notifier for this accommodation case
        notificationDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        accommodationDecision:
          type: string
          description: The decision made on this accommodation case
        decisionDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        pregnancyRelated:
          type: string
          description: The date a decision was made on this accommodation case
        caseHandler:
          maxLength: 50
          minLength: 0
          type: string
          description: The Person handling the accommodation case
        caseHandlerPhoneNumber:
          maxLength: 20
          minLength: 0
          type: string
          description: 'The phone number of the accommodation case handler '
        caseHandlerEmailAddress:
          maxLength: 20
          minLength: 0
          type: string
          description: 'The email address of the accommodation case handler '
        workplaceAccommodations:
          type: array
          description: List of Accommodations for this accommodation case
          items:
            $ref: '#/components/schemas/WorkPlaceAccommodationDetail'
        limitations:
          type: array
          description: Represents a Limitation to be associated to an Accommodation
            Case.
          items:
            $ref: '#/components/schemas/LimitationDetail'
      description: The accommodation child cases under this notification case.
    NotificationCaseSummary:
      type: object
      properties:
        notificationCaseId:
          type: string
          description: The case number for the notification case.
        createdDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        notificationReason:
          maxLength: 100
          minLength: 0
          type: string
          description: Notification reason selected during notification case intake.
        notificationDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        status:
          type: string
          description: The notification case status his is the current phase of the
            notification case managing process.
        accidentDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        multipleConflictingAccidentDates:
          type: boolean
          description: Multiple conflicting accident dates found.If true,accidentDate
            attribute will be empty.
        expectedDeliveryDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        actualDeliveryDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        dateFirstMissingWork:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        expectedRTWDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        multipleConflictingExpectedRTWDates:
          type: boolean
          description: Multiple conflicting expected return to work dates found.If
            true,expectedRTW attribute will be empty.
        absences:
          type: array
          description: The child absence cases under this notification case.
          items:
            $ref: '#/components/schemas/NotificationAbsenceCaseSummary'
        claims:
          type: array
          description: The child cases under this notification case.
          items:
            $ref: '#/components/schemas/NotificationClaimSummary'
        accommodations:
          type: array
          description: The child cases under this notification case.
          items:
            $ref: '#/components/schemas/NotificationAccommodationCaseSummary'
    NotificationClaimSummary:
      required:
      - claimId
      - claimType
      type: object
      properties:
        claimId:
          maxLength: 256
          minLength: 0
          type: string
          description: The claim number of the claim
        claimType:
          maxLength: 50
          minLength: 0
          type: string
          description: The name by which the claim type is referred.
        creationDate:
          type: string
          description: ISO 8601 date time format
          format: date-time
          example: 1999-12-31T23:59:59Z
        effectiveDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        customerName:
          maxLength: 256
          minLength: 0
          type: string
          description: The customer name of the claim
        policyReferences:
          maxLength: 50
          minLength: 0
          type: string
          description: The reference(s) to the policy from within the relevant admin
            system.
        description:
          maxLength: 2000
          minLength: 0
          type: string
          description: Description for this case as entered by the user.
        status:
          maxLength: 10
          minLength: 0
          type: string
          description: This is the stage in the process that the case is currently
            at.
        claimHandler:
          maxLength: 50
          minLength: 0
          type: string
          description: The Person that is handling the claim.
        claimHandlerEmailAddress:
          maxLength: 40
          minLength: 0
          type: string
          description: The email address of the claim handler.
        claimHandlerPhoneNo:
          maxLength: 20
          minLength: 0
          type: string
          description: The phone number of the claim handler.
        notificationDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        caseComplexity:
          type: string
          description: Case complexity on Claim
        stageName:
          type: string
          description: The current stage of claim case.
        classExtensionInformation:
          type: array
          description: An array of the extensionAttribute objects which contain extension
            information.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
      description: The child cases under this notification case.
    WorkPlaceAccommodationDetail:
      type: object
      properties:
        accommodationCategory:
          type: string
          description: The Category that identifies this association.
        accommodationType:
          type: string
          description: The Type that identifies this accommodation
        accommodationDescription:
          type: string
          description: The description of this accommodation.
        id:
          maxLength: 254
          minLength: 0
          type: string
          description: The unique identifier for this accommodation
        creationDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        implementDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        implementedDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        accommodationEndDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
      description: List of Accommodations for this accommodation case
    Absence:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the absence case
        caseReference:
          type: string
          description: Case reference related to absence
      description: Absence case related to qualified request
    Decision:
      type: object
      properties:
        absence:
          $ref: '#/components/schemas/Absence'
        employee:
          $ref: '#/components/schemas/Employee'
        period:
          $ref: '#/components/schemas/Period'
      description: List of Period Decisions for the given absence or employee
    Employee:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the employee
        name:
          type: string
          description: Name of the employee
      description: Employee for which leave request is submitted
    LeavePlan:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the leave plan
        name:
          type: string
          description: Leave plan long name
        shortName:
          type: string
          description: Leave plan short name
        applicabilityStatus:
          type: string
          description: Applicability status of leave plan
        eligibilityStatus:
          type: string
          description: Eligibility status of leave plan
        availabilityStatus:
          type: string
          description: Result of the evaluation of plan availability within a leave
            request
        adjudicationStatus:
          type: string
          description: Adjudication status of leave plan
        evidenceStatus:
          type: string
          description: Evidence status made on this Selected Leave Plan
        category:
          type: string
          description: Leave plan category
        timeBankMethod:
          type: string
          description: The time bank method either from the Service Agreement or from
            the Leave Plan Availability
        timeWithinPeriod:
          type: integer
          description: Number of time units for the period duration e.g. Weeks, Days
          format: int64
        timeWithinPeriodBasis:
          type: string
          description: 'Units of time used in calculating the time with in period '
        fixedYearStartDay:
          type: integer
          description: Start day for the specified fixed year
          format: int64
        fixedYearStartMonth:
          type: string
          description: Fixed year start month
        timeEntitlement:
          type: number
          description: Number of time units for the time entitlement
        timeEntitlementBasis:
          type: string
          description: Units of time used in leave plan availability
        paidLeaveCaseId:
          type: string
          description: Paid leave case id
      description: The leave plan associated with the request
    LeaveRequest:
      type: object
      properties:
        id:
          type: string
          description: Business Entity OID
          format: string
          example: TE:00012:0000001234
        reasonName:
          type: string
          description: The leave request reason
        qualifier1:
          type: string
          description: The leave request first qualifier
        qualifier2:
          type: string
          description: The leave request second qualifier
        decisionStatus:
          type: string
          description: Leave request decision status
        approvalReason:
          type: string
          description: Reason for approval of a request
        denialReason:
          type: string
          description: Reason for denial of a request
      description: Leave request
    Period:
      type: object
      properties:
        periodReference:
          type: string
          description: Business Entity OID
          format: string
          example: TE:00012:0000001234
        parentPeriodReference:
          type: string
          description: Reference number for the parent period
        relatedToEpisodic:
          type: boolean
          description: True if this period represents a reported actual for an episodic
            requested period, false otherwise
        startDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        endDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        balanceDeduction:
          type: number
          description: The amount of time deducted from the time bank in the specified
            time entitlement basis e.g. number of Weeks, Days etc.
        timeRequested:
          type: string
          description: The amount of time requested in this period, in the specified
            time entitlement basis e.g. number of Weeks, Days
        timeDecisionStatus:
          type: string
          description: Decision status associated with the period
        timeDecisionReason:
          type: string
          description: Decision reason associated with the period
        type:
          type: string
          description: Type of the absence period
        status:
          type: string
          description: Status of the leave request
        leavePlan:
          $ref: '#/components/schemas/LeavePlan'
        leaveRequest:
          $ref: '#/components/schemas/LeaveRequest'
      description: Leave period
    PeriodDecisions:
      type: object
      properties:
        startDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        endDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        decisions:
          type: array
          description: List of Period Decisions for the given absence or employee
          items:
            $ref: '#/components/schemas/Decision'
    AbsencePeriodDecision:
      type: object
      properties:
        periodId:
          type: string
          description: Business Entity OID
          format: string
          example: TE:00012:0000001234
        parentPeriodId:
          type: string
        startDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        endDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        absencePeriodStatus:
          type: string
          description: Status of absence period.
        absencePeriodType:
          type: string
          description: Type of absence period.
        absenceCaseId:
          type: string
          description: Absence Case ID.
        leavePlanId:
          type: string
          description: Leave plan ID.
        leavePlanCategory:
          type: string
          description: Category of leave plan.
        leavePlanName:
          type: string
          description: Leave plan name.
        leavePlanShortName:
          type: string
          description: Leave plan short name.
        timeBankMethod:
          type: string
          description: Time bank method of leave plan period.
        timeWithinPeriod:
          type: integer
          description: Time within absence period.
          format: int64
        timeWithinPeriodBasis:
          type: string
          description: Time within period basis of absence period.
        fixedYearStartDay:
          type: integer
          description: Fixed year start date of absence period.
          format: int64
        fixedYearStartMonth:
          type: string
          description: Fixed year start month of absence period.
        timeEntitlement:
          type: number
          description: Time entitlement of absence period.
        timeEntitlementBasis:
          type: string
          description: Time entitlement basis of absence period.
        reasonName:
          type: string
          description: Reason name of leave plan.
        qualifier1:
          type: string
          description: Leave plan qualifier1.
        qualifier2:
          type: string
          description: Leave plan qualifier2.
        selectedLeavePlanId:
          type: string
          description: Business Entity OID
          format: string
          example: TE:00012:0000001234
        applicabilityStatus:
          type: string
          description: Applicability status of leave plan.
        eligibilityStatus:
          type: string
          description: Eligibility status of leave plan.
        adjudicationStatus:
          type: string
          description: Adjudication status of leave plan.
        evidenceStatus:
          type: string
          description: Evidence status of leave plan.
        availabilityStatus:
          type: string
          description: Availability status of leave plan.
        leaveRequestId:
          type: string
          description: Business Entity OID
          format: string
          example: TE:00012:0000001234
        decisionStatus:
          type: string
          description: Absence plan decision status.
        approvalReason:
          type: string
          description: Absence plan approval reason.
        denialReason:
          type: string
          description: Absence plan denial status.
        timeDecisionStatus:
          type: string
          description: Absence plan time decision status.
        timeDecisionReason:
          type: string
          description: Absence plan time decision reason.
        balanceDeduction:
          type: number
          description: Balance deduction value for every decision day included in
            this period.
        actualForRequestedEpisodic:
          type: boolean
          description: True if this is an Actual Period linked to an Episodic Period.
        timeRequested:
          type: string
          description: The time requested for Actual Periods linked to an Episodic
            Period.
    AbsencePeriodDecisions:
      type: object
      properties:
        startDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        endDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        absencePeriodDecisions:
          type: array
          items:
            $ref: '#/components/schemas/AbsencePeriodDecision'
    AbsenceDay:
      type: object
      properties:
        date:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        timeRequested:
          maxLength: 100
          minLength: 0
          type: string
          description: The total requested time of absence associated with this day.
        timeRequestedBasis:
          maxLength: 100
          minLength: 0
          type: string
          description: TaEnum<LengthBasis> value
        decision:
          maxLength: 100
          minLength: 0
          type: string
          description: Decision status of leave request
      description: The absence days for this absence case.
    AbsenceDetails:
      type: object
      properties:
        absenceId:
          maxLength: 254
          minLength: 0
          type: string
          description: The case number of this absence case.
        creationDate:
          type: string
          description: ISO 8601 date time format
          format: date-time
          example: 1999-12-31T23:59:59Z
        lastUpdatedDate:
          type: string
          description: ISO 8601 date time format
          format: date-time
          example: 1999-12-31T23:59:59Z
        status:
          maxLength: 100
          minLength: 0
          type: string
          description: The status for this absence case.
        notifiedBy:
          maxLength: 254
          minLength: 0
          type: string
          description: The notifier for this absence case.
        notificationDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        absencePeriods:
          type: array
          description: The absence periods for this absence case.
          items:
            $ref: '#/components/schemas/AbsencePeriod'
        absenceDays:
          type: array
          description: The absence days for this absence case.
          items:
            $ref: '#/components/schemas/AbsenceDay'
        reportedTimeOff:
          type: array
          description: The list of time off leave periods.
          items:
            $ref: '#/components/schemas/ReportedTimeOffLeavePeriod'
        reportedReducedSchedule:
          type: array
          description: The list of reduced scheduled leave periods.
          items:
            $ref: '#/components/schemas/ReportedReducedScheduleLeavePeriod'
        selectedLeavePlans:
          type: array
          description: The selected leave plans for this absence case.
          items:
            $ref: '#/components/schemas/LeavePlanDetails'
        financialCaseIds:
          type: array
          description: The values of the financial case Ids on this absence case.
          items:
            type: string
            description: The values of the financial case Ids on this absence case.
    AbsencePeriod:
      type: object
      properties:
        id:
          type: string
          description: Business Entity OID
          format: string
          example: TE:00012:0000001234
        reason:
          maxLength: 100
          minLength: 0
          type: string
          description: The name for the absence reason.
        reasonQualifier1:
          maxLength: 100
          minLength: 0
          type: string
          description: The first qualifier for the absence reason.
        reasonQualifier2:
          maxLength: 100
          minLength: 0
          type: string
          description: The second qualifier for the absence reason.
        startDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        endDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        expectedReturnToWorkDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        status:
          maxLength: 100
          minLength: 0
          type: string
          description: The status for this absence period.
        requestStatus:
          maxLength: 100
          minLength: 0
          type: string
          description: The status of the leave request.
        absenceType:
          maxLength: 100
          minLength: 0
          type: string
          description: The absenceType for the absence reason.
        episodicLeavePeriodDetail:
          $ref: '#/components/schemas/EpisodicLeavePeriodDetail'
      description: The absence periods for this absence case.
    EpisodicLeavePeriodDetail:
      type: object
      properties:
        frequency:
          type: integer
          description: The Frequency of Episodes
          format: int64
        frequencyInterval:
          type: integer
          description: Number indicating the episodic frequency interval
          format: int64
        frequencyIntervalBasis:
          type: string
          description: Frequency interval Basis for e.g. Days, Weeks, Months. This
            maps to enum TimeUnits(domain id 6757)
        duration:
          type: integer
          description: Duration of each individual Episode
          format: int64
        durationBasis:
          type: string
          description: Duration Basis for e.g. Minutes, Hours, Days. This maps to
            enum TimeUnits(domain id 6757)
      description: The episodic leave period detail for the absence case.
    LeavePlanDetails:
      type: object
      properties:
        longName:
          maxLength: 50
          minLength: 0
          type: string
          description: The long name for the leave plan.
        category:
          maxLength: 100
          minLength: 0
          type: string
          description: The category for this leave plan.
        applicability:
          maxLength: 100
          minLength: 0
          type: string
          description: The applicability status of the Selected Leave Plan.
        eligibility:
          maxLength: 100
          minLength: 0
          type: string
          description: The eligibility status of the Selected Leave Plan.
        decision:
          maxLength: 100
          minLength: 0
          type: string
          description: The availability status of the Selected Leave Plan.
      description: The selected leave plans for this absence case.
    ReportedReducedScheduleLeavePeriod:
      required:
      - endDate
      - startDate
      type: object
      properties:
        startDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        endDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        decision:
          maxLength: 100
          minLength: 0
          type: string
          description: Decison status for the absence period. This maps to enum DecisionStatus(domain
            id 6821).
        mondayOffHours:
          type: integer
          description: The end date off hours for Monday.
          format: int32
        mondayOffMinutes:
          type: integer
          description: The end date off minutes for Monday.
          format: int32
        tuesdayOffHours:
          type: integer
          description: The end date off hours for Tuesday.
          format: int32
        tuesdayOffMinutes:
          type: integer
          description: The end date off minutes for Tuesday.
          format: int32
        wednesdayOffHours:
          type: integer
          description: The end date off hours for Wednesday.
          format: int32
        wednesdayOffMinutes:
          type: integer
          description: The end date off minutes for Wednesday.
          format: int32
        thursdayOffHours:
          type: integer
          description: The end date off hours for Thursday.
          format: int32
        thursdayOffMinutes:
          type: integer
          description: The end date off minutes for Thursday.
          format: int32
        fridayOffHours:
          type: integer
          description: The end date off hours for Friday.
          format: int32
        fridayOffMinutes:
          type: integer
          description: The end date off minutes for Friday.
          format: int32
        saturdayOffHours:
          type: integer
          description: The end date off hours for Saturday.
          format: int32
        saturdayOffMinutes:
          type: integer
          description: The end date off minutes for Saturday.
          format: int32
        sundayOffHours:
          type: integer
          description: The end date off hours for Sunday.
          format: int32
        sundayOffMinutes:
          type: integer
          description: The end date off minutes for Sunday.
          format: int32
      description: The list of reduced scheduled leave periods.
    ReportedTimeOffLeavePeriod:
      required:
      - endDate
      - startDate
      type: object
      properties:
        startDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        endDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        lastDayWorked:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        expectedReturnToWorkDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        startDateFullDay:
          type: boolean
          description: The start date full day.
        startDateOffHours:
          type: integer
          description: The start date off hours.
          format: int32
        startDateOffMinutes:
          type: integer
          description: The start date off minutes.
          format: int32
        endDateOffHours:
          type: integer
          description: The end date off hours.
          format: int32
        endDateOffMinutes:
          type: integer
          description: The end date off minutes.
          format: int32
        endDateFullDay:
          type: boolean
          description: The end date full day.
        decision:
          maxLength: 100
          minLength: 0
          type: string
          description: Decison status for the absence period. This maps to enum DecisionStatus(domain
            id 6821).
      description: The list of time off leave periods.
    AbsenceReasonModel:
      required:
      - reason
      - reasonQualifier1
      - reasonQualifier2
      type: object
      properties:
        reason:
          maxLength: 100
          minLength: 0
          type: string
          description: The name for the absence reason.
        reasonQualifier1:
          maxLength: 100
          minLength: 0
          type: string
          description: The first qualifier for the absence reason.
        reasonQualifier2:
          maxLength: 100
          minLength: 0
          type: string
          description: The second qualifier for the absence reason.
      description: The absence reasons linked to the leave plan.
    LeavePlanModel:
      required:
      - absenceReasons
      - leavePlanId
      type: object
      properties:
        leavePlanId:
          maxLength: 35
          minLength: 0
          type: string
          description: Leave Plan UUID is a mandatory field, it must be specified.
        longName:
          maxLength: 50
          minLength: 0
          type: string
          description: The long name for the leave plan.
        description:
          maxLength: 3000
          minLength: 0
          type: string
          description: The description for the leave plan.
        informationLink:
          maxLength: 500
          minLength: 0
          type: string
          description: The link URL for the leave plan. This can contain a link to
            relevant online document.
        category:
          type: string
          description: The category for this leave plan.
        group:
          type: string
          description: The group for this leave plan.
        type:
          type: string
          description: The type for this leave plan.
        jobProtection:
          type: string
          description: Indicates the level of job protection on this leave plan.
        minimumWorkHours:
          maxLength: 9999
          minLength: 0
          type: string
          description: The minimum hours worked within a period.
        lengthOfService:
          type: string
          description: The worked within period basis.
        entitlement:
          maxLength: 999
          minLength: 0
          type: string
          description: Number of time units for the Time Entitlement.
        entitlementCalculationPeriod:
          type: string
          description: Concatenated value of DurationValue, DurationBasis, CalculatePeriodMethod,
            FixedYearStartDay, FixedYearStartMonth.
        leavePlanAppliesToStates:
          type: boolean
          description: This applies to the leave plan.
        effectiveFromDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        effectiveToDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        states:
          type: array
          description: List of work states can be added as states where the plan is
            applicable.
          items:
            type: string
            description: List of work states can be added as states where the plan
              is applicable.
        otherDetails:
          type: array
          description: Other details if the employer of the logged in user is linked
            to that plan through their service agreement.
          items:
            type: string
            description: Other details if the employer of the logged in user is linked
              to that plan through their service agreement.
        absenceReasons:
          type: array
          description: The absence reasons linked to the leave plan.
          items:
            $ref: '#/components/schemas/AbsenceReasonModel'
        statesData:
          type: array
          writeOnly: true
          items:
            type: string
    EmployeeRegistrationStatus:
      type: object
      properties:
        registered:
          type: boolean
          description: True if the Employee is registered, false otherwise.
      description: Payload containing information on the status of Employee registration.
    LeavePlanSummary:
      required:
      - leavePlanId
      type: object
      properties:
        leavePlanId:
          maxLength: 36
          minLength: 0
          type: string
          description: The Leave Plan UUID.
        name:
          maxLength: 50
          minLength: 0
          type: string
          description: The long name for the leave plan.
        description:
          maxLength: 3000
          minLength: 0
          type: string
          description: The description for the leave plan.
        startDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        endDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        category:
          type: string
          description: The category for this leave plan.
        group:
          type: string
          description: The group for this leave plan.
        type:
          type: string
          description: The type for this leave plan.
    EmploymentDetails:
      type: object
      properties:
        employeeId:
          type: string
          description: The employee Id.
        dateOfHire:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        manager:
          type: string
          description: The full name of the employee Manager
        jobTitle:
          type: string
          description: The job title
        department:
          type: string
          description: The organisation unit
        workSite:
          type: string
          description: The Worksite from this occupation
        workCity:
          type: string
          description: The work city
        workState:
          type: string
          description: The work state
        workPattern:
          type: string
          description: The work pattern
        hoursWorkedPerWeek:
          type: number
          description: The number of hours worked per week
        hoursWorkedPerYear:
          type: integer
          description: The number of hours worked per year
          format: int32
    AccommodationCaseSummary:
      type: object
      properties:
        accommodationCaseId:
          maxLength: 256
          minLength: 0
          type: string
          description: The Case Number for the accommodation case
        status:
          maxLength: 100
          minLength: 0
          type: string
          description: The Accommodation Case current phase.
        notifiedBy:
          type: string
          description: The notifier for this accommodation case
        notificationDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        accommodationDecision:
          type: string
          description: The decision made on this accommodation case
        decisionDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        pregnancyRelated:
          type: string
          description: The date a decision was made on this accommodation case
        caseHandler:
          maxLength: 50
          minLength: 0
          type: string
          description: The Person handling the accommodation case
        caseHandlerPhoneNumber:
          maxLength: 20
          minLength: 0
          type: string
          description: 'The phone number of the accommodation case handler '
        caseHandlerEmailAddress:
          maxLength: 40
          minLength: 0
          type: string
          description: 'The email address of the accommodation case handler '
        workplaceAccommodationDetails:
          type: array
          description: List of Accommodations for this accommodation case
          items:
            $ref: '#/components/schemas/WorkPlaceAccommodationDetail'
        limitations:
          type: array
          description: List of Limitation for this Accommodation Case.
          items:
            $ref: '#/components/schemas/LimitationDetail'
        additionalNotes:
          maxLength: 20000
          minLength: 0
          type: string
          description: Additional notes for the accommodation.
        notificationCaseId:
          maxLength: 254
          minLength: 0
          type: string
          description: Notification case id, if applicable for the accommodation case
        notificationReason:
          maxLength: 100
          minLength: 0
          type: string
          description: Notification Reason selected during Notification case intake.
    AccommodationCase:
      required:
      - pregnancyRelated
      type: object
      properties:
        notificationCaseId:
          maxLength: 254
          minLength: 0
          type: string
          description: 'Notification case id of the case to which the accommodation
            should be added as a child case.  '
        notificationReason:
          maxLength: 100
          minLength: 0
          type: string
          description: Notification Reason selected during Notification case intake.
        additionalNotes:
          maxLength: 20000
          minLength: 0
          type: string
          description: Additional notes for this accommodation.
        pregnancyRelated:
          type: string
          description: "Identifies whether the accommodation being requested is related\
            \ to an employee\x92s pregnancy. This is a statutory requirement in certain\
            \ states and is captured so as it can be reported upon where required. "
        workPlaceAccommodations:
          type: array
          description: List of Accommodations for this accommodation case.
          items:
            $ref: '#/components/schemas/WorkPlaceAccommodation'
        limitations:
          type: array
          description: Represents a Limitation to be associated to an Accommodation
            Case.
          items:
            $ref: '#/components/schemas/Limitation'
    Limitation:
      type: object
      properties:
        limitationType:
          type: string
          description: Represents a Limitation to be associated to an Accommodation
            Case.
      description: Represents a Limitation to be associated to an Accommodation Case.
    WorkPlaceAccommodation:
      type: object
      properties:
        accommodationCategory:
          type: string
          description: The Category that identifies this association.
        accommodationType:
          type: string
          description: The Type that identifies this accommodation
        accommodationDescription:
          type: string
          description: The description of this accommodation.
      description: List of Accommodations for this accommodation case.
    AdditionalInformation:
      required:
      - reflexiveQuestionLevel
      type: object
      properties:
        reflexiveQuestionLevel:
          type: string
          description: The reflexive question level.
        reflexiveQuestionDetails:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
    Attribute:
      required:
      - fieldName
      type: object
      properties:
        fieldName:
          type: string
          description: The name of an attribute.
        booleanValue:
          type: boolean
          description: Boolean value of an attribute.
        dateValue:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        decimalValue:
          type: number
          description: Decimal value of an attribute.
        integerValue:
          type: integer
          description: Integer value of an attribute.
          format: int32
        stringValue:
          type: string
          description: String value of an attribute.
        enumValue:
          $ref: '#/components/schemas/ModelEnum'
    EmployeeLeaveBalance:
      type: object
      properties:
        approvedTime:
          type: number
          description: Employee total approved leave as per the leave plan for the
            given period.
        pendingTime:
          type: number
          description: Employee total pending leave as per the leave plan for the
            given period.
        availableBalance:
          type: number
          description: Employee total approximate available leave balance as per the
            leave plan for the given period.
        timeBasis:
          type: string
          description: The basis use to record Time Unit of approved, pending and
            entitlement.It may be Minues, Hours, Days, Weeks or Months.
        availabilityPeriodStartDate:
          type: string
          description: ISO 8601 date time format
          format: date-time
          example: 1999-12-31T23:59:59Z
        availabilityPeriodEndDate:
          type: string
          description: ISO 8601 date time format
          format: date-time
          example: 1999-12-31T23:59:59Z
        timeEntitlement:
          type: number
          description: The time that is available to an employee who has met the eligibility
            requirements as per the leave plan.
        timeWithinPeriod:
          maximum: 9999
          minimum: 0
          type: integer
          description: Specify the time frame within which the employee must avail
            of the entitled leave. For example, an employee may be entitled to 6 weeks
            leave within a 12-month period.
          format: int64
        timeWithinPeriodBasis:
          type: string
          description: The basis use to record Time Unit of Time Within Period. It
            may be Minues, Hours, Days, Weeks or Months.
        notificationMessage:
          type: string
          description: The notification message gives additional information to the
            employer about the balance being presented and can explain some reasons
            to be cautious of the value presented here.
    EmployeeSummaryForManager:
      type: object
      properties:
        firstName:
          type: string
          description: First names of a person.
        lastName:
          type: string
          description: The person's lastName.
        initials:
          type: string
          description: The person's middle initials.
        employeeId:
          type: string
          description: The employment id of the employee.
    PaginatedEmployeeSearchResults:
      type: object
      properties:
        totalNumberOfRecords:
          type: integer
          format: int64
        employees:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeSummaryForManager'
    SupervisedAbsenceDay:
      type: object
      properties:
        date:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        timeRequested:
          maxLength: 100
          minLength: 0
          type: string
          description: The total requested time of absence associated with this day.
        timeRequestedBasis:
          maxLength: 100
          minLength: 0
          type: string
          description: TaEnum<LengthBasis> value
        decision:
          maxLength: 100
          minLength: 0
          type: string
          description: Decision status of leave request
      description: The absence days for this absence case.
    SupervisedAbsenceDetails:
      type: object
      properties:
        absenceId:
          maxLength: 254
          minLength: 0
          type: string
          description: The case number of this absence case.
        creationDate:
          type: string
          description: ISO 8601 date time format
          format: date-time
          example: 1999-12-31T23:59:59Z
        lastUpdatedDate:
          type: string
          description: ISO 8601 date time format
          format: date-time
          example: 1999-12-31T23:59:59Z
        status:
          maxLength: 100
          minLength: 0
          type: string
          description: The status for this absence case.
        notifiedBy:
          maxLength: 254
          minLength: 0
          type: string
          description: The notifier for this absence case.
        notificationDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        member:
          maxLength: 100
          minLength: 0
          type: string
          description: Full name of the employee for whom the absence case was created.
        memberId:
          maxLength: 100
          minLength: 0
          type: string
          description: The id of an employee in respect of its employer.
        absencePeriods:
          type: array
          description: The absence periods for this absence case.
          items:
            $ref: '#/components/schemas/SupervisedAbsencePeriod'
        absenceDays:
          type: array
          description: The absence days for this absence case.
          items:
            $ref: '#/components/schemas/SupervisedAbsenceDay'
        reportedTimeOff:
          type: array
          description: The list of supervised time off leave periods.
          items:
            $ref: '#/components/schemas/SupervisedTimeOffLeavePeriod'
        reportedReducedSchedule:
          type: array
          description: The list of supervised reduced schedule leave periods.
          items:
            $ref: '#/components/schemas/SupervisedReducedScheduleLeavePeriod'
    SupervisedAbsencePeriod:
      type: object
      properties:
        id:
          type: string
          description: Business Entity OID
          format: string
          example: TE:00012:0000001234
        reason:
          maxLength: 100
          minLength: 0
          type: string
          description: The name for the absence reason.
        reasonQualifier1:
          maxLength: 100
          minLength: 0
          type: string
          description: The first qualifier for the absence reason.
        reasonQualifier2:
          maxLength: 100
          minLength: 0
          type: string
          description: The second qualifier for the absence reason.
        startDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        endDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        expectedReturnToWorkDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        status:
          maxLength: 100
          minLength: 0
          type: string
          description: The status for this absence period.
        requestStatus:
          maxLength: 100
          minLength: 0
          type: string
          description: The status of the leave request.
        absenceType:
          maxLength: 100
          minLength: 0
          type: string
          description: The absenceType for the absence reason.
        episodicLeavePeriodDetail:
          $ref: '#/components/schemas/EpisodicLeavePeriodDetail'
      description: The absence periods for this absence case.
    SupervisedReducedScheduleLeavePeriod:
      required:
      - endDate
      - startDate
      type: object
      properties:
        startDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        endDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        status:
          maxLength: 100
          minLength: 0
          type: string
          description: The status of this absence period. This maps to enum AbsenceStatus(domain
            id 6812).
        mondayOffHours:
          type: integer
          description: The end date off hours for Monday.
          format: int32
        mondayOffMinutes:
          type: integer
          description: The end date off minutes for Monday.
          format: int32
        tuesdayOffHours:
          type: integer
          description: The end date off hours for Tuesday.
          format: int32
        tuesdayOffMinutes:
          type: integer
          description: The end date off minutes for Tuesday.
          format: int32
        wednesdayOffHours:
          type: integer
          description: The end date off hours for Wednesday.
          format: int32
        wednesdayOffMinutes:
          type: integer
          description: The end date off minutes for Wednesday.
          format: int32
        thursdayOffHours:
          type: integer
          description: The end date off hours for Thursday.
          format: int32
        thursdayOffMinutes:
          type: integer
          description: The end date off minutes for Thursday.
          format: int32
        fridayOffHours:
          type: integer
          description: The end date off hours for Friday.
          format: int32
        fridayOffMinutes:
          type: integer
          description: The end date off minutes for Friday.
          format: int32
        saturdayOffHours:
          type: integer
          description: The end date off hours for Saturday.
          format: int32
        saturdayOffMinutes:
          type: integer
          description: The end date off minutes for Saturday.
          format: int32
        sundayOffHours:
          type: integer
          description: The end date off hours for Sunday.
          format: int32
        sundayOffMinutes:
          type: integer
          description: The end date off minutes for Sunday.
          format: int32
      description: The list of supervised reduced schedule leave periods.
    SupervisedTimeOffLeavePeriod:
      required:
      - endDate
      - startDate
      type: object
      properties:
        startDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        endDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        lastDayWorked:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        expectedReturnToWorkDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        startDateFullDay:
          type: boolean
          description: The start date full day.
        startDateOffHours:
          type: integer
          description: The start date off hours.
          format: int32
        startDateOffMinutes:
          type: integer
          description: The start date off minutes.
          format: int32
        endDateOffHours:
          type: integer
          description: The end date off hours.
          format: int32
        endDateOffMinutes:
          type: integer
          description: The end date off minutes.
          format: int32
        endDateFullDay:
          type: boolean
          description: The end date full day.
        decision:
          maxLength: 100
          minLength: 0
          type: string
          description: Decison status for the absence period. This maps to enum DecisionStatus(domain
            id 6821).
      description: The list of supervised time off leave periods.
    NotificationCaseSummaryForAbsenceTypes:
      type: object
      properties:
        notificationCaseId:
          type: string
          description: The case number for the notification case.
        createdDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        notificationReason:
          maxLength: 100
          minLength: 0
          type: string
          description: Notification reason selected during notification case intake.
        notificationDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        status:
          type: string
          description: The notification case status his is the current phase of the
            notification case managing process.
        accidentDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        multipleConflictingAccidentDates:
          type: boolean
          description: Multiple conflicting accident dates found.If true,accidentDate
            attribute will be empty.
        expectedDeliveryDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        actualDeliveryDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        dateFirstMissingWork:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        expectedRTWDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        multipleConflictingExpectedRTWDates:
          type: boolean
          description: Multiple conflicting expected return to work dates found.If
            true,expectedRTW attribute will be empty.
        accommodations:
          type: array
          description: The accommodation child cases under this notification case.
          items:
            $ref: '#/components/schemas/NotificationAccommodationCaseSummary'
        absences:
          type: array
          description: The absence child cases under this notification case.
          items:
            $ref: '#/components/schemas/NotificationAbsenceCaseSummary'
    PaginatedSupervisedAbsences:
      type: object
      properties:
        totalNumberOfRecords:
          type: integer
          format: int64
        absences:
          type: array
          items:
            $ref: '#/components/schemas/SupervisedAbsenceSummary'
    SupervisedAbsenceSummary:
      type: object
      properties:
        absenceHandler:
          maxLength: 50
          minLength: 0
          type: string
          description: ' The Person handling the absence case'
        absenceHandlerEmailAddress:
          maxLength: 40
          minLength: 0
          type: string
          description: The phone number of the absence case handler
        absenceHandlerPhoneNumber:
          maxLength: 20
          minLength: 0
          type: string
          description: The email address of the absence case handler
        absenceId:
          maxLength: 254
          minLength: 0
          type: string
          description: Absence case identifier
        reason:
          maxLength: 100
          minLength: 0
          type: string
          description: Reason for the absence
        reasonQualifier1:
          maxLength: 100
          minLength: 0
          type: string
          description: Qualifier 1
        reasonQualifier2:
          maxLength: 100
          minLength: 0
          type: string
          description: Qualifier 2
        startDate:
          type: string
          description: ISO 8601 date time format
          format: date-time
          example: 1999-12-31T23:59:59Z
        endDate:
          type: string
          description: ISO 8601 date time format
          format: date-time
          example: 1999-12-31T23:59:59Z
        status:
          maxLength: 100
          minLength: 0
          type: string
          description: Value expected to be from is for enum domain CurrentPhase
        hasFinancialInformation:
          type: boolean
          description: Absence case has financial information
        createdDate:
          type: string
          description: ISO 8601 date time format
          format: date-time
          example: 1999-12-31T23:59:59Z
        notificationCaseId:
          type: string
          description: Notification case id, if applicable for the absence case
        member:
          maxLength: 100
          minLength: 0
          type: string
          description: Full name of the employee
        memberId:
          maxLength: 50
          minLength: 0
          type: string
          description: The id of an employee in respect of its employer.
    EForm:
      required:
      - eformId
      type: object
      properties:
        eformType:
          maxLength: 200
          minLength: 0
          type: string
          description: Name of the EForm document type
        eformId:
          type: integer
          description: Unique automatically generated Id of an EForm document.
          format: int64
        eformAttributes:
          type: array
          description: An array of EForm attributes.
          items:
            $ref: '#/components/schemas/EFormAttribute'
    EFormAttribute:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: The name of an EForm attibute.
        booleanValue:
          type: boolean
          description: Boolean value of an EForm attribute, which must be populated
            if the type attribute is set to boolean.
        dateValue:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        decimalValue:
          type: number
          description: Decimal value of an EForm attribute, which must be populated
            if the type attribute is set to decimal.
        integerValue:
          type: integer
          description: Integer value of an EForm attribute, which must be populated
            if the type attribute is set to integer.
          format: int32
        stringValue:
          type: string
          description: String value of an EForm attribute, which must be populated
            if the type attribute is set to string.
        enumValue:
          $ref: '#/components/schemas/ModelEnum'
    MedicalDetailsResponse:
      type: object
      properties:
        condition:
          type: string
          description: A description of the medical condition of the injured party.
        firstDoctorVisitDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        lastReceivedDateMedicalInfo:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        lastRequestedDateMedicalInfo:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        medicalAuthorisationReceivedDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        pregnancyIndicator:
          type: boolean
          description: Indicates whether a person is pregnant or not.
        treatmentPlan:
          type: string
          description: A description of the treatment plan for the injured party.
        clientDominantSide:
          type: string
          description: The claimants dominant side.
        lifeExpectancy:
          type: string
          description: Projected life expectancy for the injured party based on the
            current medical information.
        causeOfInjuryCode:
          type: string
          description: The code ID that specifies the cause of injury.
        extensionAttributes:
          type: array
          description: Extension attributes.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
        symptomsFirstAppeared:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        description:
          type: string
          description: Description of the cause of injury code.
    SocialSecurityBenefitResponse:
      type: object
      properties:
        socialSecurityBenefitId:
          type: string
          description: The unique identification number(oid).
        authorityConsentDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        benefitAmount:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        claimStatus:
          type: string
          description: The status of the insureds application with the Social Security
            Administration.
        awardInformationReceivedDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        disabilityBenefitsEligibleDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        earlyRetirementBenefitsEligibleDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        insuranceEndDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        reimbursementAgreementSignedDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        reimbursementAgreementReceived:
          type: boolean
          description: Indicates that the reimbursement Agreement has been received.
    SocialSecurityDecisionResponse:
      required:
      - socialSecurityDecisionId
      type: object
      properties:
        socialSecurityDecisionId:
          maxLength: 32
          minLength: 0
          type: string
          description: The unique identifier for the social security
        applicationDate:
          type: string
          description: ISO 8601 date time format
          format: date-time
          example: 1999-12-31T23:59:59Z
        decisionDate:
          type: string
          description: ISO 8601 date time format
          format: date-time
          example: 1999-12-31T23:59:59Z
        approvalType:
          type: string
          description: The level of decision made for the social security decision
        decision:
          type: string
          description: This is the actual decision made for the social security decision
    DiagnosisDetails:
      type: object
      properties:
        medicalCode:
          maxLength: 20
          minLength: 0
          type: string
          description: The code ID that specifies a particular diagnosis.
        levelIndicator:
          type: string
          description: The injury code level e.g. primary or secondary assigned to
            the injury in the context of the claim.
        firstPrimaryCode:
          type: boolean
          description: Indicates whether or not this is the first medical code identified
            with the primary level indicator.
        description:
          maxLength: 500
          minLength: 0
          type: string
          description: A description of the medical code.
        causeGrouping:
          maxLength: 500
          minLength: 0
          type: string
          description: The name of the medical code group in which this medical code
            is contained.
        groupType:
          type: string
          description: Specifies the type of the medical code group.
        diagnosisDetailsId:
          maxLength: 10
          minLength: 0
          type: string
          description: Business Entity OID
          format: string
          example: TE:00012:0000001234
    ValidationMessageModel:
      required:
      - validationMessage
      type: object
      properties:
        validationMessage:
          type: string
    HospitalisationDetailsResponse:
      required:
      - hospitalisationDetailId
      - startDate
      type: object
      properties:
        startDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        endDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        endDateConfirmed:
          type: boolean
          description: The end date confirmation for the hospitalisation period.
        description:
          maxLength: 256
          minLength: 0
          type: string
          description: The description of hospitalisation detail.
        hospitalReason:
          type: string
          description: The hospitalisation reason for the claim period.
        extensionAttributes:
          type: array
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
        hospitalisationDetailId:
          type: string
          description: Business Entity OID
          format: string
          example: TE:00012:0000001234
        facility:
          type: string
          description: The facilitator(hospital) name.
    HospitalisationDetails:
      required:
      - startDate
      type: object
      properties:
        startDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        endDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        endDateConfirmed:
          type: boolean
          description: The end date confirmation for the hospitalisation period.
        description:
          maxLength: 256
          minLength: 0
          type: string
          description: The description of hospitalisation detail.
        hospitalReason:
          type: string
          description: The hospitalisation reason for the claim period.
        extensionAttributes:
          type: array
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
    ApprovalOrders:
      required:
      - approvalOrderId
      - benefitCaseNumber
      - description
      - facilityName
      - overallMaximumAmount
      - providerName
      - referenceNumber
      - status
      - statusEffectiveDate
      - vendorName
      type: object
      properties:
        approvalOrderId:
          maxLength: 50
          minLength: 0
          type: string
          description: Approval Order Id
        benefitCaseNumber:
          maxLength: 50
          minLength: 0
          type: string
          description: Benefit Number
        referenceNumber:
          maxLength: 50
          minLength: 0
          type: string
          description: Reference Number
        description:
          maxLength: 2000
          minLength: 0
          type: string
          description: Description
        overallMaximumAmount:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        status:
          maxLength: 50
          minLength: 0
          type: string
          description: Status
        statusEffectiveDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        providerName:
          maxLength: 50
          minLength: 0
          type: string
          description: Provider Name
        vendorName:
          maxLength: 50
          minLength: 0
          type: string
          description: Vendor Name
        facilityName:
          maxLength: 50
          minLength: 0
          type: string
          description: Faclity Name
    ApprovalOrderDecisions:
      required:
      - amount
      - amountUsed
      - approvalDecisionId
      - decisionReason
      - decisionStatus
      - limitInUnits
      - periodEndDate
      - periodStartDate
      - ratePerUnit
      - remainingAmount
      - remainingUnits
      - serviceCode
      - serviceDescription
      - unitsUsed
      - usageBasis
      type: object
      properties:
        approvalDecisionId:
          maxLength: 50
          minLength: 0
          type: string
          description: Approval Order Decision Id
        serviceCode:
          maxLength: 50
          minLength: 0
          type: string
          description: Service Code
        serviceDescription:
          maxLength: 2000
          minLength: 0
          type: string
          description: Service Description
        usageBasis:
          maxLength: 50
          minLength: 0
          type: string
          description: Usage Basis
        periodStartDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        periodEndDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        decisionStatus:
          maxLength: 50
          minLength: 0
          type: string
          description: Decision Status
        decisionReason:
          maxLength: 100
          minLength: 0
          type: string
          description: Decision Reason
        amount:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        amountUsed:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        remainingAmount:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        limitInUnits:
          type: number
          description: Limit in Units
        ratePerUnit:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        unitsUsed:
          type: integer
          description: Units used
          format: int64
        remainingUnits:
          type: number
          description: Remaining Units
    IncomeSourceResponse:
      required:
      - incomeName
      - incomeType
      type: object
      properties:
        amount:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        startDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        endDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        incomeName:
          maxLength: 256
          minLength: 0
          type: string
          description: Income source name.
        incomeType:
          type: string
          description: Type of the income source.
        frequency:
          type: string
          description: Frequency of the income.
        receivedFrom:
          type: string
          description: Identify from where the other income source was received.
        extensionAttributes:
          type: array
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
        incomeSourceId:
          type: string
          description: Business Entity OID
          format: string
          example: TE:00012:0000001234
    IncomeSource:
      required:
      - incomeName
      - incomeType
      type: object
      properties:
        amount:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        startDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        endDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        incomeName:
          maxLength: 256
          minLength: 0
          type: string
          description: Income source name.
        incomeType:
          type: string
          description: Type of the income source.
        frequency:
          type: string
          description: Frequency of the income.
        receivedFrom:
          type: string
          description: Identify from where the other income source was received.
        extensionAttributes:
          type: array
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
    Document:
      required:
      - documentId
      - name
      - type
      type: object
      properties:
        caseId:
          type: string
        rootCaseId:
          type: string
        documentId:
          type: integer
          description: The document Id
          format: int64
        name:
          maxLength: 200
          minLength: 0
          type: string
          description: The short business description of the document type
        type:
          maxLength: 100
          minLength: 0
          type: string
          description: The form of the document e.g. image, email, document
        fileExtension:
          maxLength: 20
          minLength: 0
          type: string
          description: The file extension of the document. e.g. .doc for MS Word.
        fileName:
          maxLength: 400
          minLength: 0
          type: string
          description: An external reference to the document. This can be a docid
            or a path and filename.
        originalFilename:
          maxLength: 300
          minLength: 0
          type: string
          description: The original attachment filename.
        receivedDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        effectiveFrom:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        effectiveTo:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        description:
          maxLength: 4000
          minLength: 0
          type: string
          description: User solicitied description of this document.
        title:
          maxLength: 2000
          minLength: 0
          type: string
          description: The title of the document.
        isRead:
          type: boolean
        extensionAttributes:
          type: array
          description: An array of the extensionAttribute objects which contain document
            (OCDocumentBase) extension information.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
    Base64EncodedFileData:
      required:
      - base64EncodedFileContents
      - fileExtension
      - fileName
      - fileSizeInBytes
      type: object
      properties:
        fileName:
          type: string
          description: The name of the file, without the extension.
        fileExtension:
          type: string
          description: The extension of the file, without a preceding dot.
        base64EncodedFileContents:
          type: string
          description: The base64 encoded file contents.
        contentType:
          type: string
          description: The MIME type of the file.
        fileSizeInBytes:
          type: integer
          description: The size in bytes of the file.
          format: int64
        description:
          type: string
          description: A description of the file.
        managedReqId:
          type: integer
          description: The Managed Requirement ID to be associated with the file.
          format: int64
    ReadCustomerOccupation:
      type: object
      properties:
        dateJobBegan:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        dateJobEnded:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        daysWorkedPerWeek:
          type: number
          description: The number of days worked per week.
        employer:
          type: string
          description: The name of the employer.
        endPosReason:
          type: string
          description: The reason for job ending.
        hoursWorkedPerWeek:
          type: number
          description: The number of hours worked per week.
        jobDesc:
          type: string
          description: The job description.
        jobTitle:
          type: string
          description: The job title.
        remarks:
          type: string
          description: The occupation remarks.
        selfEmployed:
          type: boolean
          description: Is occupation considered self-employed?
        workScheduleDescription:
          type: string
          description: The work schedule description.
        employmentCategory:
          type: string
          description: The employment category.
        jobStrenuous:
          type: string
          description: The job strenuous.
        endEmploymentReason:
          type: string
          description: The code for occupation ending.
        employmentLocation:
          type: string
          description: The employment location code.
        additionalEmploymentCategory:
          type: string
          description: The alternate employment category.
        employmentStatus:
          type: string
          description: The employment status.
        employmentTitle:
          type: string
          description: The employment title.
        workPatternBasis:
          type: string
          description: The work pattern basis.
        employeeId:
          maxLength: 50
          minLength: 0
          type: string
          description: The id of an employee in respect of its employer.
        extensionAttributes:
          type: array
          description: The extension attributes.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
        occupationId:
          type: integer
          description: The occupation ID.
          format: int64
        codeId:
          type: string
          description: The occupation Code ID.
        codeName:
          type: string
          description: The name associated with the specific occupation Code ID.
        overrideDaysWorkedPerWeek:
          type: boolean
          description: Is override days worked per week true or false?
    WeekBasedWorkPattern:
      required:
      - workPatternDays
      - workPatternType
      type: object
      properties:
        workPatternType:
          type: string
          description: 'The Work Pattern Type, which can be any of the following:
            Fixed, 2 weeks Rotating, 3 weeks Rotating, 4 weeks Rotating. The Unknown,
            Variable and Weekly Work Pattern values will not be supported'
        workWeekStarts:
          type: string
          description: The day of the week on which the work week starts.
        patternStartDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        patternStatus:
          type: string
          description: Indicates whether the pattern is estimated by the Employee
            or confirmed by the Employer.
        workPatternDays:
          type: array
          description: List of days which make up the pattern. There can be 7, 14,
            21 or 28 of these.
          items:
            $ref: '#/components/schemas/WorkPatternDay'
    WorkPatternDay:
      required:
      - dayOfWeek
      - hours
      - minutes
      - weekNumber
      type: object
      properties:
        dayOfWeek:
          type: string
          description: The day of the week.
        weekNumber:
          type: integer
          description: The number of the week in the pattern within which this day
            occurs (1, 2, 3 or 4)
          format: int32
        hours:
          type: integer
          description: The number of whole working hours on this day in the work pattern.
          format: int32
        minutes:
          type: integer
          description: The number of minutes on this day in the work pattern.
          format: int32
      description: List of days which make up the pattern. There can be 7, 14, 21
        or 28 of these.
    ClaimSummary:
      required:
      - claimId
      - claimType
      type: object
      properties:
        claimId:
          maxLength: 256
          minLength: 0
          type: string
          description: The claim number of the claim
        claimType:
          maxLength: 50
          minLength: 0
          type: string
          description: The name by which the claim type is referred.
        creationDate:
          type: string
          description: ISO 8601 date time format
          format: date-time
          example: 1999-12-31T23:59:59Z
        effectiveDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        customerName:
          maxLength: 256
          minLength: 0
          type: string
          description: The customer name of the claim
        policyReferences:
          maxLength: 50
          minLength: 0
          type: string
          description: The reference(s) to the policy from within the relevant admin
            system.
        description:
          maxLength: 2000
          minLength: 0
          type: string
          description: Description for this case as entered by the user.
        status:
          maxLength: 10
          minLength: 0
          type: string
          description: This is the stage in the process that the case is currently
            at.
        claimHandler:
          maxLength: 50
          minLength: 0
          type: string
          description: The Person that is handling the claim.
        claimHandlerEmailAddress:
          maxLength: 40
          minLength: 0
          type: string
          description: The email address of the claim handler.
        claimHandlerPhoneNo:
          maxLength: 20
          minLength: 0
          type: string
          description: The phone number of the claim handler.
        notificationDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        caseComplexity:
          type: string
          description: Case complexity on Claim
        stageName:
          type: string
          description: The current stage of claim case.
        classExtensionInformation:
          type: array
          description: An array of the extensionAttribute objects which contain extension
            information.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
        notificationCaseId:
          maxLength: 256
          minLength: 0
          type: string
          description: The notification case number of the claim case if applicable.
    NotificationCaseSummaryForClaims:
      type: object
      properties:
        notificationCaseId:
          type: string
          description: The case number for the notification case.
        createdDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        notificationReason:
          maxLength: 100
          minLength: 0
          type: string
          description: Notification reason selected during notification case intake.
        notificationDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        status:
          type: string
          description: The notification case status his is the current phase of the
            notification case managing process.
        accidentDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        multipleConflictingAccidentDates:
          type: boolean
          description: Multiple conflicting accident dates found.If true,accidentDate
            attribute will be empty.
        expectedDeliveryDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        actualDeliveryDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        dateFirstMissingWork:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        expectedRTWDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        multipleConflictingExpectedRTWDates:
          type: boolean
          description: Multiple conflicting expected return to work dates found.If
            true,expectedRTW attribute will be empty.
        claims:
          type: array
          description: The child cases under this notification case.
          items:
            $ref: '#/components/schemas/NotificationClaimSummary'
    OutstandingSupportingEvidence:
      type: object
      properties:
        rootCaseId:
          maxLength: 254
          minLength: 0
          type: string
          description: The root case id is the id of the last case retrieved following
            all parent relationships starting from the case holding the supporting
            evidence elements. Given a case Id, all supporting evidence elements share
            the same root case.
        uploadCaseNumber:
          maxLength: 254
          minLength: 0
          type: string
          description: If the supporting evidence element is requested by multiple
            cases, the upload Case Number is the id of the lowest case in the hierarchy
            which is the common parent of all such cases; If the supporting evidence
            element is requested by one case only, the upload Case Number is the id
            of that case. Given a caseId, different supporting evidence elements can
            a have different upload Case Number depending on which case(s) requests
            which supporting evidence.
        name:
          maxLength: 350
          minLength: 0
          type: string
          description: The name of the document type representing the document that
            can satisfy the supporting evidence.
        docReceived:
          type: boolean
          description: Indicates whether a document has been received for the outstanding
            supporting evidence.<BR>For instance, a document could be uploaded and
            linked to an outstanding requirement, however the outstanding requirement
            will remain OPEN until a back office user validates that the uploaded
            document is actually what was required.<BR>This flag will always be FALSE
            for a evidence result which is either pending or received but not satisfied;
            it will be TRUE for a received evidence result which is received and satisfied.<BR>If
            the element represents a combination of outstanding requirements and evidence
            results, the flag will be FALSE if at least one of these elements returns
            FALSE.
        source:
          type: string
          description: The name of the party who is expected to provide the document.
            <BR>If the record returned represents an Outstanding Requirement, the
            source is the name of the party indicated as the source for that requirement,
            including the title if available. <BR>If the record returned represents
            an Evidence, the source is the Employee name, including the title if available.
            <BR>If the record returned represents both an Outstanding Requirement
            and an Evidence (because the same document would satisfy both) and the
            source names differ, then the source name from the Outstanding Requirement
            is returned. <BR>If the record returned represents two Outstanding Requirements
            (because the same document would satisfy both) and the source names differ,
            then the source name is randomly picked from one of them.
    EmployerQuestion:
      required:
      - category
      - employerName
      - questionId
      - questionText
      - questionType
      type: object
      properties:
        questionId:
          type: string
          description: The id of the employer question. Must be unique for all employer
            questions of one category.
        questionText:
          type: string
          description: The configured employer question text for the question id.
        questionType:
          type: string
          description: "The type of the employer question. Enum Field Data Types (domainId\
            \ 107) instance name value.\r\nCan be one of the following: String, Integer,\
            \ Date, Float, Boolean and Enum."
        questionEnumDomainName:
          type: string
          description: 'Optional: Domain name of the enum, if the questionType is
            Enum.'
        mandatory:
          type: boolean
          description: 'Optional: Specifies if the employer question answer is mandatory.'
        employerName:
          type: string
          description: The name of the employer on the case for which employer questions
            are returned, either person full name or organisation name.
        category:
          type: string
          description: The category of the employer question requested. Enum InstructionsQuestionsCategory
            (domainId 234) instance name value
      description: The employer's question.
    EmployerQuestions:
      required:
      - elements
      type: object
      properties:
        elements:
          type: array
          description: An array of employer questions stored in the EmployerQuestion
            structure belonging to the given category of ER questions.
          items:
            $ref: '#/components/schemas/EmployerQuestion'
    EmployerQuestionAnswer:
      required:
      - answer
      - question
      type: object
      properties:
        question:
          $ref: '#/components/schemas/EmployerQuestion'
        answer:
          $ref: '#/components/schemas/EFormAttribute'
      description: An array of questions and answers to employer questions belonging
        to the given category of ER questions.
    EmployerQuestionAnswers:
      required:
      - elements
      type: object
      properties:
        elements:
          type: array
          description: An array of questions and answers to employer questions belonging
            to the given category of ER questions.
          items:
            $ref: '#/components/schemas/EmployerQuestionAnswer'
    EmployeeAnswers:
      type: object
      properties:
        category:
          type: string
          description: The category of the employer questions answered. Enum InstructionsQuestionsCategory
            (domainId 234) instance name value
        answers:
          type: array
          description: Get Answers if any exist.
          items:
            $ref: '#/components/schemas/EFormAttribute'
    ReadOccupation:
      type: object
      properties:
        dateJobBegan:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        dateJobEnded:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        daysWorkedPerWeek:
          type: number
          description: The number of days worked per week.
        employer:
          type: string
          description: The name of the employer.
        endPosReason:
          type: string
          description: The reason for job ending.
        hoursWorkedPerWeek:
          type: number
          description: The number of hours worked per week.
        jobDesc:
          type: string
          description: The job description.
        jobTitle:
          type: string
          description: The job title.
        remarks:
          type: string
          description: The occupation remarks.
        selfEmployed:
          type: boolean
          description: Is occupation considered self-employed?
        workScheduleDescription:
          type: string
          description: The work schedule description.
        employmentCategory:
          type: string
          description: The employment category.
        jobStrenuous:
          type: string
          description: The job strenuous.
        endEmploymentReason:
          type: string
          description: The code for occupation ending.
        employmentLocation:
          type: string
          description: The employment location code.
        additionalEmploymentCategory:
          type: string
          description: The alternate employment category.
        employmentStatus:
          type: string
          description: The employment status.
        employmentTitle:
          type: string
          description: The employment title.
        workPatternBasis:
          type: string
          description: The work pattern basis.
        employeeId:
          maxLength: 50
          minLength: 0
          type: string
          description: The id of an employee in respect of its employer.
        extensionAttributes:
          type: array
          description: The extension attributes.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
        primary:
          type: boolean
          description: Is occupation the primary one?
        occupationId:
          type: integer
          description: The occupation ID.
          format: int64
        codeId:
          type: string
          description: The occupation Code ID.
        codeName:
          type: string
          description: The name associated with the specific occupation Code ID.
        overrideDaysWorkedPerWeek:
          type: boolean
          description: Is override days worked per week true or false?
    EFormSummary:
      required:
      - eformId
      - eformType
      type: object
      properties:
        eformId:
          type: integer
          description: Unique automatically generated Id of an EForm document.
          format: int64
        eformTypeId:
          type: string
          description: Business Entity OID
          format: string
          example: TE:00012:0000001234
        effectiveDateFrom:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        effectiveDateTo:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        eformType:
          maxLength: 200
          minLength: 0
          type: string
          description: The short business description of the document type.
    AccountTransferInfo:
      type: object
      properties:
        bankAccountNumber:
          type: string
          description: The bank account number of an employee
        bankAccountType:
          type: string
          description: The bank account type of an employee
        bankInstituteName:
          type: string
          description: The bank institute name of an employee
        bankBranchSortCode:
          type: string
          description: The employee bank branch sort code
        bankCode:
          type: string
          description: The bank code of an employee
      description: get bank account transfer info of an employee.
    ChequePaymentInfo:
      type: object
      properties:
        chequeNumber:
          type: string
          description: The cheque number of an employee
      description: get cheque payment info of an employee.
    Payment:
      type: object
      properties:
        paymentId:
          type: string
          description: Business Entity OID
          format: string
          example: TE:00012:0000001234
        benefitCaseNumber:
          type: string
          description: The Benefit Case Number.
        dateInterfaceRecordCreated:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        rootCaseNumber:
          type: string
        benefitCaseTypeName:
          type: string
        benefitRightTypeName:
          type: string
        paymentDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        effectiveDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        periodStartDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        periodEndDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        paymentType:
          maxLength: 250
          minLength: 0
          type: string
          description: The payment type e.g. recurring, adhoc etc
        paymentMethod:
          maxLength: 256
          minLength: 0
          type: string
          description: The method used to transfer the payment e.g. EFT, Hand Typed
            Check etc.
        paymentAmount:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        payeeName:
          maxLength: 256
          minLength: 0
          type: string
          description: The party to whom the payment was made
        nominatedPayeeName:
          maxLength: 256
          minLength: 0
          type: string
          description: The party the payee nominated to receive payment
        paymentAddress:
          maxLength: 256
          minLength: 0
          type: string
          description: The address the payment was sent to
        accountTransferInfo:
          $ref: '#/components/schemas/AccountTransferInfo'
        chequePaymentInfo:
          $ref: '#/components/schemas/ChequePaymentInfo'
        classExtensionInformation:
          type: array
          description: An array of the extensionAttribute objects which contain payments
            (OLPaymentEventInterface) extension information.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
    ContactDetails:
      type: object
      properties:
        phoneNumbers:
          type: array
          description: An array of objects which contain customer phone number details.
          items:
            $ref: '#/components/schemas/PhoneNumber'
        emailAddresses:
          maxItems: 100
          minItems: 0
          type: array
          description: Email Address of the customer.
          items:
            $ref: '#/components/schemas/EmailAddress'
    EmailAddress:
      required:
      - id
      type: object
      properties:
        id:
          maximum: 10
          minimum: 0
          type: integer
          description: 'The id of the contact method (e.g. phone / mobile / emailAddress) '
          format: int64
        preferred:
          type: boolean
        emailAddress:
          maxLength: 120
          minLength: 0
          type: string
          description: Customers email address.
        classExtensionInformation:
          type: array
          description: An array of the extensionAttribute objects which contain email
            Address extension information.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
      description: Return list of email addresses
    PhoneNumber:
      required:
      - id
      - phoneNumberType
      type: object
      properties:
        id:
          maximum: 10
          minimum: 0
          type: integer
          description: 'The id of the contact method (e.g. phone / mobile / emailAddress) '
          format: int64
        preferred:
          type: boolean
        phoneNumberType:
          maxLength: 10
          minLength: 0
          type: string
          description: The type of phone number (e.g. landline / mobile)
        intCode:
          maxLength: 10
          minLength: 0
          type: string
          description: international code value
        areaCode:
          maxLength: 20
          minLength: 0
          type: string
          description: area code value
        telephoneNo:
          maxLength: 10
          minLength: 0
          type: string
          description: telephone No. value
        classExtensionInformation:
          type: array
          description: An array of the extensionAttribute objects which contain phone
            number (OCPhone) extension information.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
      description: Return list of phone numbers
    Address:
      required:
      - country
      type: object
      properties:
        premiseNo:
          maxLength: 5
          minLength: 0
          type: string
          description: This is the premise number
        addressLine1:
          maxLength: 40
          minLength: 0
          type: string
          description: Address Line 1
        addressLine2:
          maxLength: 40
          minLength: 0
          type: string
          description: Address Line 2
        addressLine3:
          maxLength: 40
          minLength: 0
          type: string
          description: Address Line 3
        addressLine4:
          maxLength: 40
          minLength: 0
          type: string
          description: Address Line 4
        addressLine5:
          maxLength: 40
          minLength: 0
          type: string
          description: Address Line 5
        addressLine6:
          maxLength: 40
          minLength: 0
          type: string
          description: Address Line 6
        addressLine7:
          maxLength: 40
          minLength: 0
          type: string
          description: Address Line 7
        postCode:
          maxLength: 40
          minLength: 0
          type: string
          description: International Postcode
        country:
          maxLength: 100
          minLength: 0
          type: string
          description: Country
        classExtensionInformation:
          type: array
          description: An array of the extensionAttribute objects which contain claim
            extension information.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
    Customer:
      required:
      - dateOfBirth
      - firstName
      - lastName
      type: object
      properties:
        firstName:
          maxLength: 50
          minLength: 0
          type: string
          description: Person's first name.
        lastName:
          maxLength: 50
          minLength: 0
          type: string
          description: Person's last name.
        secondName:
          maxLength: 50
          minLength: 0
          type: string
          description: Person's second name.
        initials:
          maxLength: 10
          minLength: 0
          type: string
          description: Person's middle initials.
        needsInterpretor:
          type: boolean
          description: Indicates if the customer needs an interpreter.
        placeOfBirth:
          maxLength: 50
          minLength: 0
          type: string
          description: Place of birth.
        gender:
          maxLength: 100
          minLength: 0
          type: string
          description: The person's gender.
        dateOfBirth:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        maritalStatus:
          maxLength: 100
          minLength: 0
          type: string
          description: Person's marital status - single / married / etc.
        nationality:
          maxLength: 100
          minLength: 0
          type: string
          description: Person's nationality.
        title:
          maxLength: 100
          minLength: 0
          type: string
          description: Person's chosen title e.g. Mr / Mrs etc.
        idNumber:
          maxLength: 10
          minLength: 0
          type: string
          description: ID number of the claimant.
        identificationNumberType:
          maxLength: 100
          minLength: 0
          type: string
          description: The type of identification number the party will have.
        securedClient:
          type: boolean
          description: Secured client flag.
        staff:
          type: boolean
          description: Staff flag.
        partyType:
          type: string
        classExtensionInformation:
          type: array
          description: An array of the extensionAttribute objects which contain customer
            (OCPerson) extension information.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
        customerAddress:
          $ref: '#/components/schemas/CustomerAddress'
        initals:
          type: string
          writeOnly: true
    CustomerAddress:
      required:
      - address
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        australianAddress:
          $ref: '#/components/schemas/ExtendedAddress'
      description: The reason why the payment preference has this status
    ExtendedAddress:
      type: object
      properties:
        buildingName1:
          maxLength: 30
          minLength: 0
          type: string
          description: The name of the building.
        buildingName2:
          maxLength: 30
          minLength: 0
          type: string
          description: The name of the building continued.
        floorLevelType:
          maxLength: 10
          minLength: 0
          type: string
          description: Type of floor level description.
        floorLevelNumber:
          maxLength: 2
          minLength: 0
          type: string
          description: The number of floor level.
        premiseNoSuffix:
          maxLength: 1
          minLength: 0
          type: string
          description: The suffix to apply to the number of the premise.
        premiseNoTo:
          maximum: 5
          minimum: 0
          type: number
          description: The high number in a range for the premise.
        premiseNoToSuffix:
          maxLength: 1
          minLength: 0
          type: string
          description: The suffix to apply to the number to of the premise.
        streetSuffix:
          maxLength: 10
          minLength: 0
          type: string
          description: The suffix for the street.
        postalType:
          maxLength: 10
          minLength: 0
          type: string
          description: The postal type - PO Box, Roadside Mail Box etc.
        postalNumber:
          maxLength: 11
          minLength: 0
          type: string
          description: The postal number.
        lotNumber:
          maxLength: 6
          minLength: 0
          type: string
          description: The lot number.
        dpid:
          maximum: 8
          minimum: 0
          type: number
          description: DPID - 8 digit Australian post address identifier.
        postalNumberPrefix:
          maxLength: 3
          minLength: 0
          type: string
          description: This refers to the non-numeric portion preceding the Postal
            Number.
        postalNumberSuffix:
          maxLength: 3
          minLength: 0
          type: string
          description: This refers to the non-numeric portion following the Postal
            Number.
        classExtensionInformation:
          type: array
          description: An array of the extensionAttribute objects which contain claim
            extension information.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
    DisabilityClaim:
      type: object
      properties:
        claimIncurredDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        eventType:
          maxLength: 10
          minLength: 0
          type: string
          description: The type of event which occurred which led to the disability
            claim e.g. Accident or Sickness.
        reasonForClaimEffectiveDateChange:
          maxLength: 10
          minLength: 0
          type: string
          description: Allows a reason to be recorded for a change to the claim's
            effective date.
        claimAdditionalInfo:
          maxLength: 4000
          minLength: 0
          type: string
          description: Additional incident details relevant to the claim.
        disabilityDateFromCustomer:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        accidentDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        notificationDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        workRelated:
          type: boolean
          description: Indicates whether the event was work related or not.
        numberOfDependents:
          maximum: 10
          minimum: 0
          type: integer
          description: The number of dependents for the Customer relevant to this
            Claim
          format: int64
        claimType:
          maxLength: 10
          minLength: 0
          type: string
          description: This field can be used to capture the type of claim. This is
            a descriptive attribute which can be changed over the life of the claim
        source:
          maxLength: 10
          minLength: 0
          type: string
          description: Describes how the claim was initiated, i.e. on-line, phone
            call, paper application form, customer portal.
        dateSymptomsFirstAppeared:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        expectedReturnToWorkDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        firstDayMissedWork:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        dismembermentOrLoss:
          maxLength: 10
          minLength: 0
          type: string
          description: Dismemberment/Loss injuries sustained by the customer.
        hoursWorked:
          maximum: 13
          minimum: 0
          type: number
          description: Number of hours worked
          format: float
        insuredSpouseWorking:
          type: boolean
          description: Indicates if the spouse of the insured is currently working.
        salaryCountNumDays:
          maximum: 5
          minimum: 0
          type: integer
          description: Salary Continuance Number of Days - Number of days beyond the
            disability date insured received full pay
          format: int32
        workHistory:
          maxLength: 256
          minLength: 0
          type: string
          description: This lists the work history of the insured including occupational,
            job duty as well as when the insured was employed at these jobs.  Used
            for any/all and LCDD decisions as well as assisting with job  placement
            strategy development of the vocational consultant.
        classExtensionInformation:
          type: array
          description: An array of the extensionAttribute objects which contain claim
            extension information.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
        description:
          maxLength: 2000
          minLength: 0
          type: string
          description: Description for this case as entered by the user.
        employeeDateLastWorked:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
    ReadDisabilityResult:
      type: object
      properties:
        claimSummary:
          $ref: '#/components/schemas/ClaimSummary'
        disabilityClaim:
          $ref: '#/components/schemas/DisabilityClaim'
    PaymentLine:
      type: object
      properties:
        lineType:
          maxLength: 100
          minLength: 0
          type: string
          description: The name of the payment adjustment e.g. Gross Benefit, Income
            Tax, Seat Belt etc.
        integrationType:
          maxLength: 100
          minLength: 0
          type: string
          description: For adjustment PaymentLine this records the IntegrationType
            which may have been recorded for the adjustment
        reference:
          maxLength: 250
          minLength: 0
          type: string
          description: For adjustment PaymentLine this records the Reference which
            may have been recorded for the adjustment
        amount:
          maxLength: 28
          minLength: 0
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        startDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        endDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        paymentLinesDetail:
          type: array
          description: The Payment Lines Details belongs to each payment.
          items:
            $ref: '#/components/schemas/PaymentLineDetails'
    PaymentLineDetails:
      type: object
      properties:
        adjustmentId:
          type: string
          description: Business Entity OID
          format: string
          example: TE:00012:0000001234
        amount:
          maxLength: 28
          minLength: 0
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        startDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        endDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        calcDetails:
          type: array
          description: 'The Calculation Details that explain how each adjustment is
            calculated. '
          items:
            type: string
            description: 'The Calculation Details that explain how each adjustment
              is calculated. '
        payee:
          maxLength: 100
          minLength: 0
          type: string
          description: The name of the Payee which the payment adjustment belongs.
        adjustmentTypeId:
          type: string
          description: Business Entity OID
          format: string
          example: TE:00012:0000001234
        fixedAmountIncreaseInstructionClassExtension:
          type: array
          description: An array of the extensionAttribute objects which contain OLFixedAmountIncreaseInstruction
            extension information.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
        adjustmentCalcDetailClassExtension:
          type: array
          description: An array of the extensionAttribute objects which contain OLAdjustmentCalcDetail
            extension information.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
      description: The Payment Lines Details belongs to each payment.
    Policy:
      required:
      - referenceNo
      type: object
      properties:
        referenceNo:
          maxLength: 50
          minLength: 0
          type: string
          description: Unique alphanumeric policy reference from the relevant policy
            admin system.
      description: Object with information about policies that will be added to the
        claim.
    StartClaim:
      type: object
      properties:
        description:
          maxLength: 2000
          minLength: 0
          type: string
          description: Description for this case as entered by the user.
        claimIncurredDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        policies:
          type: array
          description: An array of the policy objects with information about policies
            that will be added to the claim.
          items:
            $ref: '#/components/schemas/Policy'
        notificationCaseId:
          maxLength: 256
          minLength: 0
          type: string
          description: The notification case number of the claim case if applicable.
        notificationReason:
          maxLength: 100
          minLength: 0
          type: string
          description: Notification reason selected during notification case intake.
    ClaimOccupation:
      type: object
      properties:
        dateJobBegan:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        dateJobEnded:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        daysWorkedPerWeek:
          type: number
          description: The number of days worked per week.
        employer:
          type: string
          description: The name of the employer.
        endPosReason:
          type: string
          description: The reason for job ending.
        hoursWorkedPerWeek:
          type: number
          description: The number of hours worked per week.
        jobDesc:
          type: string
          description: The job description.
        jobTitle:
          type: string
          description: The job title.
        remarks:
          type: string
          description: The occupation remarks.
        selfEmployed:
          type: boolean
          description: Is occupation considered self-employed?
        workScheduleDescription:
          type: string
          description: The work schedule description.
        employmentCategory:
          type: string
          description: The employment category.
        jobStrenuous:
          type: string
          description: The job strenuous.
        endEmploymentReason:
          type: string
          description: The code for occupation ending.
        employmentLocation:
          type: string
          description: The employment location code.
        additionalEmploymentCategory:
          type: string
          description: The alternate employment category.
        employmentStatus:
          type: string
          description: The employment status.
        employmentTitle:
          type: string
          description: The employment title.
        workPatternBasis:
          type: string
          description: The work pattern basis.
        employeeId:
          maxLength: 50
          minLength: 0
          type: string
          description: The id of an employee in respect of its employer.
        extensionAttributes:
          type: array
          description: The extension attributes.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
        primary:
          type: boolean
          description: Is occupation the primary one?
    ManagedRequirementSummary:
      required:
      - category
      - documentReceived
      - managedReqId
      - type
      type: object
      properties:
        managedReqId:
          type: integer
          description: the identifier for this managed requirement.
          format: int64
        category:
          maxLength: 50
          minLength: 0
          type: string
          description: The category name of the managed requirement.
        type:
          maxLength: 50
          minLength: 0
          type: string
          description: The name of the type of the managed requirement.
        dateRequested:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        notProceedingWithDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        dateLastFollowedUp:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        followUpDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        description:
          maxLength: 250
          minLength: 0
          type: string
          description: A text description of the outstanding requirement or information.
        status:
          maxLength: 100
          minLength: 0
          type: string
          description: 'The current status of this Managed Requirement. '
        dateCompleted:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        documentReceived:
          type: boolean
          description: Indicates that a document has been received for this managed
            requirement. Returns true if the managed requirement is linked to a document
            that this user can access,otherwise returns false.
        classExtensionInformation:
          type: array
          description: An array of the extensionAttribute objects which contain managed
            requirement (OCManagedRequirement) extension information.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
    EnumSubsetInfo:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        editable:
          type: boolean
    Money:
      type: object
      properties:
        amount:
          type: number
        currency:
          $ref: '#/components/schemas/TaEnumCurrencyType'
        currencyCode:
          type: string
        negative:
          type: boolean
        positive:
          type: boolean
        zero:
          type: boolean
        greaterEqualZero:
          type: boolean
      description: The estimated amount of the next payment
    NextPayment:
      type: object
      properties:
        nextPaymentDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        nextPeriodStartDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        nextPeriodEndDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        nextPaymentAmount:
          $ref: '#/components/schemas/Money'
        claimId:
          type: string
          description: The claim the payment relates to
        nextPaymentLines:
          type: array
          description: The estimated payment lines comprising the next estimated payment
            amount
          items:
            $ref: '#/components/schemas/NextPaymentLine'
    NextPaymentLine:
      type: object
      properties:
        lineType:
          maxLength: 100
          minLength: 0
          type: string
          description: The name of the payment adjustment e.g. Gross Benefit, Income
            Tax, Seat Belt etc.
        amount:
          maxLength: 28
          minLength: 0
          type: string
          description: The amount of the adjustment
        sequenceNumber:
          type: integer
          description: The adjustment sequence number. Adjustments are applied in
            ascending order
          format: int64
        classExtensionInformation:
          type: array
          description: An array of the extensionAttribute objects which contain payments
            (OLPaymentLine) extension information.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
      description: The estimated payment lines comprising the next estimated payment
        amount
    TaEnum:
      type: object
      properties:
        name:
          type: string
        domainDescription:
          type: string
        domainName:
          type: string
        domainId:
          type: integer
          format: int32
        dorder:
          type: integer
          format: int32
        fullId:
          type: integer
          format: int64
        startDate:
          type: string
          description: ISO 8601 date time format
          format: date-time
          example: 1999-12-31T23:59:59Z
        endDate:
          type: string
          description: ISO 8601 date time format
          format: date-time
          example: 1999-12-31T23:59:59Z
        retired:
          type: boolean
        editable:
          type: boolean
        alphaSort:
          type: boolean
        defaultFirst:
          type: boolean
        subsets:
          type: array
          items:
            type: string
        active:
          type: boolean
        subsetInfo:
          type: array
          items:
            $ref: '#/components/schemas/EnumSubsetInfo'
        nameAttribute:
          type: string
        typedInstances:
          type: array
          items:
            $ref: '#/components/schemas/TaEnumTaEnumType'
        id:
          type: integer
          format: int32
    TaEnumCurrencyType:
      type: object
      properties:
        name:
          type: string
        domainDescription:
          type: string
        domainName:
          type: string
        domainId:
          type: integer
          format: int32
        dorder:
          type: integer
          format: int32
        fullId:
          type: integer
          format: int64
        startDate:
          type: string
          description: ISO 8601 date time format
          format: date-time
          example: 1999-12-31T23:59:59Z
        endDate:
          type: string
          description: ISO 8601 date time format
          format: date-time
          example: 1999-12-31T23:59:59Z
        retired:
          type: boolean
        editable:
          type: boolean
        alphaSort:
          type: boolean
        defaultFirst:
          type: boolean
        instances:
          type: array
          items:
            $ref: '#/components/schemas/TaEnum'
        subsets:
          type: array
          items:
            type: string
        active:
          type: boolean
        subsetInfo:
          type: array
          items:
            $ref: '#/components/schemas/EnumSubsetInfo'
        nameAttribute:
          type: string
        typedInstances:
          type: array
          items:
            $ref: '#/components/schemas/TaEnumCurrencyType'
        id:
          type: integer
          format: int32
    TaEnumTaEnumType:
      type: object
      properties:
        name:
          type: string
        domainDescription:
          type: string
        domainName:
          type: string
        domainId:
          type: integer
          format: int32
        dorder:
          type: integer
          format: int32
        fullId:
          type: integer
          format: int64
        startDate:
          type: string
          description: ISO 8601 date time format
          format: date-time
          example: 1999-12-31T23:59:59Z
        endDate:
          type: string
          description: ISO 8601 date time format
          format: date-time
          example: 1999-12-31T23:59:59Z
        retired:
          type: boolean
        editable:
          type: boolean
        alphaSort:
          type: boolean
        defaultFirst:
          type: boolean
        subsets:
          type: array
          items:
            type: string
        active:
          type: boolean
        subsetInfo:
          type: array
          items:
            $ref: '#/components/schemas/EnumSubsetInfo'
        nameAttribute:
          type: string
        id:
          type: integer
          format: int32
    WebMessage:
      required:
      - narrative
      - subject
      type: object
      properties:
        subject:
          maxLength: 200
          minLength: 0
          type: string
          description: Subject of the message
        narrative:
          maxLength: 4000
          minLength: 0
          type: string
          description: The web message text
        caseId:
          maxLength: 254
          minLength: 0
          type: string
          description: The case the web message is associated to (if any)
        classExtensionInformation:
          type: array
          description: An array of the extensionAttribute objects which contain web
            message information.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
        messageId:
          type: integer
          description: Message Id
          format: int64
        contactTime:
          type: string
          description: ISO 8601 date time format
          format: date-time
          example: 1999-12-31T23:59:59Z
        msgOriginatesFromPortal:
          type: boolean
          description: A flag indicating whether the message originates from the customer
            on the portal or not (in which case the message originating from the insurer)
        read:
          type: boolean
          description: A flag indicating whether the message has been read or not.
            All msgs which orginate from Portal (i.e. messages from the customer)
            will be automatically marked as read when created. All messages which
            do not originate from the portal (from the insurer to the customer) will
            be marked as read once the customer has read the message
        isRead:
          type: boolean
          writeOnly: true
      description: The list of web messages belonging to the customer
    WebMessageSummary:
      type: object
      properties:
        unReadMessages:
          type: integer
          description: The number of un-read web messages
          format: int32
        webMessages:
          type: array
          description: The list of web messages belonging to the customer
          items:
            $ref: '#/components/schemas/WebMessage'
    NewWebMessage:
      required:
      - narrative
      - subject
      type: object
      properties:
        subject:
          maxLength: 200
          minLength: 0
          type: string
          description: Subject of the message
        narrative:
          maxLength: 4000
          minLength: 0
          type: string
          description: The web message text
        caseId:
          maxLength: 254
          minLength: 0
          type: string
          description: The case the web message is associated to (if any)
        classExtensionInformation:
          type: array
          description: An array of the extensionAttribute objects which contain web
            message information.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
    WebMessageId:
      type: object
      properties:
        messageId:
          type: integer
          description: Message Id
          format: int64
    CaseParticipantsSummary:
      type: object
      properties:
        participantId:
          type: integer
          description: Id of the participant
          format: int64
        rolename:
          maxLength: 10
          minLength: 0
          type: string
          description: The role name assigned to the participant on the case
        partyName:
          maxLength: 100
          minLength: 0
          type: string
          description: The name of the party with the participant role on the case
        startDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        endDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        referenceNo:
          maxLength: 40
          minLength: 0
          type: string
          description: The reference number of the party with the participant role
            on the case
        sourceSystem:
          maxLength: 100
          minLength: 0
          type: string
          description: The source system of the party with the participant role on
            the case
      description: Participant Summary Details.
    Participant:
      required:
      - participantSummary
      type: object
      properties:
        participantSummary:
          $ref: '#/components/schemas/CaseParticipantsSummary'
        personDetails:
          $ref: '#/components/schemas/PersonDetails'
        correspondenceAddress:
          $ref: '#/components/schemas/Address'
        extendedAddress:
          $ref: '#/components/schemas/ExtendedAddress'
    PersonDetails:
      type: object
      properties:
        gender:
          maxLength: 100
          minLength: 0
          type: string
          description: The person's gender.
        dateOfBirth:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        maritalStatus:
          maxLength: 100
          minLength: 0
          type: string
          description: Person's marital status - single / married / etc.
        nationality:
          maxLength: 100
          minLength: 0
          type: string
          description: Person's nationality.
        needsInterpretor:
          type: boolean
          description: Indicates if the customer needs an interpreter.
        classExtensionInformation:
          type: array
          description: An array of the extensionAttribute objects which contain customer
            (OCPerson) extension information.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
      description: Person Details.
    ParticipantContactDetails:
      type: object
      properties:
        phoneNumbers:
          type: array
          description: Return list of phone numbers
          items:
            $ref: '#/components/schemas/PhoneNumber'
        emailAddresses:
          type: array
          description: Return list of email addresses
          items:
            $ref: '#/components/schemas/EmailAddress'
        preferredContactMethod:
          type: integer
          description: Return the preferred contact method i.e. either the id of the
            preferred phone number or id of the preferred email address
          format: int64
    BenefitSummary:
      type: object
      properties:
        benefitId:
          type: string
          description: The case number of the benefit.
        benefitCaseType:
          type: string
          description: The name by which the benefit type is referred.
        creationDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        benefitIncurredDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        customerName:
          type: string
          description: The full name of the customer.
        policyReferences:
          type: string
          description: The reference(s) to the policy from within the relevant admin
            system.
        description:
          type: string
          description: Description for this case as entered by the user.
        status:
          type: string
          description: This is the stage in the process that the case is currently
            at.
        benefitHandler:
          type: string
          description: The person that is handling the benefit.
        benefitHandlerPhoneNo:
          type: string
          description: The phone number of the benefit handler.
        benefitHandlerEmailAddress:
          type: string
          description: The email address of the benefit handler.
        benefitRightCategory:
          type: string
          description: Information about the category of the benefit right.
        stageName:
          type: string
          description: The current stage of benefit claim case.
        extensionAttributes:
          type: array
          description: Extra attributes from extension if any.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
      description: The summary of the disability benefit.
    DisabilityBenefit:
      type: object
      properties:
        benefitIncurredDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        brokerAuthorisationFlag:
          type: boolean
          description: Flag that indicates if the broker is to be included in the
            correspondence.
        initialNotificationDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        notificationReceivedDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        overrideClaimIncurredDate:
          type: boolean
          description: Indicator which specifies that the benefit level incurred date
            should be used rather than the claim level incurred date.
        startDateOfBenefitForClaim:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        sourceOfRequest:
          type: string
          description: The type of source that is requesting the benefit, such as
            claimant, guardian, or medical officer.
        earliestDateForClaimPayment:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        employeeContributionPercentage:
          type: number
          description: Percentage representing the Employee Contribution Percentage.
        isReimbursement:
          type: boolean
          description: Indicates if the benefit is paid as a reimbursement or not.
        lateEnrollmentPeriod:
          type: integer
          description: Period after enrolment date when customer has to wait for coverage
            to become eligible.
          format: int64
        latestDateForClaimPayment:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        minimumQualifyPeriod:
          type: integer
          description: Period of time policy has to be in force before the minimum
            benefit provision can be applied.
          format: int64
        employerContributionPercentage:
          type: number
          description: Indicates the percent of the payment that is taxable. Typically
            used as the Employer contribution.
        isUnderwritten:
          type: boolean
          description: Indicates whether or not the member has been underwritten in
            order to have additional cover beyond what the group membership offers.
        policyWaitingPeriod:
          type: integer
          description: Period of time that the policy must be in force before the
            insured qualifies for coverage.
          format: int64
        benefitType:
          type: string
          description: Type of a benefit right such as Disability Income - STD, Disability
            Income LTD, Accelerated Death Benefit or Accidental Death Benefit.
        basisOfMinimumQualifyPeriod:
          type: string
          description: Basis of the period of time policy has to be in force before
            the minimum benefit provision can be applied (i.e. day, week month or
            year).
        basisOfLateEnrollmentPeriod:
          type: string
          description: Basis of the period after enrolment date when customer has
            to wait for coverage to become eligible (i.e. day, week month or year).
        basisOfPolicyWaitingPeriod:
          type: string
          description: Basis of the period of time that the policy must be in force
            before the insured qualifies for coverage (i.e. day, week month or year).
        amountType:
          type: string
          description: Indicates the basis upon which the benefit is calculated, examples
            might be fixed amount basis, salary percentage basis or tiered basis.
        employeeContributionStatus:
          type: string
          description: Field which indicates whether a policy is contributory or non-contributory.
        accidentEliminationPeriod:
          type: integer
          description: Elimination Period units for accident.
          format: int64
        eliminationPeriod:
          type: integer
          description: The number of Elimination Days.
          format: int64
        hospitalEliminationPeriod:
          type: integer
          description: Elimination Period for hospitalisation.
          format: int64
        hospitalizationClauseApplies:
          type: boolean
          description: Indicator which determines whether the Hospitalization clause
            applies.
        basisOfEliminationPeriod:
          type: string
          description: Basis for elimination period.
        basisOfAccidentEliminationPeriod:
          type: string
          description: Basis for elimination period for accident.
        hospitalBasisOfEliminationPeriod:
          type: string
          description: Basis for elimination period for hospitalisation.
        accidentMaxBenefitPeriod:
          type: integer
          description: Number of units in the maximum period for an accident. The
            maximum length of the period to be paid if the customer remains disabled.
          format: int64
        hospitalMaxBenefitPeriod:
          type: integer
          description: Number of units in the maximum period for hospitalization.
          format: int64
        maxBenefitPeriod:
          type: integer
          description: Number of units in the maximum benefit period. The maximum
            length of the period to be paid if the claimant remains disabled
          format: int64
        minBenefitPeriod:
          type: integer
          description: Number of units in the minimum benefit period. The minimum
            length of the period to be paid if the claimant remains disabled.
          format: int64
        basisOfMinBenefitPeriod:
          type: string
          description: Basis of the minimum benefit period. The minimum length of
            the period to be paid if the claimant remains disabled.
        basisOfMaxBenefitPeriod:
          type: string
          description: Basis of the maximum benefit period. The maximum length of
            the period to be paid if the claimant remains disabled.
        accidentBasisOfMaxBenefitPeriod:
          type: string
          description: Basis for the maximum period for an accident.
        hospitalBasisOfMaxBenefitPeriod:
          type: string
          description: Basis of the maximum period for hospitalization.
        benefitStartDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        benefitEndDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        frequencyAmount:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        adviceToPayOverride:
          type: string
          description: The advice provided by the insurer with regard to an individual
            benefit can be overridden by the employer, either regarding the decision
            (to pay or not to pay) or the calculated amount.
        checkCutting:
          type: string
          description: Specify if the insurer may be the one cutting the checks, or
            the employer might prefer doing it themselves.
        adviceToPay:
          type: boolean
          description: Specify that the benefit is under a service level of advice
            to pay, that is the insurance carrier providing the service making the
            decision to approve or deny the paid benefit.
        extensionAttributes:
          type: array
          description: The array will contain extension attributes from Benefit and
            Benefit Right objects.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
        expectedResolutionDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        approvedThroughDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        periodType:
          type: string
          description: The type of Benefit Period used to derive the Approved Through
            Date. Indicates whether the approval is for a fully certified or partially
            certified period.
      description: The details of the disability benefit.
    ReadDisabilityBenefitResult:
      type: object
      properties:
        benefitSummary:
          $ref: '#/components/schemas/BenefitSummary'
        disabilityBenefit:
          $ref: '#/components/schemas/DisabilityBenefit'
    LumpSumBenefit:
      type: object
      properties:
        benefitIncurredDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        brokerAuthorisationFlag:
          type: boolean
          description: Flag that indicates if the broker is to be included in the
            correspondence.
        initialNotificationDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        notificationReceivedDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        overrideClaimIncurredDate:
          type: boolean
          description: Indicator which specifies that the benefit level incurred date
            should be used rather than the claim level incurred date.
        startDateOfBenefitForClaim:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        sourceOfRequest:
          type: string
          description: The type of source that is requesting the benefit, such as
            claimant, guardian, or medical officer.
        effectiveDateForCoverage:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        benefitExpiryDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        isUnderwritten:
          type: boolean
          description: Indicates whether or not the member has been underwritten in
            order to have additional cover beyond what the group membership offers.
        policyWaitingPeriod:
          type: integer
          description: Period of time that the policy must be in force before the
            insured qualifies for coverage.
          format: int64
        benefitType:
          type: string
          description: Type of a benefit right such as Disability Income - STD, Disability
            Income LTD, Accelerated Death Benefit or Accidental Death Benefit.
        basisOfPolicyWaitingPeriod:
          type: string
          description: Basis of the period of time that the policy must be in force
            before the insured qualifies for coverage (i.e. day, week month or year).
        amountType:
          type: string
          description: Indicates the basis upon which the benefit is calculated, examples
            might be fixed amount basis, salary percentage basis or tiered basis.
        flatAmount:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        sumInsuredAtIncurredDate:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        maximumBenefitExpiryAge:
          type: integer
          description: Maximum Age to be eligible to receive benefit.
          format: int64
        extensionAttributes:
          type: array
          description: Extra attributes from extension if any.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
      description: A JSON representation of details of a lump sum benefit.
    ReadLumpSumBenefitResult:
      type: object
      properties:
        benefitSummary:
          $ref: '#/components/schemas/BenefitSummary'
        lumpSumBenefit:
          $ref: '#/components/schemas/LumpSumBenefit'
    CaseStatusHistory:
      type: object
      properties:
        status:
          type: string
          description: The stage in the process that the case was at.
        dateStatusEntered:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        dateStatusDeparted:
          type: string
          description: Formatted date when benefit's underlying process moved out
            of a step with this phase.
    AccountDetails:
      required:
      - accountName
      - accountNo
      - routingNumber
      type: object
      properties:
        bankCode:
          maxLength: 4
          minLength: 0
          type: string
          description: The Bank Code
        accountNo:
          maxLength: 256
          minLength: 0
          type: string
          description: The Account number of the personal account
        accountName:
          maxLength: 256
          minLength: 0
          type: string
          description: Name of the account holder
        routingNumber:
          maxLength: 256
          minLength: 0
          type: string
          description: Sort code of the Bank
        accountType:
          maxLength: 256
          minLength: 0
          type: string
          description: Account type of the bank
        classExtensionInformation:
          type: array
          description: An array of the extensionAttribute objects which contain claim
            extension information.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
      description: Account details
    ChequeDetails:
      type: object
      properties:
        nameToPrintOnCheck:
          maxLength: 100
          minLength: 0
          type: string
          description: The name that should be printed on the check
      description: Cheque details
    PaymentPreferenceResponse:
      required:
      - paymentMethod
      - paymentPreferenceId
      type: object
      properties:
        description:
          type: string
          description: Description of the Payment Preference
        effectiveFrom:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        effectiveTo:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        paymentMethod:
          type: string
          description: The name of the payment method. This is used to determine whether
            chequeDetails or accountDetails is displayed
        isDefault:
          type: boolean
        customerAddress:
          $ref: '#/components/schemas/CustomerAddress'
        chequeDetails:
          $ref: '#/components/schemas/ChequeDetails'
        accountDetails:
          $ref: '#/components/schemas/AccountDetails'
        classExtensionInformation:
          type: array
          description: An array of the extensionAttribute objects which contain claim
            extension information.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
        paymentPreferenceId:
          maxLength: 32
          minLength: 0
          type: string
          description: The unique identifier for payment preference
        nominatedPayee:
          maxLength: 250
          minLength: 0
          type: string
          description: The nominated payee for the payment preference
        status:
          type: string
          description: The status of the payment preference
        stageName:
          type: string
          description: The current stage of the payment preference
      description: Gets the payment preference details  of main payee on benefit.
    NewPaymentPreference:
      required:
      - paymentMethod
      type: object
      properties:
        description:
          type: string
          description: Description of the Payment Preference
        effectiveFrom:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        effectiveTo:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        paymentMethod:
          type: string
          description: The name of the payment method. This is used to determine whether
            chequeDetails or accountDetails is displayed
        isDefault:
          type: boolean
        customerAddress:
          $ref: '#/components/schemas/CustomerAddress'
        chequeDetails:
          $ref: '#/components/schemas/ChequeDetails'
        accountDetails:
          $ref: '#/components/schemas/AccountDetails'
        classExtensionInformation:
          type: array
          description: An array of the extensionAttribute objects which contain claim
            extension information.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
        overridePostalAddress:
          type: boolean
          description: Indicates that an override address applies for the payment
            preference. (i.e. sets the paymentAddressType to override. When false
            the correspondence address for the payee (or nominated payee) applies.
    EarningsResponse:
      required:
      - earningsBasis
      - earningsId
      - earningsType
      - periodInWeeks
      type: object
      properties:
        salaryAmountBasis:
          type: string
          description: Basis for salary amount being used.
        effectiveDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        endDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        notes:
          maxLength: 200
          minLength: 0
          type: string
          description: Notes relating to the earnings period.
        earningsBasis:
          type: string
          description: The earnings frequency.
        classExtensionInformation:
          type: array
          description: An array of the extensionAttribute objects which contain Earnings
            extension information.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
        earningsId:
          maximum: 32
          minimum: 0
          type: integer
          description: The unique identifier for the earnings record.
          format: int64
        earningsType:
          type: string
          description: The type of earnings record, it could refer to pre-disability,
            partial or salary.
        periodInWeeks:
          type: integer
          description: Period in weeks between Effective Date and End Date of Earnings
            record.
          format: int32
        weeklyBasisEarningAmountsResponse:
          $ref: '#/components/schemas/WeeklyBasisEarningAmountsResponse'
        monthlyBasisEarningAmountsResponse:
          $ref: '#/components/schemas/MonthlyBasisEarningAmountsResponse'
    MonthlyBasisEarningAmountsResponse:
      required:
      - earningsAmount
      type: object
      properties:
        earningsAmount:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        shiftPay:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        pensionContribution:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        bonuses:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        commissions:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        earningsAmountAsWeekly:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        totalEarnings:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
      description: Monthly Basis Earning Amounts Response Details.
    WeeklyBasisEarningAmountsResponse:
      required:
      - totalAmountOverridden
      type: object
      properties:
        totalAmountOverridden:
          type: boolean
          description: This attribute indicates if the total weekly or bi-weekly amount
            has been manually overridden.
        standardHours:
          type: number
          description: The number of hours in a standard working week or bi-week.
        standardHourRate:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        overtimeHours:
          type: number
          description: Number of overtime hours in a working week or bi-week.
        overtimeHourlyRate:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        statutoryValue:
          type: number
          description: Additional weekly or bi-weekly vacation or statutory entitlement
            amount or percentage of regular hours.
        statutoryBasis:
          type: string
          description: Additional weekly or bi-weekly vacation or statutory entitlements
            type. It may be an amount or percentage of regular hour.
        shiftHours:
          type: number
          description: Number of shift hours in a working week or bi-week.
        shiftBasis:
          type: string
          description: Basis of weekly or bi-weekly shift earnings - either an additional
            hourly allowance or an additional amount.
        shiftAllowance:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        totalEarnings:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        standardEarnings:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        overtimeEarnings:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        statutoryEarnings:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        shiftEarnings:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
      description: Weekly Basis Earning Amounts Response Details.
    WeeklyBasisEarningAmountsRequest:
      required:
      - totalAmountOverridden
      type: object
      properties:
        totalAmountOverridden:
          type: boolean
          description: This attribute indicates if the total weekly or bi-weekly amount
            has been manually overridden.
        standardHours:
          type: number
          description: The number of hours in a standard working week or bi-week.
        standardHourRate:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        overtimeHours:
          type: number
          description: Number of overtime hours in a working week or bi-week.
        overtimeHourlyRate:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        statutoryValue:
          type: number
          description: Additional weekly or bi-weekly vacation or statutory entitlement
            amount or percentage of regular hours.
        statutoryBasis:
          type: string
          description: Additional weekly or bi-weekly vacation or statutory entitlements
            type. It may be an amount or percentage of regular hour.
        shiftHours:
          type: number
          description: Number of shift hours in a working week or bi-week.
        shiftBasis:
          type: string
          description: Basis of weekly or bi-weekly shift earnings - either an additional
            hourly allowance or an additional amount.
        shiftAllowance:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        totalEarnings:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
      description: Weekly Basis Earning Amounts Request Details.
    WeeklyEarningsRequest:
      required:
      - earningsBasis
      type: object
      properties:
        salaryAmountBasis:
          type: string
          description: Basis for salary amount being used.
        effectiveDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        endDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        notes:
          maxLength: 200
          minLength: 0
          type: string
          description: Notes relating to the earnings period.
        earningsBasis:
          type: string
          description: The earnings frequency.
        classExtensionInformation:
          type: array
          description: An array of the extensionAttribute objects which contain Earnings
            extension information.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
        weeklyBasisEarningAmountsRequest:
          $ref: '#/components/schemas/WeeklyBasisEarningAmountsRequest'
    MonthlyBasisEarningAmountsRequest:
      required:
      - earningsAmount
      type: object
      properties:
        earningsAmount:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        shiftPay:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        pensionContribution:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        bonuses:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        commissions:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
      description: Monthly Basis Earning Amounts Request Details.
    MonthlyEarningsRequest:
      required:
      - earningsBasis
      type: object
      properties:
        salaryAmountBasis:
          type: string
          description: Basis for salary amount being used.
        effectiveDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        endDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        notes:
          maxLength: 200
          minLength: 0
          type: string
          description: Notes relating to the earnings period.
        earningsBasis:
          type: string
          description: The earnings frequency.
        classExtensionInformation:
          type: array
          description: An array of the extensionAttribute objects which contain Earnings
            extension information.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
        monthlyBasisEarningAmountsRequest:
          $ref: '#/components/schemas/MonthlyBasisEarningAmountsRequest'
    MainPayeeDetails:
      type: object
      properties:
        participantId:
          type: integer
          description: Id of the participant
          format: int64
        rolename:
          maxLength: 10
          minLength: 0
          type: string
          description: The role name assigned to the participant on the case
        partyName:
          maxLength: 100
          minLength: 0
          type: string
          description: The name of the party with the participant role on the case
        startDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        endDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        referenceNo:
          maxLength: 40
          minLength: 0
          type: string
          description: The reference number of the party with the participant role
            on the case
        sourceSystem:
          maxLength: 100
          minLength: 0
          type: string
          description: The source system of the party with the participant role on
            the case
        classExtensionInformation:
          type: array
          description: An array of the extensionAttribute objects which contain claim
            extension information
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
        paymentPreference:
          $ref: '#/components/schemas/PaymentPreferenceResponse'
        taxTypeDetails:
          type: array
          description: Gets the list of tax details of main payee on benefit.
          items:
            $ref: '#/components/schemas/TaxTypeDetails'
    TaxTypeDetails:
      required:
      - taxCode
      - taxType
      type: object
      properties:
        effectiveDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        taxType:
          type: string
          description: The specifies the type of tax, e.g. Federal Income Tax, State
            Income Tax.
        taxCode:
          type: string
          description: The specifies a code for a subcategory of tax type.
        percentageRate:
          type: number
          description: A percentage rate for tax record.
        filingMaritalStatus:
          type: string
          description: The marital status filed for tax purposes.
        additionalWithholdAmount:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        numberExemptions:
          type: integer
          description: The tax exemptions e.g. number of exemptions accumulated.
          format: int64
        classExtensionInformation:
          type: array
          description: An array of the extensionAttribute objects which contain claim
            extension information.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
    FuturePayment:
      type: object
      properties:
        dueEventId:
          type: string
          description: Business Entity OID
          format: string
          example: TE:00012:0000001234
        processingDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        benefitId:
          type: string
        effectiveDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        periodStartDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        periodEndDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        grossAmount:
          maxLength: 28
          minLength: 0
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        netAmount:
          maxLength: 28
          minLength: 0
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        balancingAmount:
          maxLength: 28
          minLength: 0
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        netPaymentAmount:
          maxLength: 28
          minLength: 0
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        futurePaymentDetails:
          type: array
          description: This list return the recurring future payment details list.
          items:
            $ref: '#/components/schemas/FuturePaymentDetail'
    FuturePaymentDetail:
      type: object
      properties:
        periodStartDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        periodEndDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        amount:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        type:
          type: string
          description: The type of the future payment detail.
        integrationType:
          type: string
          description: The integration type of the future payment detail.
        reference:
          type: string
          description: This gives the reference value of the future payment detail.
        calcDetails:
          type: array
          description: 'The Calculation Details that explain how each adjustment is
            calculated. '
          items:
            type: string
            description: 'The Calculation Details that explain how each adjustment
              is calculated. '
        sequenceNumber:
          type: integer
          description: 'The sequence number of the future payment detail. '
          format: int64
        useTOCalc:
          type: string
          description: 'The Calculation that explain how each future payment detail
            is calculated. '
        payee:
          maxLength: 100
          minLength: 0
          type: string
          description: The name of the Payee which the future payment detail belongs.
        adjustmentClassExtension:
          type: array
          description: An array of the extensionAttribute objects which contain OLFixedAmountIncreaseInstruction
            extension information.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
        calcDetailsClassExtension:
          type: array
          description: An array of the extensionAttribute objects which contain OLAdjustmentCalcDetail
            extension information.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
        adjustmentTypeId:
          type: string
          description: Business Entity OID
          format: string
          example: TE:00012:0000001234
      description: This list return the recurring future payment details list.
    TaxTypeDetailsResponse:
      required:
      - taxCode
      - taxType
      - taxTypeDetailsId
      type: object
      properties:
        effectiveDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        taxType:
          type: string
          description: The specifies the type of tax, e.g. Federal Income Tax, State
            Income Tax.
        taxCode:
          type: string
          description: The specifies a code for a subcategory of tax type.
        percentageRate:
          type: number
          description: A percentage rate for tax record.
        filingMaritalStatus:
          type: string
          description: The marital status filed for tax purposes.
        additionalWithholdAmount:
          type: string
          description: Money amount format
          format: money
          example: "1500.50"
        numberExemptions:
          type: integer
          description: The tax exemptions e.g. number of exemptions accumulated.
          format: int64
        classExtensionInformation:
          type: array
          description: An array of the extensionAttribute objects which contain claim
            extension information.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
        taxTypeDetailsId:
          type: string
          description: The id of the tax type details.
    MedicalDetails:
      type: object
      properties:
        condition:
          type: string
          description: A description of the medical condition of the injured party.
        firstDoctorVisitDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        lastReceivedDateMedicalInfo:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        lastRequestedDateMedicalInfo:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        medicalAuthorisationReceivedDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        pregnancyIndicator:
          type: boolean
          description: Indicates whether a person is pregnant or not.
        treatmentPlan:
          type: string
          description: A description of the treatment plan for the injured party.
        clientDominantSide:
          type: string
          description: The claimants dominant side.
        lifeExpectancy:
          type: string
          description: Projected life expectancy for the injured party based on the
            current medical information.
        causeOfInjuryCode:
          type: string
          description: The code ID that specifies the cause of injury.
        extensionAttributes:
          type: array
          description: Extension attributes.
          items:
            $ref: '#/components/schemas/ExtensionAttribute'
        symptomsFirstAppeared:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
    PregnancyDetails:
      type: object
      properties:
        actualDeliveryDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        expectedDeliveryDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        pregnancyComplications:
          type: boolean
          description: Indicates whether or not pregnancy complications occurred.
        deliveryType:
          type: string
          description: Indicates the type of delivery following pregnancy.
    RestrictionsLimitations:
      type: object
      properties:
        restrictionEffectiveDate:
          type: string
          description: ISO 8601 date format
          format: date
          example: 1999-12-31
        restrictions:
          type: string
          description: Specifies the disabilities/restrictions experienced by the
            injured party as a result of the claim.
    NewDiagnosisDetails:
      type: object
      properties:
        medicalCode:
          maxLength: 20
          minLength: 0
          type: string
          description: The code ID that specifies a particular diagnosis.
        levelIndicator:
          type: string
          description: The injury code level e.g. primary or secondary assigned to
            the injury in the context of the claim.
    CustomerSummary:
      required:
      - customerNo
      - dateOfBirth
      - firstName
      - lastName
      type: object
      properties:
        customerNo:
          maxLength: 256
          minLength: 0
          type: string
          description: The Customer number
        firstName:
          maxLength: 256
          minLength: 0
          type: string
          description: The First Name of the Customer
        lastName:
          maxLength: 256
          minLength: 0
          type: string
          description: The Last Name of the Customer
        dateOfBirth:
          maxLength: 256
          minLength: 0
          type: string
          description: The Date Of Birth of the Customer
    RegistrationResponse:
      type: object
      properties:
        registered:
          type: boolean
          description: True if the customer is registered, false otherwise.
      description: Object with information about the registration status of a customer,
        e.g. is registered.
