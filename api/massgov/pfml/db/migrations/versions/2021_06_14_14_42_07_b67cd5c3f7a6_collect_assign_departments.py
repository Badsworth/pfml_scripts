"""Collect & assign departments

Revision ID: b67cd5c3f7a6
Revises: 7e4cd8f28ddc
Create Date: 2021-06-14 14:42:07.319891

"""
from alembic import op
import sqlalchemy as sa

from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "b67cd5c3f7a6"
down_revision = "7e4cd8f28ddc"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # worksite table
    op.create_table(
        "worksite",
        sa.Column("worksite_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("worksite_name", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("worksite_id"),
    )
    # department table
    op.create_table(
        "department",
        sa.Column("department_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("department_worksite_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("department_name", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(["department_worksite_id"], ["worksite.worksite_id"],),
        sa.PrimaryKeyConstraint("department_id"),
    )
    
    # application needs worksite id and org unit id
    op.add_column(
        "application", sa.Column("worksite_id", postgresql.UUID(as_uuid=True), nullable=True)
    )
    op.add_column(
        "application", sa.Column("department_id", postgresql.UUID(as_uuid=True), nullable=True)
    )
    op.create_foreign_key(
        "application_worksite_id_fkey", "application", "worksite", ["worksite_id"], ["worksite_id"]
    )
    op.create_foreign_key(
        "application_department_id_fkey", "application", "department", ["department_id"], ["department_id"]
    )

    # link user leave admin with departments
    op.create_table(
        "link_user_leave_admin_department",
        sa.Column("leave_admin_department_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("department_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("user_leave_administrator_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("user_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("employer_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.ForeignKeyConstraint(["department_id"], ["department.department_id"],),
        sa.ForeignKeyConstraint(["user_id"], ["user.user_id"],),
        sa.ForeignKeyConstraint(["employer_id"], ["employer.employer_id"],),
        sa.PrimaryKeyConstraint("department_id", "user_id", "employer_id")
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("application_worksite_id_fkey", "application", type_="foreignkey")
    op.drop_constraint("application_department_id_fkey", "application", type_="foreignkey")
    op.drop_column("application", "worksite_id")
    op.drop_column("application", "department_id")
    op.drop_table("link_user_leave_admin_department")
    op.drop_table("department")
    op.drop_table("worksite")
    # ### end Alembic commands ###
