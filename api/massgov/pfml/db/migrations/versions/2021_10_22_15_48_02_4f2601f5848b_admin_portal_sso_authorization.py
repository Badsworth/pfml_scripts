"""Admin Portal SSO authorization

Revision ID: 4f2601f5848b
Revises: efbf721141cb
Create Date: 2021-10-22 15:48:02.298968

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.orm.session import Session

from massgov.pfml.db.models.employees import AzureGroup, AzureGroupPermission, AzurePermission

# revision identifiers, used by Alembic.
revision = "4f2601f5848b"
down_revision = "efbf721141cb"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "lk_azure_group",
        sa.Column("azure_group_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("azure_group_name", sa.Text(), nullable=False),
        sa.Column("azure_group_guid", sa.Text(), nullable=False),
        sa.Column("azure_group_parent_id", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("azure_group_id"),
    )
    op.create_table(
        "lk_azure_permission",
        sa.Column("azure_permission_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("azure_permission_resource", sa.Text(), nullable=False),
        sa.Column("azure_permission_action", sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint("azure_permission_id"),
    )
    op.create_table(
        "link_azure_group_permission",
        sa.Column("azure_permission_id", sa.Integer(), nullable=False),
        sa.Column("azure_group_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["azure_group_id"], ["lk_azure_group.azure_group_id"],),
        sa.ForeignKeyConstraint(
            ["azure_permission_id"], ["lk_azure_permission.azure_permission_id"],
        ),
        sa.PrimaryKeyConstraint("azure_permission_id", "azure_group_id"),
        sa.UniqueConstraint("azure_permission_id", "azure_group_id"),
    )
    op.create_table(
        "user_azure_permission_log",
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("user_azure_permission_log_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("email_address", sa.Text(), nullable=False),
        sa.Column("sub_id", sa.Text(), nullable=False),
        sa.Column("family_name", sa.Text(), nullable=False),
        sa.Column("given_name", sa.Text(), nullable=False),
        sa.Column("azure_permission_id", sa.Integer(), nullable=True),
        sa.Column("azure_group_id", sa.Integer(), nullable=True),
        sa.Column("action", sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(["azure_group_id"], ["lk_azure_group.azure_group_id"],),
        sa.ForeignKeyConstraint(
            ["azure_permission_id"], ["lk_azure_permission.azure_permission_id"],
        ),
        sa.PrimaryKeyConstraint("user_azure_permission_log_id"),
    )
    # ### end Alembic commands ###
    # Insert every permission for non_prod and prod admin groups.
    group_ids = [
        AzureGroup.NON_PROD_ADMIN.azure_group_id,
        AzureGroup.PROD_ADMIN.azure_group_id,
    ]
    db_session = Session(bind=op.get_bind())
    AzureGroup.sync_to_database(db_session)
    AzurePermission.sync_to_database(db_session)
    db_session.commit()
    for group_id in group_ids:
        for permission in AzurePermission.get_all():
            db_session.add(
                AzureGroupPermission(
                    azure_group_id=group_id, azure_permission_id=permission.azure_permission_id,
                )
            )
    db_session.commit()


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user_azure_permission_log")
    op.drop_table("link_azure_group_permission")
    op.drop_table("lk_azure_permission")
    op.drop_table("lk_azure_group")
    # ### end Alembic commands ###
