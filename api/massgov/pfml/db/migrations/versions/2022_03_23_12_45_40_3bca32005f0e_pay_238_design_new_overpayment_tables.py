"""PAY-238 Design new overpayment tables

Revision ID: 3bca32005f0e
Revises: 3cf07191b8d6
Create Date: 2022-03-23 12:45:40.289427

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "3bca32005f0e"
down_revision = "3cf07191b8d6"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "lk_overpayment_recovery_type",
        sa.Column("overpayment_recovery_type_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("overpayment_recovery_type_description", sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint("overpayment_recovery_type_id"),
    )
    op.create_table(
        "lk_payment_event_type",
        sa.Column("payment_event_type_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("payment_event_type_description", sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint("payment_event_type_id"),
    )
    op.create_table(
        "lk_payment_type",
        sa.Column("payment_type_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("payment_type_description", sa.Text(), nullable=False),
        sa.PrimaryKeyConstraint("payment_type_id"),
    )
    op.create_table(
        "overpayment_repayment",
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("overpayment_repayment_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column(
            "cancelled_overpayment_repayment_id", postgresql.UUID(as_uuid=True), nullable=True
        ),
        sa.Column("overpayment_repayment_date", sa.Date(), nullable=True),
        sa.Column("amount", sa.Numeric(), nullable=True),
        sa.Column("fineos_pei_c_value", sa.Text(), nullable=True),
        sa.Column("fineos_pei_i_value", sa.Text(), nullable=True),
        sa.Column("payment_event_type_id", sa.Integer(), nullable=True),
        sa.Column("overpayment_recovery_type_id", sa.Integer(), nullable=True),
        sa.Column("fineos_employee_first_name", sa.Text(), nullable=True),
        sa.Column("fineos_employee_last_name", sa.Text(), nullable=True),
        sa.Column("fineos_employee_middle_name", sa.Text(), nullable=True),
        sa.Column("employee_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("vpei_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("fineos_extraction_date", sa.Date(), nullable=True),
        sa.Column("fineos_extract_import_log_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["employee_id"],
            ["employee.employee_id"],
        ),
        sa.ForeignKeyConstraint(
            ["fineos_extract_import_log_id"],
            ["import_log.import_log_id"],
        ),
        sa.ForeignKeyConstraint(
            ["vpei_id"],
            ["fineos_extract_vpei.vpei_id"],
        ),
        sa.PrimaryKeyConstraint("overpayment_repayment_id"),
    )
    op.create_index(
        op.f("ix_overpayment_repayment_employee_id"),
        "overpayment_repayment",
        ["employee_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_overpayment_repayment_fineos_extract_import_log_id"),
        "overpayment_repayment",
        ["fineos_extract_import_log_id"],
        unique=False,
    )
    op.create_table(
        "overpayment",
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("overpayment_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("cancelled_overpayment_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("claim_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("period_start_date", sa.Date(), nullable=True),
        sa.Column("period_end_date", sa.Date(), nullable=True),
        sa.Column("overpayment_date", sa.Date(), nullable=True),
        sa.Column("amount", sa.Numeric(), nullable=True),
        sa.Column("fineos_pei_c_value", sa.Text(), nullable=True),
        sa.Column("fineos_pei_i_value", sa.Text(), nullable=True),
        sa.Column("payment_event_type_id", sa.Integer(), nullable=True),
        sa.Column("claim_type_id", sa.Integer(), nullable=True),
        sa.Column("absence_case_creation_date", sa.Date(), nullable=True),
        sa.Column("leave_request_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("fineos_employee_first_name", sa.Text(), nullable=True),
        sa.Column("fineos_employee_last_name", sa.Text(), nullable=True),
        sa.Column("fineos_employee_middle_name", sa.Text(), nullable=True),
        sa.Column("employee_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("vpei_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("fineos_leave_request_id", sa.Integer(), nullable=True),
        sa.Column("fineos_extraction_date", sa.Date(), nullable=True),
        sa.Column("fineos_extract_import_log_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["claim_id"],
            ["claim.claim_id"],
        ),
        sa.ForeignKeyConstraint(
            ["claim_type_id"],
            ["lk_claim_type.claim_type_id"],
        ),
        sa.ForeignKeyConstraint(
            ["employee_id"],
            ["employee.employee_id"],
        ),
        sa.ForeignKeyConstraint(
            ["fineos_extract_import_log_id"],
            ["import_log.import_log_id"],
        ),
        sa.ForeignKeyConstraint(
            ["leave_request_id"],
            ["absence_period.absence_period_id"],
        ),
        sa.ForeignKeyConstraint(
            ["vpei_id"],
            ["fineos_extract_vpei.vpei_id"],
        ),
        sa.PrimaryKeyConstraint("overpayment_id"),
    )
    op.create_index(op.f("ix_overpayment_claim_id"), "overpayment", ["claim_id"], unique=False)
    op.create_index(
        op.f("ix_overpayment_employee_id"), "overpayment", ["employee_id"], unique=False
    )
    op.create_index(
        op.f("ix_overpayment_fineos_extract_import_log_id"),
        "overpayment",
        ["fineos_extract_import_log_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_overpayment_fineos_extract_import_log_id"), table_name="overpayment")
    op.drop_index(op.f("ix_overpayment_employee_id"), table_name="overpayment")
    op.drop_index(op.f("ix_overpayment_claim_id"), table_name="overpayment")
    op.drop_table("overpayment")
    op.drop_index(
        op.f("ix_overpayment_repayment_fineos_extract_import_log_id"),
        table_name="overpayment_repayment",
    )
    op.drop_index(op.f("ix_overpayment_repayment_employee_id"), table_name="overpayment_repayment")
    op.drop_table("overpayment_repayment")
    op.drop_table("lk_payment_type")
    op.drop_table("lk_payment_event_type")
    op.drop_table("lk_overpayment_recovery_type")
    # ### end Alembic commands ###
