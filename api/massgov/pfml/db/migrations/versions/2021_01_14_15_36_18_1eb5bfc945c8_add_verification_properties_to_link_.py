"""add verification properties to link_user_leave_administrator table, remove verification_code and logs

Revision ID: 1eb5bfc945c8
Revises: fd7cd789a4a1
Create Date: 2021-01-14 15:36:18.680918

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "1eb5bfc945c8"
down_revision = "fd7cd789a4a1"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("verification_code_log")
    op.drop_constraint("verification_verification_code_id_fkey", "verification", type_="foreignkey")
    op.drop_column("verification", "verification_code_id")
    op.drop_index("ix_verification_code_employer_fein", table_name="verification_code")
    op.drop_index("ix_verification_code_verification_code", table_name="verification_code")
    op.drop_table("verification_code")
    op.create_unique_constraint(None, "link_ctr_address_pair", ["fineos_address_id"])
    op.add_column(
        "link_user_leave_administrator",
        sa.Column("verification_id", postgresql.UUID(as_uuid=True), nullable=True),
    )
    op.create_foreign_key(
        None,
        "link_user_leave_administrator",
        "verification",
        ["verification_id"],
        ["verification_id"],
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "verification",
        sa.Column("verification_code_id", postgresql.UUID(), autoincrement=False, nullable=True),
    )
    op.create_foreign_key(
        "verification_verification_code_id_fkey",
        "verification",
        "verification_code",
        ["verification_code_id"],
        ["verification_code_id"],
    )
    op.drop_constraint(None, "link_user_leave_administrator", type_="foreignkey")  # type: ignore
    op.drop_column("link_user_leave_administrator", "verification_id")
    op.drop_constraint(None, "link_ctr_address_pair", type_="unique")  # type: ignore
    op.create_table(
        "verification_code_log",
        sa.Column(
            "verification_code_log_id", postgresql.UUID(), autoincrement=False, nullable=False
        ),
        sa.Column("verification_code_id", postgresql.UUID(), autoincrement=False, nullable=True),
        sa.Column("result", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("message", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["verification_code_id"],
            ["verification_code.verification_code_id"],
            name="verification_code_log_verification_code_id_fkey",
        ),
        sa.PrimaryKeyConstraint("verification_code_log_id", name="verification_code_log_pkey"),
    )
    op.create_table(
        "verification_code",
        sa.Column("verification_code_id", postgresql.UUID(), autoincrement=False, nullable=False),
        sa.Column("employer_id", postgresql.UUID(), autoincrement=False, nullable=True),
        sa.Column("employer_fein", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("verification_code", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column("remaining_uses", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "expires_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
        sa.Column(
            "issued_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["employer_id"], ["employer.employer_id"], name="verification_code_employer_id_fkey"
        ),
        sa.PrimaryKeyConstraint("verification_code_id", name="verification_code_pkey"),
    )
    op.create_index(
        "ix_verification_code_verification_code",
        "verification_code",
        ["verification_code"],
        unique=False,
    )
    op.create_index(
        "ix_verification_code_employer_fein", "verification_code", ["employer_fein"], unique=False
    )
    # ### end Alembic commands ###
