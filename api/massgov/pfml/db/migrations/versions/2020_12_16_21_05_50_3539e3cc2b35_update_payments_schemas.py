"""Update payments schemas

Revision ID: 3539e3cc2b35
Revises: 30659afd912e
Create Date: 2020-12-16 21:05:50.408408

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "3539e3cc2b35"
down_revision = "30659afd912e"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "ctr_batch_identifier",
        sa.Column("ctr_batch_identifier_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("ctr_batch_identifier", sa.Text(), nullable=True),
        sa.Column("inf_data", sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint("ctr_batch_identifier_id"),
    )
    op.create_index(
        op.f("ix_ctr_batch_identifier_ctr_batch_identifier"),
        "ctr_batch_identifier",
        ["ctr_batch_identifier"],
        unique=True,
    )
    op.create_table(
        "ctr_document_identifier",
        sa.Column("ctr_document_identifier_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("ctr_document_identifier", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("ctr_document_identifier_id"),
    )
    op.create_index(
        op.f("ix_ctr_document_identifier_ctr_document_identifier"),
        "ctr_document_identifier",
        ["ctr_document_identifier"],
        unique=True,
    )
    op.create_table(
        "lk_absence_status",
        sa.Column("absence_status_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("absence_status_description", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("absence_status_id"),
    )
    op.add_column("claim", sa.Column("absence_period_end_date", sa.Date(), nullable=True))
    op.add_column("claim", sa.Column("absence_period_start_date", sa.Date(), nullable=True))
    op.add_column("claim", sa.Column("fineos_absence_status_id", sa.Integer(), nullable=True))
    op.add_column("claim", sa.Column("fineos_notification_id", sa.Text(), nullable=True))
    op.add_column("claim", sa.Column("is_id_proofed", sa.Boolean(), nullable=True))
    op.drop_index("ix_claim_fineos_absence_id", table_name="claim")
    op.create_index(op.f("ix_claim_fineos_absence_id"), "claim", ["fineos_absence_id"], unique=True)
    op.create_foreign_key(
        "claim_fineos_absence_status_id_fkey",
        "claim",
        "lk_absence_status",
        ["fineos_absence_status_id"],
        ["absence_status_id"],
    )
    op.drop_column("claim", "fineos_claim_number")
    op.add_column("employee", sa.Column("fineos_customer_number", sa.Text(), nullable=True))
    op.add_column(
        "link_employee_reference_file",
        sa.Column("ctr_document_identifier_id", postgresql.UUID(as_uuid=True), nullable=True),
    )
    op.create_index(
        op.f("ix_link_employee_reference_file_ctr_document_identifier_id"),
        "link_employee_reference_file",
        ["ctr_document_identifier_id"],
        unique=False,
    )
    op.drop_index(
        "ix_link_employee_reference_file_ctr_document_id", table_name="link_employee_reference_file"
    )
    op.create_foreign_key(
        "link_employee_reference_file_ctr_document_identifier_id_fkey",
        "link_employee_reference_file",
        "ctr_document_identifier",
        ["ctr_document_identifier_id"],
        ["ctr_document_identifier_id"],
    )
    op.drop_column("link_employee_reference_file", "ctr_document_id")
    op.drop_column("link_employee_reference_file", "ctr_batch_id")
    op.add_column(
        "link_payment_reference_file",
        sa.Column("ctr_document_identifier_id", postgresql.UUID(as_uuid=True), nullable=True),
    )
    op.create_index(
        op.f("ix_link_payment_reference_file_ctr_document_identifier_id"),
        "link_payment_reference_file",
        ["ctr_document_identifier_id"],
        unique=False,
    )
    op.drop_index(
        "ix_link_payment_reference_file_ctr_document_id", table_name="link_payment_reference_file"
    )
    op.create_foreign_key(
        "link_payment_reference_file_ctr_document_identifier_id_fkey",
        "link_payment_reference_file",
        "ctr_document_identifier",
        ["ctr_document_identifier_id"],
        ["ctr_document_identifier_id"],
    )
    op.drop_column("link_payment_reference_file", "ctr_document_id")
    op.drop_column("link_payment_reference_file", "ctr_batch_id")
    op.add_column("payment", sa.Column("fineos_extraction_date", sa.Date(), nullable=True))
    op.add_column(
        "reference_file",
        sa.Column("ctr_batch_identifier_id", postgresql.UUID(as_uuid=True), nullable=True),
    )
    op.create_index(
        op.f("ix_reference_file_ctr_batch_identifier_id"),
        "reference_file",
        ["ctr_batch_identifier_id"],
        unique=False,
    )
    op.create_foreign_key(
        "reference_file_ctr_batch_identifier_id_fkey",
        "reference_file",
        "ctr_batch_identifier",
        ["ctr_batch_identifier_id"],
        ["ctr_batch_identifier_id"],
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "reference_file_ctr_batch_identifier_id_fkey", "reference_file", type_="foreignkey"
    )
    op.drop_index(op.f("ix_reference_file_ctr_batch_identifier_id"), table_name="reference_file")
    op.drop_column("reference_file", "ctr_batch_identifier_id")
    op.drop_column("payment", "fineos_extraction_date")
    op.add_column(
        "link_payment_reference_file",
        sa.Column("ctr_batch_id", sa.TEXT(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "link_payment_reference_file",
        sa.Column("ctr_document_id", sa.TEXT(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(
        "link_payment_reference_file_ctr_document_identifier_id_fkey",
        "link_payment_reference_file",
        type_="foreignkey",
    )
    op.create_index(
        "ix_link_payment_reference_file_ctr_document_id",
        "link_payment_reference_file",
        ["ctr_document_id"],
        unique=False,
    )
    op.drop_index(
        op.f("ix_link_payment_reference_file_ctr_document_identifier_id"),
        table_name="link_payment_reference_file",
    )
    op.drop_column("link_payment_reference_file", "ctr_document_identifier_id")
    op.add_column(
        "link_employee_reference_file",
        sa.Column("ctr_batch_id", sa.TEXT(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "link_employee_reference_file",
        sa.Column("ctr_document_id", sa.TEXT(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(
        "link_employee_reference_file_ctr_document_identifier_id_fkey",
        "link_employee_reference_file",
        type_="foreignkey",
    )
    op.create_index(
        "ix_link_employee_reference_file_ctr_document_id",
        "link_employee_reference_file",
        ["ctr_document_id"],
        unique=False,
    )
    op.drop_index(
        op.f("ix_link_employee_reference_file_ctr_document_identifier_id"),
        table_name="link_employee_reference_file",
    )
    op.drop_column("link_employee_reference_file", "ctr_document_identifier_id")
    op.drop_column("employee", "fineos_customer_number")
    op.add_column(
        "claim", sa.Column("fineos_claim_number", sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.drop_constraint("claim_fineos_absence_status_id_fkey", "claim", type_="foreignkey")
    op.drop_index(op.f("ix_claim_fineos_absence_id"), table_name="claim")
    op.create_index("ix_claim_fineos_absence_id", "claim", ["fineos_absence_id"], unique=False)
    op.drop_column("claim", "is_id_proofed")
    op.drop_column("claim", "fineos_notification_id")
    op.drop_column("claim", "fineos_absence_status_id")
    op.drop_column("claim", "absence_period_start_date")
    op.drop_column("claim", "absence_period_end_date")
    op.drop_table("lk_absence_status")
    op.drop_index(
        op.f("ix_ctr_document_identifier_ctr_document_identifier"),
        table_name="ctr_document_identifier",
    )
    op.drop_table("ctr_document_identifier")
    op.drop_index(
        op.f("ix_ctr_batch_identifier_ctr_batch_identifier"), table_name="ctr_batch_identifier"
    )
    op.drop_table("ctr_batch_identifier")
    # ### end Alembic commands ###
