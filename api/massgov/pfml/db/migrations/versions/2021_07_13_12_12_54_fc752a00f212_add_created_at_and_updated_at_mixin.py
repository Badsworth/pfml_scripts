"""Add created_at_and_updated_at_mixin

Revision ID: fc752a00f212
Revises: 78833d1dd679
Create Date: 2021-07-13 12:12:54.271207

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "fc752a00f212"
down_revision = "78833d1dd679"
branch_labels = None
depends_on = None

tables_to_alter = ["document", "rmv_check", "notification", "verification"]


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "dia_reduction_payment",
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
    )
    op.add_column(
        "dua_reduction_payment",
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
    )

    # set new updated_at column to created_at columns (dia)
    op.execute("UPDATE dia_reduction_payment SET updated_at=created_at")

    # set new updated_at column to created_at columns (dua)
    op.execute("UPDATE dua_reduction_payment SET updated_at=created_at")

    op.add_column(
        "employee",
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
    )
    op.add_column(
        "employee",
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
    )
    op.add_column(
        "employer",
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
    )
    op.add_column(
        "employer",
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
    )

    for table in tables_to_alter:
        op.execute(
            """
            ALTER TABLE \"{}\"
                ALTER COLUMN created_at SET DEFAULT NOW(),
                ALTER COLUMN updated_at SET DEFAULT NOW()
        """.format(
                table
            )
        )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    for table in tables_to_alter:
        op.execute(
            """
            ALTER TABLE \"{}\"
                ALTER COLUMN created_at DROP DEFAULT,
                ALTER COLUMN updated_at DROP DEFAULT
        """.format(
                table
            )
        )

    op.drop_column("employer", "updated_at")
    op.drop_column("employer", "created_at")
    op.drop_column("employee", "updated_at")
    op.drop_column("employee", "created_at")
    op.drop_column("dua_reduction_payment", "updated_at")
    op.drop_column("dia_reduction_payment", "updated_at")
    # ### end Alembic commands ###
