"""delete agency reduction table

Revision ID: 0437e7914779
Revises: f767b22ae747
Create Date: 2021-03-26 17:08:09.966091

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "0437e7914779"
down_revision = "f767b22ae747"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        "ix_agency_reduction_payment_absence_case_id", table_name="agency_reduction_payment"
    )
    op.drop_index(
        "ix_agency_reduction_payment_benefit_week_end_date", table_name="agency_reduction_payment"
    )
    op.drop_index(
        "ix_agency_reduction_payment_benefit_week_start_date", table_name="agency_reduction_payment"
    )
    op.drop_index(
        "ix_agency_reduction_payment_benefit_year_end_date", table_name="agency_reduction_payment"
    )
    op.drop_index(
        "ix_agency_reduction_payment_benefit_year_start_date", table_name="agency_reduction_payment"
    )
    op.drop_index("ix_agency_reduction_payment_claim_id", table_name="agency_reduction_payment")
    op.drop_index("ix_agency_reduction_payment_created_at", table_name="agency_reduction_payment")
    op.drop_index(
        "ix_agency_reduction_payment_payment_issued_date", table_name="agency_reduction_payment"
    )
    op.drop_table("link_agency_reduction_payment_reference_file")
    op.drop_table("agency_reduction_payment")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "link_agency_reduction_payment_reference_file",
        sa.Column("reference_file_id", postgresql.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "agency_reduction_payment_id", postgresql.UUID(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["agency_reduction_payment_id"],
            ["agency_reduction_payment.agency_reduction_payment_id"],
            name="link_agency_reduction_payment__agency_reduction_payment_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["reference_file_id"],
            ["reference_file.reference_file_id"],
            name="link_agency_reduction_payment_reference__reference_file_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "reference_file_id",
            "agency_reduction_payment_id",
            name="link_agency_reduction_payment_reference_file_pkey",
        ),
    )
    op.create_table(
        "agency_reduction_payment",
        sa.Column(
            "agency_reduction_payment_id", postgresql.UUID(), autoincrement=False, nullable=False
        ),
        sa.Column("absence_case_id", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("agency_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "payment_issued_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("gross_benefit_amount_cents", sa.NUMERIC(), autoincrement=False, nullable=True),
        sa.Column("net_benefit_amount_cents", sa.NUMERIC(), autoincrement=False, nullable=True),
        sa.Column("has_fraud_indicator", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column(
            "benefit_week_start_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "benefit_week_end_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "benefit_year_start_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "benefit_year_end_date",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True
        ),
        sa.Column("claim_id", postgresql.UUID(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["agency_id"], ["lk_agency.agency_id"], name="agency_reduction_payment_agency_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["claim_id"], ["claim.claim_id"], name="agency_reduction_payment_claim_fkey"
        ),
        sa.PrimaryKeyConstraint(
            "agency_reduction_payment_id", name="agency_reduction_payment_pkey"
        ),
    )
    op.create_index(
        "ix_agency_reduction_payment_payment_issued_date",
        "agency_reduction_payment",
        ["payment_issued_date"],
        unique=False,
    )
    op.create_index(
        "ix_agency_reduction_payment_created_at",
        "agency_reduction_payment",
        ["created_at"],
        unique=False,
    )
    op.create_index(
        "ix_agency_reduction_payment_claim_id",
        "agency_reduction_payment",
        ["claim_id"],
        unique=False,
    )
    op.create_index(
        "ix_agency_reduction_payment_benefit_year_start_date",
        "agency_reduction_payment",
        ["benefit_year_start_date"],
        unique=False,
    )
    op.create_index(
        "ix_agency_reduction_payment_benefit_year_end_date",
        "agency_reduction_payment",
        ["benefit_year_end_date"],
        unique=False,
    )
    op.create_index(
        "ix_agency_reduction_payment_benefit_week_start_date",
        "agency_reduction_payment",
        ["benefit_week_start_date"],
        unique=False,
    )
    op.create_index(
        "ix_agency_reduction_payment_benefit_week_end_date",
        "agency_reduction_payment",
        ["benefit_week_end_date"],
        unique=False,
    )
    op.create_index(
        "ix_agency_reduction_payment_absence_case_id",
        "agency_reduction_payment",
        ["absence_case_id"],
        unique=False,
    )
    # ### end Alembic commands ###
