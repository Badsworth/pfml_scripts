"""managed requirement table and assoc lk tables

Revision ID: 95239ae3de15
Revises: 39a29f32b5d0
Create Date: 2021-06-30 17:11:01.318074

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "95239ae3de15"
down_revision = "39a29f32b5d0"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "lk_managed_requirement_category",
        sa.Column(
            "managed_requirement_category_id", sa.Integer(), autoincrement=True, nullable=False
        ),
        sa.Column("managed_requirement_category_description", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("managed_requirement_category_id"),
    )
    op.create_table(
        "lk_managed_requirement_status",
        sa.Column(
            "managed_requirement_status_id", sa.Integer(), autoincrement=True, nullable=False
        ),
        sa.Column("managed_requirement_status_description", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("managed_requirement_status_id"),
    )
    op.create_table(
        "lk_managed_requirement_type",
        sa.Column("managed_requirement_type_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("managed_requirement_type_description", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("managed_requirement_type_id"),
    )
    op.create_table(
        "managed_requirement",
        sa.Column("managed_requirement_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("claim_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("respondent_user_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("fineos_managed_requirement_id", sa.Text(), nullable=False),
        sa.Column("follow_up_date", sa.Date(), nullable=True),
        sa.Column("responded_at", sa.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("managed_requirement_status_id", sa.Integer(), nullable=False),
        sa.Column("managed_requirement_category_id", sa.Integer(), nullable=False),
        sa.Column("managed_requirement_type_id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["claim_id"], ["claim.claim_id"],),
        sa.ForeignKeyConstraint(
            ["managed_requirement_category_id"],
            ["lk_managed_requirement_category.managed_requirement_category_id"],
        ),
        sa.ForeignKeyConstraint(
            ["managed_requirement_status_id"],
            ["lk_managed_requirement_status.managed_requirement_status_id"],
        ),
        sa.ForeignKeyConstraint(
            ["managed_requirement_type_id"],
            ["lk_managed_requirement_type.managed_requirement_type_id"],
        ),
        sa.ForeignKeyConstraint(["respondent_user_id"], ["user.user_id"],),
        sa.PrimaryKeyConstraint("managed_requirement_id"),
        sa.UniqueConstraint("fineos_managed_requirement_id"),
    )
    op.create_index(
        op.f("ix_managed_requirement_claim_id"), "managed_requirement", ["claim_id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_managed_requirement_claim_id"), table_name="managed_requirement")
    op.drop_table("managed_requirement")
    op.drop_table("lk_managed_requirement_type")
    op.drop_table("lk_managed_requirement_status")
    op.drop_table("lk_managed_requirement_category")
    # ### end Alembic commands ###
