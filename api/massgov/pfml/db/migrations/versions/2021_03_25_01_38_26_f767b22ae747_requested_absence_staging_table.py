"""Requested absence staging table

Revision ID: f767b22ae747
Revises: d7b1fc15fefe
Create Date: 2021-03-25 01:38:26.939258

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "f767b22ae747"
down_revision = "d7b1fc15fefe"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "fineos_extract_vbi_requested_absence",
        sa.Column("vbi_requested_absence_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("notification_casenumber", sa.Text(), nullable=True),
        sa.Column("absence_casenumber", sa.Text(), nullable=True),
        sa.Column("absence_casetypename", sa.Text(), nullable=True),
        sa.Column("absence_casestatus", sa.Text(), nullable=True),
        sa.Column("absence_caseowner", sa.Text(), nullable=True),
        sa.Column("absence_casecreationdate", sa.Text(), nullable=True),
        sa.Column("absence_caselastupdatedate", sa.Text(), nullable=True),
        sa.Column("absence_intakesource", sa.Text(), nullable=True),
        sa.Column("absence_notifiedby", sa.Text(), nullable=True),
        sa.Column("employee_customerno", sa.Text(), nullable=True),
        sa.Column("employee_manager_customerno", sa.Text(), nullable=True),
        sa.Column("employee_addtl_mngr_customerno", sa.Text(), nullable=True),
        sa.Column("employer_customerno", sa.Text(), nullable=True),
        sa.Column("employer_name", sa.Text(), nullable=True),
        sa.Column("employment_classid", sa.Text(), nullable=True),
        sa.Column("employment_indexid", sa.Text(), nullable=True),
        sa.Column("leaverequest_id", sa.Text(), nullable=True),
        sa.Column("leaverequest_notificationdate", sa.Text(), nullable=True),
        sa.Column("leaverequest_lastupdatedate", sa.Text(), nullable=True),
        sa.Column("leaverequest_originalrequest", sa.Text(), nullable=True),
        sa.Column("leaverequest_decision", sa.Text(), nullable=True),
        sa.Column("leaverequest_diagnosis", sa.Text(), nullable=True),
        sa.Column("absencereason_classid", sa.Text(), nullable=True),
        sa.Column("absencereason_indexid", sa.Text(), nullable=True),
        sa.Column("absencereason_name", sa.Text(), nullable=True),
        sa.Column("absencereason_qualifier1", sa.Text(), nullable=True),
        sa.Column("absencereason_qualifier2", sa.Text(), nullable=True),
        sa.Column("absencereason_coverage", sa.Text(), nullable=True),
        sa.Column("primary_relationship_name", sa.Text(), nullable=True),
        sa.Column("primary_relationship_qual1", sa.Text(), nullable=True),
        sa.Column("primary_relationship_qual2", sa.Text(), nullable=True),
        sa.Column("primary_relationship_cover", sa.Text(), nullable=True),
        sa.Column("secondary_relationship_name", sa.Text(), nullable=True),
        sa.Column("secondary_relationship_qual1", sa.Text(), nullable=True),
        sa.Column("secondary_relationship_qual2", sa.Text(), nullable=True),
        sa.Column("secondary_relationship_cover", sa.Text(), nullable=True),
        sa.Column("absenceperiod_classid", sa.Text(), nullable=True),
        sa.Column("absenceperiod_indexid", sa.Text(), nullable=True),
        sa.Column("absenceperiod_type", sa.Text(), nullable=True),
        sa.Column("absenceperiod_status", sa.Text(), nullable=True),
        sa.Column("absenceperiod_start", sa.Text(), nullable=True),
        sa.Column("absenceperiod_end", sa.Text(), nullable=True),
        sa.Column("episode_frequency_count", sa.Text(), nullable=True),
        sa.Column("episode_frequency_period", sa.Text(), nullable=True),
        sa.Column("episodic_frequency_period_unit", sa.Text(), nullable=True),
        sa.Column("episode_duration", sa.Text(), nullable=True),
        sa.Column("episodic_duration_unit", sa.Text(), nullable=True),
        sa.Column("reference_file_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("fineos_extract_import_log_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["fineos_extract_import_log_id"], ["import_log.import_log_id"]),
        sa.ForeignKeyConstraint(["reference_file_id"], ["reference_file.reference_file_id"]),
        sa.PrimaryKeyConstraint("vbi_requested_absence_id"),
    )
    op.create_index(
        op.f("ix_fineos_extract_vbi_requested_absence_fineos_extract_import_log_id"),
        "fineos_extract_vbi_requested_absence",
        ["fineos_extract_import_log_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_fineos_extract_vbi_requested_absence_reference_file_id"),
        "fineos_extract_vbi_requested_absence",
        ["reference_file_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_fineos_extract_vbi_requested_absence_reference_file_id"),
        table_name="fineos_extract_vbi_requested_absence",
    )
    op.drop_index(
        op.f("ix_fineos_extract_vbi_requested_absence_fineos_extract_import_log_id"),
        table_name="fineos_extract_vbi_requested_absence",
    )
    op.drop_table("fineos_extract_vbi_requested_absence")
    # ### end Alembic commands ###
