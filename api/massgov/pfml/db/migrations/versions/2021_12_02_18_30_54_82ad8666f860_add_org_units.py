"""Add Org Units

Revision ID: 82ad8666f860
Revises: 2ef7a3835814
Create Date: 2021-11-24 21:33:30.454241

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "82ad8666f860"
down_revision = "62daadb5a349"
branch_labels = None
depends_on = None


def upgrade():
    # The primary key was never re-added in https://lwd.atlassian.net/browse/EMPLOYER-523
    # which prevents the foreign key reference.
    op.execute(
        "ALTER TABLE link_user_leave_administrator ADD CONSTRAINT user_leave_administrator_id_pk PRIMARY KEY (user_leave_administrator_id)"
    )
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "link_user_leave_administrator_org_unit",
        sa.Column("user_leave_administrator_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("organization_unit_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["organization_unit_id"], ["organization_unit.organization_unit_id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_leave_administrator_id"],
            ["link_user_leave_administrator.user_leave_administrator_id"],
        ),
        sa.PrimaryKeyConstraint("user_leave_administrator_id", "organization_unit_id"),
    )
    op.add_column(
        "application",
        sa.Column("organization_unit_id", postgresql.UUID(as_uuid=True), nullable=True),
    )
    op.add_column("application", sa.Column("organization_unit_selection", sa.Text(), nullable=True))
    op.create_foreign_key(
        "application_org_unit_fk",
        "application",
        "organization_unit",
        ["organization_unit_id"],
        ["organization_unit_id"],
    )
    op.add_column(
        "claim", sa.Column("organization_unit_id", postgresql.UUID(as_uuid=True), nullable=True)
    )
    op.create_foreign_key(
        "claim_org_unit_fk",
        "claim",
        "organization_unit",
        ["organization_unit_id"],
        ["organization_unit_id"],
    )
    # Optimization for ApplicationResponse returning organization units
    op.create_index(
        op.f("ix_dua_employee_demographics_employer_fein"),
        "dua_employee_demographics",
        ["employer_fein"],
        unique=False,
    )
    op.create_index(
        op.f("ix_dua_employee_demographics_employer_reporting_unit_number"),
        "dua_employee_demographics",
        ["employer_reporting_unit_number"],
        unique=False,
    )
    op.create_index(
        op.f("ix_dua_employee_demographics_fineos_customer_number"),
        "dua_employee_demographics",
        ["fineos_customer_number"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("claim_org_unit_fk", "claim", type_="foreignkey")
    op.drop_column("claim", "organization_unit_id")
    op.drop_constraint("application_org_unit_fk", "application", type_="foreignkey")
    op.drop_column("application", "organization_unit_selection")
    op.drop_column("application", "organization_unit_id")
    op.drop_table("link_user_leave_administrator_org_unit")
    op.drop_index(
        op.f("ix_dua_employee_demographics_fineos_customer_number"),
        table_name="dua_employee_demographics",
    )
    op.drop_index(
        op.f("ix_dua_employee_demographics_employer_reporting_unit_number"),
        table_name="dua_employee_demographics",
    )
    op.drop_index(
        op.f("ix_dua_employee_demographics_employer_fein"), table_name="dua_employee_demographics"
    )
    # ### end Alembic commands ###
    op.execute(
        "ALTER TABLE link_user_leave_administrator DROP CONSTRAINT user_leave_administrator_id_pk"
    )
