"""API-246 1 of 2. Add user.sub_id

Revision ID: 123791eac80e
Revises: 13eb397da2f3
Create Date: 2021-06-08 15:33:25.133485

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "123791eac80e"
down_revision = "f9b52efbafd9"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("user", sa.Column("sub_id", sa.Text(), nullable=True))
    op.create_index(op.f("ix_user_sub_id"), "user", ["sub_id"], unique=True)

    op.execute(
        """
        CREATE OR REPLACE FUNCTION copyToSubId() RETURNS TRIGGER AS $func$
        BEGIN
            IF NEW.sub_id IS NULL AND NEW.active_directory_id IS NULL THEN
                RAISE EXCEPTION 'Attempted to create/modify user % without any integration id', NEW.user_id;
            ELSIF NEW.sub_id IS NULL THEN
                NEW.sub_id := NEW.active_directory_id;
            ELSIF NEW.active_directory_id IS NULL THEN
                NEW.active_directory_id := NEW.sub_id;
            END IF;
            RETURN NEW;
        END
        $func$ LANGUAGE plpgsql;

        CREATE TRIGGER copy_activedirectoryid_to_subid
        BEFORE INSERT OR UPDATE ON "user"
        FOR EACH ROW
        WHEN (NEW.sub_id IS NULL OR NEW.active_directory_id IS NULL)
        EXECUTE FUNCTION copyToSubId();

        UPDATE "user"
        SET sub_id = active_directory_id;
        """
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(
        """
        DROP TRIGGER copy_activedirectoryid_to_subid ON "user";
        DROP FUNCTION copyToSubId;

        UPDATE "user"
        SET active_directory_id = sub_id
        WHERE active_directory_id IS NULL AND sub_id IS NOT NULL;
        """
    )

    op.drop_index(op.f("ix_user_sub_id"), table_name="user")
    op.drop_column("user", "sub_id")
    # ### end Alembic commands ###
