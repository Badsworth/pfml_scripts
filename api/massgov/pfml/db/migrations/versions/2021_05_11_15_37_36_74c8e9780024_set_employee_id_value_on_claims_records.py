"""Set employee_id value on claims records

Revision ID: 74c8e9780024
Revises: a654bf03da3f
Create Date: 2021-05-11 15:37:36.275262

"""
import datetime

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

from massgov.pfml.util.logging import logger

# revision identifiers, used by Alembic.
revision = "74c8e9780024"
down_revision = "a654bf03da3f"
branch_labels = None
depends_on = None


def upgrade():
    connection = op.get_bind()
    claims = sa.Table(
        "claim",
        sa.MetaData(),
        sa.Column("claim_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("employee_id", postgresql.UUID(as_uuid=True), nullable=True),
    )

    # Unique log identifier for this invocation of the migration
    migration_tag = f"set_employee_id_on_claims-{datetime.datetime.now()}"

    # First get all claims that have a null employee_id
    null_employee_claims_query = connection.execute(
        sa.select([claims.c.claim_id]).where(claims.c.employee_id == None)  # noqa: E711
    )
    null_employee_claim_ids = set([row.claim_id for row in null_employee_claims_query.fetchall()])
    logger.info(
        "Starting run of set employee id on claims migration",
        extra={
            "migration_tag": migration_tag,
            "total_null_employee_claims": len(null_employee_claim_ids),
        },
    )

    update_employee_ids_query = """WITH q AS (
        SELECT c.claim_id, ee.employee_id
        FROM claim c
        JOIN application app ON app.claim_id = c.claim_id
        JOIN employee ee ON ee.tax_identifier_id = app.tax_identifier_id
        WHERE c.employee_id IS NULL
    )
    UPDATE claim c
    SET employee_id = q.employee_id
    FROM q
    WHERE c.claim_id = q.claim_id"""
    connection.execute(update_employee_ids_query)

    null_employee_claims_query = connection.execute(
        sa.select([claims.c.claim_id]).where(claims.c.employee_id == None)  # noqa: E711
    )
    null_employee_claim_ids = set([row.claim_id for row in null_employee_claims_query.fetchall()])
    logger.info(
        "Finished run of set employee id on claims migration",
        extra={
            "migration_tag": migration_tag,
            "total_null_employee_claims": len(null_employee_claim_ids),
        },
    )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
