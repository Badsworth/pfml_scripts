"""add previous leaves

Revision ID: fe1b90dbb320
Revises: a113c523fedf
Create Date: 2021-05-02 04:22:24.886559

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.sql import column, table

# revision identifiers, used by Alembic.
revision = "fe1b90dbb320"
down_revision = "a113c523fedf"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "application", sa.Column("has_previous_leaves_other_reason", sa.Boolean(), nullable=True)
    )
    op.add_column(
        "application", sa.Column("has_previous_leaves_same_reason", sa.Boolean(), nullable=True)
    )
    op.add_column(
        "employer_benefit", sa.Column("is_full_salary_continuous", sa.Boolean(), nullable=True)
    )
    op.add_column("previous_leave", sa.Column("leave_minutes", sa.Integer(), nullable=True))
    op.add_column("previous_leave", sa.Column("type", sa.Text(), nullable=True))
    op.add_column(
        "previous_leave", sa.Column("worked_per_week_minutes", sa.Integer(), nullable=True)
    )

    previous_leave = table("previous_leave", column("type", sa.Text))

    # previous_leave must have a type 'same_reason' or 'other_reason'
    # any previous_leaves before this migration could be for either reason
    # we're flagging those records as deprecated
    op.execute(
        previous_leave.update()
        .where(previous_leave.c.type == None)  # noqa: E711
        .values({"type": "deprecated"})
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("previous_leave", "worked_per_week_minutes")
    op.drop_column("previous_leave", "type")
    op.drop_column("previous_leave", "leave_minutes")
    op.drop_column("employer_benefit", "is_full_salary_continuous")
    op.drop_column("application", "has_previous_leaves_same_reason")
    op.drop_column("application", "has_previous_leaves_other_reason")
    # ### end Alembic commands ###
