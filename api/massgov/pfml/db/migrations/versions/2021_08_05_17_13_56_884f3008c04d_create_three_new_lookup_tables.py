"""Create three new lookup tables

Revision ID: 884f3008c04d
Revises: b09e9c9cfd01
Create Date: 2021-08-05 17:13:56.753365

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "884f3008c04d"
down_revision = "b09e9c9cfd01"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "lk_absence_period_type",
        sa.Column("absence_period_type_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("absence_period_type_description", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("absence_period_type_id"),
    )
    op.create_table(
        "lk_absence_reason",
        sa.Column("absence_reason_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("absence_reason_description", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("absence_reason_id"),
    )
    op.create_table(
        "lk_absence_reason_qualifier_one",
        sa.Column(
            "absence_reason_qualifier_one_id", sa.Integer(), autoincrement=True, nullable=False
        ),
        sa.Column("absence_reason_qualifier_one_description", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("absence_reason_qualifier_one_id"),
    )
    op.create_table(
        "lk_absence_reason_qualifier_two",
        sa.Column(
            "absence_reason_qualifier_two_id", sa.Integer(), autoincrement=True, nullable=False
        ),
        sa.Column("absence_reason_qualifier_two_description", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("absence_reason_qualifier_two_id"),
    )
    op.add_column(
        "absence_period", sa.Column("absence_period_type_id", sa.Integer(), nullable=False)
    )
    op.add_column("absence_period", sa.Column("absence_reason_id", sa.Integer(), nullable=False))
    op.add_column(
        "absence_period", sa.Column("absence_reason_qualifier_one_id", sa.Integer(), nullable=True)
    )
    op.add_column(
        "absence_period", sa.Column("absence_reason_qualifier_two_id", sa.Integer(), nullable=True)
    )
    op.drop_constraint("absence_period_claim_type_id_fkey", "absence_period", type_="foreignkey")
    op.create_foreign_key(
        None,
        "absence_period",
        "lk_absence_reason_qualifier_one",
        ["absence_reason_qualifier_one_id"],
        ["absence_reason_qualifier_one_id"],
    )
    op.create_foreign_key(
        None,
        "absence_period",
        "lk_absence_reason_qualifier_two",
        ["absence_reason_qualifier_two_id"],
        ["absence_reason_qualifier_two_id"],
    )
    op.create_foreign_key(
        None, "absence_period", "lk_absence_reason", ["absence_reason_id"], ["absence_reason_id"]
    )
    op.create_foreign_key(
        None,
        "absence_period",
        "lk_absence_period_type",
        ["absence_period_type_id"],
        ["absence_period_type_id"],
    )
    op.drop_column("absence_period", "claim_type_id")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "absence_period",
        sa.Column("claim_type_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "absence_period", type_="foreignkey")  # type: ignore
    op.drop_constraint(None, "absence_period", type_="foreignkey")  # type: ignore
    op.drop_constraint(None, "absence_period", type_="foreignkey")  # type: ignore
    op.drop_constraint(None, "absence_period", type_="foreignkey")  # type: ignore
    op.create_foreign_key(
        "absence_period_claim_type_id_fkey",
        "absence_period",
        "lk_claim_type",
        ["claim_type_id"],
        ["claim_type_id"],
    )
    op.drop_column("absence_period", "absence_reason_qualifier_two_id")
    op.drop_column("absence_period", "absence_reason_qualifier_one_id")
    op.drop_column("absence_period", "absence_reason_id")
    op.drop_column("absence_period", "absence_period_type_id")
    op.drop_table("lk_absence_reason_qualifier_two")
    op.drop_table("lk_absence_reason_qualifier_one")
    op.drop_table("lk_absence_reason")
    op.drop_table("lk_absence_period_type")
    # ### end Alembic commands ###
