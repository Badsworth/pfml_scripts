"""Adding all new 1099 tables

Revision ID: 973ae2445d15
Revises: 58551964cd6e
Create Date: 2021-09-27 15:51:59.940535

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "973ae2445d15"
down_revision = "58551964cd6e"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "pfml_1099_batch",
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("pfml_1099_batch_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("tax_year", sa.Integer(), nullable=False),
        sa.Column("batch_run_date", sa.Date(), nullable=False),
        sa.Column("correction_ind", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("pfml_1099_batch_id"),
    )
    op.create_table(
        "pfml_1099",
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("pfml_1099_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("pfml_1099_batch_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("tax_year", sa.Integer(), nullable=False),
        sa.Column("employee_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("tax_identifier_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("first_name", sa.Text(), nullable=False),
        sa.Column("last_name", sa.Text(), nullable=False),
        sa.Column("address_line_1", sa.Text(), nullable=False),
        sa.Column("address_line_2", sa.Text(), nullable=False),
        sa.Column("city", sa.Text(), nullable=False),
        sa.Column("state", sa.Text(), nullable=False),
        sa.Column("zip", sa.Text(), nullable=False),
        sa.Column("gross_payments", sa.Numeric(), nullable=False),
        sa.Column("state_tax_withholdings", sa.Numeric(), nullable=False),
        sa.Column("federal_tax_withholdings", sa.Numeric(), nullable=False),
        sa.Column("overpayment_repayments", sa.Numeric(), nullable=False),
        sa.Column("correction_ind", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(["pfml_1099_batch_id"], ["pfml_1099_batch.pfml_1099_batch_id"],),
        sa.ForeignKeyConstraint(["employee_id"], ["employee.employee_id"],),
        sa.PrimaryKeyConstraint("pfml_1099_id"),
    )
    op.create_index(
        op.f("ix_pfml_1099_pfml_1009_batch_id"), "pfml_1099", ["pfml_1099_batch_id"], unique=False
    )
    op.create_index(op.f("ix_pfml_1099_employee_id"), "pfml_1099", ["employee_id"], unique=False)
    op.create_table(
        "pfml_1099_mmars_payment",
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("pfml_1099_mmars_payment_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("pfml_1099_batch_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("mmars_payment_id", sa.Integer(), nullable=False),
        sa.Column("employee_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("payment_amount", sa.Numeric(), nullable=False),
        sa.Column("payment_date", sa.Date(), nullable=False),
        sa.ForeignKeyConstraint(["pfml_1099_batch_id"], ["pfml_1099_batch.pfml_1099_batch_id"],),
        sa.ForeignKeyConstraint(["employee_id"], ["employee.employee_id"],),
        sa.PrimaryKeyConstraint("pfml_1099_mmars_payment_id"),
    )
    op.create_index(
        op.f("ix_pfml_1099_mmars_payment_pfml_1009_batch_id"),
        "pfml_1099_mmars_payment",
        ["pfml_1099_batch_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_pfml_1099_mmars_payment_employee_id"),
        "pfml_1099_mmars_payment",
        ["employee_id"],
        unique=False,
    )
    op.create_table(
        "pfml_1099_payment",
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("pfml_1099_payment_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("pfml_1099_batch_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("payment_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("claim_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("employee_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("payment_amount", sa.Numeric(), nullable=False),
        sa.Column("payment_date", sa.Date(), nullable=False),
        sa.ForeignKeyConstraint(["pfml_1099_batch_id"], ["pfml_1099_batch.pfml_1099_batch_id"],),
        sa.ForeignKeyConstraint(["payment_id"], ["payment.payment_id"],),
        sa.ForeignKeyConstraint(["claim_id"], ["claim.claim_id"],),
        sa.ForeignKeyConstraint(["employee_id"], ["employee.employee_id"],),
        sa.PrimaryKeyConstraint("pfml_1099_payment_id"),
    )
    op.create_index(
        op.f("ix_pfml_1099_payment_pfml_1009_batch_id"),
        "pfml_1099_payment",
        ["pfml_1099_batch_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_pfml_1099_payment_payment_id"), "pfml_1099_payment", ["payment_id"], unique=False
    )
    op.create_index(
        op.f("ix_pfml_1099_payment_claim_id"), "pfml_1099_payment", ["claim_id"], unique=False
    )
    op.create_index(
        op.f("ix_pfml_1099_payment_employee_id"), "pfml_1099_payment", ["employee_id"], unique=False
    )
    op.create_table(
        "pfml_1099_refund",
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("pfml_1099_refund_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("pfml_1099_batch_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("payment_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("employee_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("refund_amount", sa.Numeric(), nullable=False),
        sa.Column("refund_date", sa.Date(), nullable=False),
        sa.ForeignKeyConstraint(["pfml_1099_batch_id"], ["pfml_1099_batch.pfml_1099_batch_id"],),
        sa.ForeignKeyConstraint(["payment_id"], ["payment.payment_id"],),
        sa.ForeignKeyConstraint(["employee_id"], ["employee.employee_id"],),
        sa.PrimaryKeyConstraint("pfml_1099_refund_id"),
    )
    op.create_index(
        op.f("ix_pfml_1099_refund_pfml_1009_batch_id"),
        "pfml_1099_refund",
        ["pfml_1099_batch_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_pfml_1099_refund_payment_id"), "pfml_1099_refund", ["payment_id"], unique=False
    )
    op.create_index(
        op.f("ix_pfml_1099_refund_employee_id"), "pfml_1099_refund", ["employee_id"], unique=False
    )
    op.create_table(
        "pfml_1099_withholding",
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("pfml_1099_withholding_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("pfml_1099_batch_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("payment_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("claim_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("employee_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("withholding_amount", sa.Numeric(), nullable=False),
        sa.Column("withholding_date", sa.Date(), nullable=False),
        sa.ForeignKeyConstraint(["pfml_1099_batch_id"], ["pfml_1099_batch.pfml_1099_batch_id"],),
        sa.ForeignKeyConstraint(["payment_id"], ["payment.payment_id"],),
        sa.ForeignKeyConstraint(["claim_id"], ["claim.claim_id"],),
        sa.ForeignKeyConstraint(["employee_id"], ["employee.employee_id"],),
        sa.PrimaryKeyConstraint("pfml_1099_withholding_id"),
    )
    op.create_index(
        op.f("ix_pfml_1099_withholding_pfml_1009_batch_id"),
        "pfml_1099_withholding",
        ["pfml_1099_batch_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_pfml_1099_withholding_payment_id"),
        "pfml_1099_withholding",
        ["payment_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_pfml_1099_withholding_claim_id"),
        "pfml_1099_withholding",
        ["claim_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_pfml_1099_withholding_employee_id"),
        "pfml_1099_withholding",
        ["employee_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_pfml_1099_withholding_employee_id"), table_name="pfml_1099_withholding")
    op.drop_table("pfml_1099_withholding")
    op.drop_index(op.f("ix_pfml_1099_refund_employee_id"), table_name="pfml_1099_refund")
    op.drop_table("pfml_1099_refund")
    op.drop_index(op.f("ix_pfml_1099_payment_employee_id"), table_name="pfml_1099_payment")
    op.drop_table("pfml_1099_payment")
    op.drop_index(
        op.f("ix_pfml_1099_mmars_payment_employee_id"), table_name="pfml_1099_mmars_payment"
    )
    op.drop_table("pfml_1099_mmars_payment")
    op.drop_index(op.f("ix_pfml_1099_employee_id"), table_name="pfml_1099")
    op.drop_table("pfml_1099")
    op.drop_table("pfml_1099_batch")
    # ### end Alembic commands ###
