"""add prefix to fineos export staging tables

Revision ID: b6f8c3f3b282
Revises: 9c6bc7a3c1cb
Create Date: 2021-03-11 16:50:40.175095

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "b6f8c3f3b282"
down_revision = "9c6bc7a3c1cb"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "fineos_extract_employee_feed",
        sa.Column("employee_feed_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("c", sa.Text(), nullable=True),
        sa.Column("i", sa.Text(), nullable=True),
        sa.Column("lastupdatedate", sa.Text(), nullable=True),
        sa.Column("firstnames", sa.Text(), nullable=True),
        sa.Column("initials", sa.Text(), nullable=True),
        sa.Column("lastname", sa.Text(), nullable=True),
        sa.Column("placeofbirth", sa.Text(), nullable=True),
        sa.Column("dateofbirth", sa.Text(), nullable=True),
        sa.Column("dateofdeath", sa.Text(), nullable=True),
        sa.Column("isdeceased", sa.Text(), nullable=True),
        sa.Column("realdob", sa.Text(), nullable=True),
        sa.Column("title", sa.Text(), nullable=True),
        sa.Column("nationality", sa.Text(), nullable=True),
        sa.Column("countryofbirt", sa.Text(), nullable=True),
        sa.Column("sex", sa.Text(), nullable=True),
        sa.Column("maritalstatus", sa.Text(), nullable=True),
        sa.Column("disabled", sa.Text(), nullable=True),
        sa.Column("natinsno", sa.Text(), nullable=True),
        sa.Column("customerno", sa.Text(), nullable=True),
        sa.Column("referenceno", sa.Text(), nullable=True),
        sa.Column("identificatio", sa.Text(), nullable=True),
        sa.Column("unverified", sa.Text(), nullable=True),
        sa.Column("staff", sa.Text(), nullable=True),
        sa.Column("groupclient", sa.Text(), nullable=True),
        sa.Column("securedclient", sa.Text(), nullable=True),
        sa.Column("selfserviceen", sa.Text(), nullable=True),
        sa.Column("sourcesystem", sa.Text(), nullable=True),
        sa.Column("c_ocprtad_correspondenc", sa.Text(), nullable=True),
        sa.Column("i_ocprtad_correspondenc", sa.Text(), nullable=True),
        sa.Column("extconsent", sa.Text(), nullable=True),
        sa.Column("extconfirmflag", sa.Text(), nullable=True),
        sa.Column("extmassid", sa.Text(), nullable=True),
        sa.Column("extoutofstateid", sa.Text(), nullable=True),
        sa.Column("preferredcont", sa.Text(), nullable=True),
        sa.Column("c_bnkbrnch_bankbranch", sa.Text(), nullable=True),
        sa.Column("i_bnkbrnch_bankbranch", sa.Text(), nullable=True),
        sa.Column("preferred_contact_method", sa.Text(), nullable=True),
        sa.Column("defpaymentpref", sa.Text(), nullable=True),
        sa.Column("payment_preference", sa.Text(), nullable=True),
        sa.Column("paymentmethod", sa.Text(), nullable=True),
        sa.Column("paymentaddres", sa.Text(), nullable=True),
        sa.Column("address1", sa.Text(), nullable=True),
        sa.Column("address2", sa.Text(), nullable=True),
        sa.Column("address3", sa.Text(), nullable=True),
        sa.Column("address4", sa.Text(), nullable=True),
        sa.Column("address5", sa.Text(), nullable=True),
        sa.Column("address6", sa.Text(), nullable=True),
        sa.Column("address7", sa.Text(), nullable=True),
        sa.Column("postcode", sa.Text(), nullable=True),
        sa.Column("country", sa.Text(), nullable=True),
        sa.Column("verifications", sa.Text(), nullable=True),
        sa.Column("accountname", sa.Text(), nullable=True),
        sa.Column("accountno", sa.Text(), nullable=True),
        sa.Column("bankcode", sa.Text(), nullable=True),
        sa.Column("sortcode", sa.Text(), nullable=True),
        sa.Column("accounttype", sa.Text(), nullable=True),
        sa.Column("active_absence_flag", sa.Text(), nullable=True),
        sa.Column("reference_file_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["reference_file_id"], ["reference_file.reference_file_id"]),
        sa.PrimaryKeyConstraint("employee_feed_id"),
    )
    op.create_index(
        op.f("ix_fineos_extract_employee_feed_reference_file_id"),
        "fineos_extract_employee_feed",
        ["reference_file_id"],
        unique=False,
    )
    op.create_table(
        "fineos_extract_vbi_requested_absence_som",
        sa.Column("vbi_requested_absence_som_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("notification_casenumber", sa.Text(), nullable=True),
        sa.Column("absence_casenumber", sa.Text(), nullable=True),
        sa.Column("absence_casetypename", sa.Text(), nullable=True),
        sa.Column("absence_casestatus", sa.Text(), nullable=True),
        sa.Column("absence_caseowner", sa.Text(), nullable=True),
        sa.Column("absence_casecreationdate", sa.Text(), nullable=True),
        sa.Column("absence_caselastupdatedate", sa.Text(), nullable=True),
        sa.Column("absence_intakesource", sa.Text(), nullable=True),
        sa.Column("absence_notifiedby", sa.Text(), nullable=True),
        sa.Column("employee_customerno", sa.Text(), nullable=True),
        sa.Column("employee_manager_customerno", sa.Text(), nullable=True),
        sa.Column("employee_addtl_mngr_customerno", sa.Text(), nullable=True),
        sa.Column("employer_customerno", sa.Text(), nullable=True),
        sa.Column("employer_name", sa.Text(), nullable=True),
        sa.Column("employment_classid", sa.Text(), nullable=True),
        sa.Column("employment_indexid", sa.Text(), nullable=True),
        sa.Column("leaverequest_id", sa.Text(), nullable=True),
        sa.Column("leaverequest_notificationdate", sa.Text(), nullable=True),
        sa.Column("leaverequest_lastupdatedate", sa.Text(), nullable=True),
        sa.Column("leaverequest_originalrequest", sa.Text(), nullable=True),
        sa.Column("leaverequest_evidenceresulttype", sa.Text(), nullable=True),
        sa.Column("leaverequest_decision", sa.Text(), nullable=True),
        sa.Column("leaverequest_diagnosis", sa.Text(), nullable=True),
        sa.Column("absencereason_classid", sa.Text(), nullable=True),
        sa.Column("absencereason_indexid", sa.Text(), nullable=True),
        sa.Column("absencereason_name", sa.Text(), nullable=True),
        sa.Column("absencereason_qualifier1", sa.Text(), nullable=True),
        sa.Column("absencereason_qualifier2", sa.Text(), nullable=True),
        sa.Column("absencereason_coverage", sa.Text(), nullable=True),
        sa.Column("primary_relationship_name", sa.Text(), nullable=True),
        sa.Column("primary_relationship_qual1", sa.Text(), nullable=True),
        sa.Column("primary_relationship_qual2", sa.Text(), nullable=True),
        sa.Column("primary_relationship_cover", sa.Text(), nullable=True),
        sa.Column("secondary_relationship_name", sa.Text(), nullable=True),
        sa.Column("secondary_relationship_qual1", sa.Text(), nullable=True),
        sa.Column("secondary_relationship_qual2", sa.Text(), nullable=True),
        sa.Column("secondary_relationship_cover", sa.Text(), nullable=True),
        sa.Column("absenceperiod_classid", sa.Text(), nullable=True),
        sa.Column("absenceperiod_indexid", sa.Text(), nullable=True),
        sa.Column("absenceperiod_type", sa.Text(), nullable=True),
        sa.Column("absenceperiod_status", sa.Text(), nullable=True),
        sa.Column("absenceperiod_start", sa.Text(), nullable=True),
        sa.Column("absenceperiod_end", sa.Text(), nullable=True),
        sa.Column("episode_frequency_count", sa.Text(), nullable=True),
        sa.Column("episode_frequency_period", sa.Text(), nullable=True),
        sa.Column("episodic_frequency_period_unit", sa.Text(), nullable=True),
        sa.Column("episode_duration", sa.Text(), nullable=True),
        sa.Column("episodic_duration_unit", sa.Text(), nullable=True),
        sa.Column("reference_file_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["reference_file_id"], ["reference_file.reference_file_id"]),
        sa.PrimaryKeyConstraint("vbi_requested_absence_som_id"),
    )
    op.create_index(
        op.f("ix_fineos_extract_vbi_requested_absence_som_reference_file_id"),
        "fineos_extract_vbi_requested_absence_som",
        ["reference_file_id"],
        unique=False,
    )
    op.create_table(
        "fineos_extract_vpei",
        sa.Column("vpei_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("c", sa.Text(), nullable=True),
        sa.Column("i", sa.Text(), nullable=True),
        sa.Column("lastupdatedate", sa.Text(), nullable=True),
        sa.Column("c_osuser_updatedby", sa.Text(), nullable=True),
        sa.Column("i_osuser_updatedby", sa.Text(), nullable=True),
        sa.Column("addressline1", sa.Text(), nullable=True),
        sa.Column("addressline2", sa.Text(), nullable=True),
        sa.Column("addressline3", sa.Text(), nullable=True),
        sa.Column("addressline4", sa.Text(), nullable=True),
        sa.Column("addressline5", sa.Text(), nullable=True),
        sa.Column("addressline6", sa.Text(), nullable=True),
        sa.Column("addressline7", sa.Text(), nullable=True),
        sa.Column("advicetopay", sa.Text(), nullable=True),
        sa.Column("advicetopayov", sa.Text(), nullable=True),
        sa.Column("amalgamationc", sa.Text(), nullable=True),
        sa.Column("amount_monamt", sa.Text(), nullable=True),
        sa.Column("amount_moncur", sa.Text(), nullable=True),
        sa.Column("checkcutting", sa.Text(), nullable=True),
        sa.Column("confirmedbyus", sa.Text(), nullable=True),
        sa.Column("confirmeduid", sa.Text(), nullable=True),
        sa.Column("contractref", sa.Text(), nullable=True),
        sa.Column("correspcountr", sa.Text(), nullable=True),
        sa.Column("currency", sa.Text(), nullable=True),
        sa.Column("dateinterface", sa.Text(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("employeecontr", sa.Text(), nullable=True),
        sa.Column("eventeffectiv", sa.Text(), nullable=True),
        sa.Column("eventreason", sa.Text(), nullable=True),
        sa.Column("eventtype", sa.Text(), nullable=True),
        sa.Column("extractiondat", sa.Text(), nullable=True),
        sa.Column("grosspaymenta_monamt", sa.Text(), nullable=True),
        sa.Column("grosspaymenta_moncur", sa.Text(), nullable=True),
        sa.Column("insuredreside", sa.Text(), nullable=True),
        sa.Column("nametoprinton", sa.Text(), nullable=True),
        sa.Column("nominatedpaye", sa.Text(), nullable=True),
        sa.Column("nompayeecusto", sa.Text(), nullable=True),
        sa.Column("nompayeedob", sa.Text(), nullable=True),
        sa.Column("nompayeefulln", sa.Text(), nullable=True),
        sa.Column("nompayeesocnu", sa.Text(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("payeeaccountn", sa.Text(), nullable=True),
        sa.Column("payeeaccountt", sa.Text(), nullable=True),
        sa.Column("payeeaddress", sa.Text(), nullable=True),
        sa.Column("payeebankbran", sa.Text(), nullable=True),
        sa.Column("payeebankcode", sa.Text(), nullable=True),
        sa.Column("payeebankinst", sa.Text(), nullable=True),
        sa.Column("payeebanksort", sa.Text(), nullable=True),
        sa.Column("payeecorrespo", sa.Text(), nullable=True),
        sa.Column("payeecustomer", sa.Text(), nullable=True),
        sa.Column("payeedob", sa.Text(), nullable=True),
        sa.Column("payeefullname", sa.Text(), nullable=True),
        sa.Column("payeeidentifi", sa.Text(), nullable=True),
        sa.Column("payeesocnumbe", sa.Text(), nullable=True),
        sa.Column("paymentadd", sa.Text(), nullable=True),
        sa.Column("paymentadd1", sa.Text(), nullable=True),
        sa.Column("paymentadd2", sa.Text(), nullable=True),
        sa.Column("paymentadd3", sa.Text(), nullable=True),
        sa.Column("paymentadd4", sa.Text(), nullable=True),
        sa.Column("paymentadd5", sa.Text(), nullable=True),
        sa.Column("paymentadd6", sa.Text(), nullable=True),
        sa.Column("paymentadd7", sa.Text(), nullable=True),
        sa.Column("paymentaddcou", sa.Text(), nullable=True),
        sa.Column("paymentcorrst", sa.Text(), nullable=True),
        sa.Column("paymentdate", sa.Text(), nullable=True),
        sa.Column("paymentfreque", sa.Text(), nullable=True),
        sa.Column("paymentmethod", sa.Text(), nullable=True),
        sa.Column("paymentpostco", sa.Text(), nullable=True),
        sa.Column("paymentpremis", sa.Text(), nullable=True),
        sa.Column("paymenttrigge", sa.Text(), nullable=True),
        sa.Column("paymenttype", sa.Text(), nullable=True),
        sa.Column("paymethcurren", sa.Text(), nullable=True),
        sa.Column("postcode", sa.Text(), nullable=True),
        sa.Column("premisesno", sa.Text(), nullable=True),
        sa.Column("setupbyuserid", sa.Text(), nullable=True),
        sa.Column("setupbyuserna", sa.Text(), nullable=True),
        sa.Column("status", sa.Text(), nullable=True),
        sa.Column("statuseffecti", sa.Text(), nullable=True),
        sa.Column("statusreason", sa.Text(), nullable=True),
        sa.Column("stockno", sa.Text(), nullable=True),
        sa.Column("summaryeffect", sa.Text(), nullable=True),
        sa.Column("summarystatus", sa.Text(), nullable=True),
        sa.Column("transstatusda", sa.Text(), nullable=True),
        sa.Column("reference_file_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["reference_file_id"], ["reference_file.reference_file_id"]),
        sa.PrimaryKeyConstraint("vpei_id"),
    )
    op.create_index(
        op.f("ix_fineos_extract_vpei_reference_file_id"),
        "fineos_extract_vpei",
        ["reference_file_id"],
        unique=False,
    )
    op.create_table(
        "fineos_extract_vpei_claim_details",
        sa.Column("vpei_claim_details_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("c", sa.Text(), nullable=True),
        sa.Column("i", sa.Text(), nullable=True),
        sa.Column("lastupdatedate", sa.Text(), nullable=True),
        sa.Column("c_osuser_updatedby", sa.Text(), nullable=True),
        sa.Column("i_osuser_updatedby", sa.Text(), nullable=True),
        sa.Column("absencecasenu", sa.Text(), nullable=True),
        sa.Column("benefitrightt", sa.Text(), nullable=True),
        sa.Column("claimantage", sa.Text(), nullable=True),
        sa.Column("claimantcusto", sa.Text(), nullable=True),
        sa.Column("claimantdob", sa.Text(), nullable=True),
        sa.Column("claimantgende", sa.Text(), nullable=True),
        sa.Column("claimantname", sa.Text(), nullable=True),
        sa.Column("claimantrelto", sa.Text(), nullable=True),
        sa.Column("claimnumber", sa.Text(), nullable=True),
        sa.Column("diagcode2", sa.Text(), nullable=True),
        sa.Column("diagcode3", sa.Text(), nullable=True),
        sa.Column("diagcode4", sa.Text(), nullable=True),
        sa.Column("diagcode5", sa.Text(), nullable=True),
        sa.Column("employeeid", sa.Text(), nullable=True),
        sa.Column("eventcause", sa.Text(), nullable=True),
        sa.Column("incurreddate", sa.Text(), nullable=True),
        sa.Column("insuredaddres", sa.Text(), nullable=True),
        sa.Column("insuredaddrl1", sa.Text(), nullable=True),
        sa.Column("insuredaddrl2", sa.Text(), nullable=True),
        sa.Column("insuredaddrl3", sa.Text(), nullable=True),
        sa.Column("insuredaddrl4", sa.Text(), nullable=True),
        sa.Column("insuredaddrl5", sa.Text(), nullable=True),
        sa.Column("insuredaddrl6", sa.Text(), nullable=True),
        sa.Column("insuredaddrl7", sa.Text(), nullable=True),
        sa.Column("insuredage", sa.Text(), nullable=True),
        sa.Column("insuredcorcou", sa.Text(), nullable=True),
        sa.Column("insuredcorres", sa.Text(), nullable=True),
        sa.Column("insuredcustom", sa.Text(), nullable=True),
        sa.Column("insureddob", sa.Text(), nullable=True),
        sa.Column("insuredemploy", sa.Text(), nullable=True),
        sa.Column("insuredfullna", sa.Text(), nullable=True),
        sa.Column("insuredgender", sa.Text(), nullable=True),
        sa.Column("insuredpostco", sa.Text(), nullable=True),
        sa.Column("insuredpremis", sa.Text(), nullable=True),
        sa.Column("insuredretire", sa.Text(), nullable=True),
        sa.Column("insuredsocnum", sa.Text(), nullable=True),
        sa.Column("leaveplanid", sa.Text(), nullable=True),
        sa.Column("leaverequesti", sa.Text(), nullable=True),
        sa.Column("notifieddate", sa.Text(), nullable=True),
        sa.Column("payeeageatinc", sa.Text(), nullable=True),
        sa.Column("payeecaserole", sa.Text(), nullable=True),
        sa.Column("payeereltoins", sa.Text(), nullable=True),
        sa.Column("primarydiagno", sa.Text(), nullable=True),
        sa.Column("primarymedica", sa.Text(), nullable=True),
        sa.Column("diag2medicalc", sa.Text(), nullable=True),
        sa.Column("diag3medicalc", sa.Text(), nullable=True),
        sa.Column("diag4medicalc", sa.Text(), nullable=True),
        sa.Column("diag5medicalc", sa.Text(), nullable=True),
        sa.Column("peclassid", sa.Text(), nullable=True),
        sa.Column("peindexid", sa.Text(), nullable=True),
        sa.Column("dateinterface", sa.Text(), nullable=True),
        sa.Column("reference_file_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["reference_file_id"], ["reference_file.reference_file_id"]),
        sa.PrimaryKeyConstraint("vpei_claim_details_id"),
    )
    op.create_index(
        op.f("ix_fineos_extract_vpei_claim_details_reference_file_id"),
        "fineos_extract_vpei_claim_details",
        ["reference_file_id"],
        unique=False,
    )
    op.create_table(
        "fineos_extract_vpei_payment_details",
        sa.Column("vpei_payment_details_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("c", sa.Text(), nullable=True),
        sa.Column("i", sa.Text(), nullable=True),
        sa.Column("lastupdatedate", sa.Text(), nullable=True),
        sa.Column("c_osuser_updatedby", sa.Text(), nullable=True),
        sa.Column("i_osuser_updatedby", sa.Text(), nullable=True),
        sa.Column("benefiteffect", sa.Text(), nullable=True),
        sa.Column("benefitfinalp", sa.Text(), nullable=True),
        sa.Column("description_paymentdtls", sa.Text(), nullable=True),
        sa.Column("paymentendper", sa.Text(), nullable=True),
        sa.Column("paymentstartp", sa.Text(), nullable=True),
        sa.Column("balancingamou_monamt", sa.Text(), nullable=True),
        sa.Column("balancingamou_moncur", sa.Text(), nullable=True),
        sa.Column("businessnetbe_monamt", sa.Text(), nullable=True),
        sa.Column("businessnetbe_moncur", sa.Text(), nullable=True),
        sa.Column("duetype", sa.Text(), nullable=True),
        sa.Column("groupid", sa.Text(), nullable=True),
        sa.Column("peclassid", sa.Text(), nullable=True),
        sa.Column("peindexid", sa.Text(), nullable=True),
        sa.Column("claimdetailsclassid", sa.Text(), nullable=True),
        sa.Column("claimdetailsindexid", sa.Text(), nullable=True),
        sa.Column("dateinterface", sa.Text(), nullable=True),
        sa.Column("reference_file_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["reference_file_id"], ["reference_file.reference_file_id"]),
        sa.PrimaryKeyConstraint("vpei_payment_details_id"),
    )
    op.create_index(
        op.f("ix_fineos_extract_vpei_payment_details_reference_file_id"),
        "fineos_extract_vpei_payment_details",
        ["reference_file_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_fineos_extract_vpei_payment_details_reference_file_id"),
        table_name="fineos_extract_vpei_payment_details",
    )
    op.drop_table("fineos_extract_vpei_payment_details")
    op.drop_index(
        op.f("ix_fineos_extract_vpei_claim_details_reference_file_id"),
        table_name="fineos_extract_vpei_claim_details",
    )
    op.drop_table("fineos_extract_vpei_claim_details")
    op.drop_index(
        op.f("ix_fineos_extract_vpei_reference_file_id"), table_name="fineos_extract_vpei"
    )
    op.drop_table("fineos_extract_vpei")
    op.drop_index(
        op.f("ix_fineos_extract_vbi_requested_absence_som_reference_file_id"),
        table_name="fineos_extract_vbi_requested_absence_som",
    )
    op.drop_table("fineos_extract_vbi_requested_absence_som")
    op.drop_index(
        op.f("ix_fineos_extract_employee_feed_reference_file_id"),
        table_name="fineos_extract_employee_feed",
    )
    op.drop_table("fineos_extract_employee_feed")
    # ### end Alembic commands ###
