"""Set employee_id value on claims records

Revision ID: 89b58b9c6d17
Revises: a113c523fedf
Create Date: 2021-05-04 20:43:15.784837

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision = "89b58b9c6d17"
down_revision = "a113c523fedf"
branch_labels = None
depends_on = None


def upgrade():
    connection = op.get_bind()
    claims = sa.Table(
        "claim",
        sa.MetaData(),
        sa.Column("claim_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("employee_id", postgresql.UUID(as_uuid=True), nullable=True)
    )
    applications = sa.Table(
        "application",
        sa.MetaData(),
        sa.Column("application_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("claim_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("tax_identifier_id", postgresql.UUID(as_uuid=True), nullable=False),
    )
    employees = sa.Table(
        "employee",
        sa.MetaData(),
        sa.Column("employee_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("tax_identifier_id", postgresql.UUID(as_uuid=True), nullable=False),
    )

    # sa.select(claim_id).where(employee id == None)

    # maybe update claims table with marker for employee_id source
    # ### commands auto generated by Alembic - please adjust! ###
    # get all applications and claims where application.id == claim.id and claim.employee_id is null
    # get all applications and employees where application.tax_identifier == employee.tax_identified
    # for application_id in applications_claims_mapping:
    #   update claim.employee_id = applications_employees_mapping[application_id].employee_id

    pass
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # drop claims where source is employee_id
    # drop claims source
    pass
    # ### end Alembic commands ###
