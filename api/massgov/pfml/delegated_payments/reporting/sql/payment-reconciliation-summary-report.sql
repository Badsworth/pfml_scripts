-- PFML Payment Processing Reconciliation Report
WITH PAYMENT_BATCH_TRANSACTIONS AS (
    SELECT P.PAYMENT_ID, P.PERIOD_START_DATE, P.PERIOD_END_DATE, P.PAYMENT_DATE,  P.AMOUNT, 
           C.FINEOS_ABSENCE_ID, C.ABSENCE_PERIOD_START_DATE, C.ABSENCE_PERIOD_END_DATE,
           CT.CLAIM_TYPE_DESCRIPTION, E.FINEOS_CUSTOMER_NUMBER, FAS.ABSENCE_STATUS_DESCRIPTION,
           P.FINEOS_PEI_C_VALUE,  P.FINEOS_PEI_I_VALUE,  P.FINEOS_EXTRACTION_DATE,
           LAG(ST1.STATE_DESCRIPTION) OVER(PARTITION BY P.PAYMENT_ID ORDER BY SL.STARTED_AT) AS PRIOR_STATE,
           SL.OUTCOME,
           ST1.STATE_ID AS CURRENT_STATE_ID,
           ST1.STATE_DESCRIPTION AS CURRENT_STATE,
           LEAD(ST1.STATE_DESCRIPTION) OVER(PARTITION BY P.PAYMENT_ID ORDER BY SL.STARTED_AT) AS NEXT_STATE,
           SL.STARTED_AT AS EFFECTIVE_START,
           COALESCE(LEAD(SL.STARTED_AT) OVER(PARTITION BY P.PAYMENT_ID ORDER BY SL.STARTED_AT), DATE '9999-12-31') AS EFFECTIVE_END,
           CASE WHEN LEAD(SL.STARTED_AT) OVER(PARTITION BY P.PAYMENT_ID ORDER BY SL.STARTED_AT) IS NULL THEN 'Y' ELSE 'N' END AS IS_CURRENT
    FROM PAYMENT P
    LEFT OUTER JOIN CLAIM C ON P.CLAIM_ID = C.CLAIM_ID
	LEFT OUTER JOIN LK_CLAIM_TYPE CT ON CT.CLAIM_TYPE_ID = C.CLAIM_TYPE_ID
	LEFT OUTER JOIN LK_ABSENCE_STATUS FAS ON C.FINEOS_ABSENCE_STATUS_ID = FAS.ABSENCE_STATUS_ID
	LEFT OUTER JOIN EMPLOYEE E ON P.EMPLOYEE_ID = E.EMPLOYEE_ID
    INNER JOIN STATE_LOG SL ON P.PAYMENT_ID = SL.PAYMENT_ID
    INNER JOIN LK_STATE ST1 ON SL.END_STATE_ID = ST1.STATE_ID
    INNER JOIN IMPORT_LOG IL ON P.FINEOS_EXTRACT_IMPORT_LOG_ID = IL.IMPORT_LOG_ID
    INNER JOIN IMPORT_LOG_REPORT_QUEUE ILRQ ON IL.IMPORT_LOG_ID = ILRQ.IMPORT_LOG_ID
    WHERE ST1.FLOW_ID IN (21)
       AND IL.SOURCE = 'PaymentExtractStep'
)
SELECT CASE
         WHEN PBT.CURRENT_STATE_ID IN (148) THEN 'Employer Reimbursment'
         WHEN PBT.CURRENT_STATE_ID IN (137) THEN 'PUB Check'
         WHEN PBT.CURRENT_STATE_ID IN (139) THEN 'PUB ACH'
         WHEN PBT.CURRENT_STATE_ID IN (120, 180) THEN 'Payment Error'
         WHEN PBT.CURRENT_STATE_ID IN (132, 181) THEN 'Payment Reject'
         WHEN PBT.CURRENT_STATE_ID IN (101) THEN 'Claimant Error'
         WHEN PBT.CURRENT_STATE_ID IN (122) THEN 'Zero Dollar Payment'
         WHEN PBT.CURRENT_STATE_ID IN (125) THEN 'Overpayment'
         WHEN PBT.CURRENT_STATE_ID IN (145) THEN 'Payment Cancellation'
         WHEN PBT.CURRENT_STATE_ID IN (156) THEN 'Address Validation Error'
         WHEN PBT.CURRENT_STATE_ID IN (182) THEN 'PUB Error'
         WHEN PBT.CURRENT_STATE_ID IN (183) THEN 'PUB Change Notification'
         WHEN PBT.CURRENT_STATE_ID IN (144) THEN 'PUB Payment Successful'
         ELSE 'Unmapped State ID - ' || PBT.CURRENT_STATE_ID
       END "Payment Status", 
       COUNT(*) "Payment Records"
FROM PAYMENT_BATCH_TRANSACTIONS PBT
WHERE PBT.IS_CURRENT = 'Y'
GROUP BY 
       CASE
         WHEN PBT.CURRENT_STATE_ID IN (148) THEN 'Employer Reimbursment'
         WHEN PBT.CURRENT_STATE_ID IN (137) THEN 'PUB Check'
         WHEN PBT.CURRENT_STATE_ID IN (139) THEN 'PUB ACH'
         WHEN PBT.CURRENT_STATE_ID IN (120, 180) THEN 'Payment Error'
         WHEN PBT.CURRENT_STATE_ID IN (132, 181) THEN 'Payment Reject'
         WHEN PBT.CURRENT_STATE_ID IN (101) THEN 'Claimant Error'
         WHEN PBT.CURRENT_STATE_ID IN (122) THEN 'Zero Dollar Payment'
         WHEN PBT.CURRENT_STATE_ID IN (125) THEN 'Overpayment'
         WHEN PBT.CURRENT_STATE_ID IN (145) THEN 'Payment Cancellation'
         WHEN PBT.CURRENT_STATE_ID IN (156) THEN 'Address Validation Error'
         WHEN PBT.CURRENT_STATE_ID IN (182) THEN 'PUB Error'
         WHEN PBT.CURRENT_STATE_ID IN (183) THEN 'PUB Change Notification'
         WHEN PBT.CURRENT_STATE_ID IN (144) THEN 'PUB Payment Successful'
         ELSE 'Unmapped State ID - ' || PBT.CURRENT_STATE_ID
       END
ORDER BY COUNT(*) DESC