WITH FINEOS_TXNS    AS (SELECT FEP.*
                        FROM FINEOS_EXTRACT_PAYMENT_FULL_SNAPSHOT FEP
                        WHERE FEP.FINEOS_EXTRACT_IMPORT_LOG_ID = (SELECT MAX(FINEOS_EXTRACT_IMPORT_LOG_ID)
                                                                  FROM FINEOS_EXTRACT_PAYMENT_FULL_SNAPSHOT)
                          AND FEP.EVENTTYPE = 'PaymentOut'
                          AND CAST(AMOUNT_MONAMT AS DECIMAL) > 0
                          AND CAST(CASE WHEN EXTRACTIONDAT IS NULL THEN PAYMENTDATE 
                                        WHEN EXTRACTIONDAT = '' THEN PAYMENTDATE
                                        ELSE EXTRACTIONDAT END AS DATE) < CAST(DATE_TRUNC('WEEK', CURRENT_DATE) AS DATE)-1),
     FINEOS_CNCL    AS (SELECT CP.*
                        FROM FINEOS_EXTRACT_CANCELLED_PAYMENTS CP
                        WHERE CP.FINEOS_EXTRACT_IMPORT_LOG_ID = (SELECT MAX(FINEOS_EXTRACT_IMPORT_LOG_ID)
                                                                 FROM FINEOS_EXTRACT_CANCELLED_PAYMENTS)),
     FINEOS_RPLC    AS (SELECT RP.*
                        FROM FINEOS_EXTRACT_REPLACED_PAYMENTS RP
                        WHERE RP.FINEOS_EXTRACT_IMPORT_LOG_ID = (SELECT MAX(FINEOS_EXTRACT_IMPORT_LOG_ID)
                                                                 FROM FINEOS_EXTRACT_REPLACED_PAYMENTS)),
     MMARS_TXNS     AS (SELECT VENDOR_INVOICE_NO, SUBSTRING(VENDOR_INVOICE_NO, 19) I, MPD.*
                        FROM MMARS_PAYMENT_DATA MPD),
     MMARS_SUMMARY_TXNS AS (SELECT MT.I MTI, FT.I FTI, FC.I FCI, FR.I FRI, 
                               CAST(FT.AMOUNT_MONAMT AS DECIMAL) FT_AMOUNT,
                               CAST(MT.PYMT_ACTG_LINE_AMOUNT AS DECIMAL) MT_AMOUNT
                        FROM MMARS_TXNS MT
                        LEFT OUTER JOIN FINEOS_TXNS FT ON MT.I = FT.I
                        LEFT OUTER JOIN FINEOS_CNCL FC ON FT.I = FC.I
                        LEFT OUTER JOIN FINEOS_RPLC FR ON FT.I = FR.I),
     CHECK_PAYMENTS AS (SELECT PAYMENT_ID FROM STATE_LOG WHERE END_STATE_ID = 137),
     EFT_PAYMENTS   AS (SELECT PAYMENT_ID FROM STATE_LOG WHERE END_STATE_ID = 139),
     BANK_ERRORS    AS (SELECT PAYMENT_ID FROM STATE_LOG WHERE END_STATE_ID = 182),
     PUB_TXNS       AS (SELECT P.*
                        FROM PAYMENT P
                        LEFT OUTER JOIN CHECK_PAYMENTS CP ON P.PAYMENT_ID = CP.PAYMENT_ID
                        LEFT OUTER JOIN EFT_PAYMENTS EFT ON P.PAYMENT_ID = EFT.PAYMENT_ID
                        LEFT OUTER JOIN BANK_ERRORS BE ON P.PAYMENT_ID = BE.PAYMENT_ID
                        WHERE (CP.PAYMENT_ID IS NOT NULL OR EFT.PAYMENT_ID IS NOT NULL)
						  AND BE.PAYMENT_ID IS NULL
                          AND P.FINEOS_EXTRACTION_DATE < CAST(DATE_TRUNC('WEEK', CURRENT_DATE) AS DATE)-1),
     PUB_SUMMARY_TXNS AS (SELECT PT.FINEOS_PEI_I_VALUE PTI, FT.I FTI, FC.I FCI, FR.I FRI,
                                  CAST(FT.AMOUNT_MONAMT AS DECIMAL) FT_AMOUNT,
                                  CAST(PT.AMOUNT AS DECIMAL) PT_AMOUNT
                           FROM PUB_TXNS PT
                           LEFT OUTER JOIN FINEOS_TXNS FT ON PT.FINEOS_PEI_I_VALUE = FT.I
                           LEFT OUTER JOIN FINEOS_CNCL FC ON FT.I = FC.I
                           LEFT OUTER JOIN FINEOS_RPLC FR ON FT.I = FR.I),
     FINEOS_SUMMARY_TXNS AS (SELECT PT.PAYMENT_ID PUB_PAYMENT_ID, FC.CANELLED_PAYMENT_ID CANELLED_PAYMENT_ID, FR.REPLACED_PAYMENT_ID REPLACED_PAYMENT_ID,
                                    MT.MMARS_PAYMENT_DATA_ID MMARS_PAYMENT_DATA_ID, FT.TRANSACTIONST TRANSACTION_STATUS
                             FROM FINEOS_TXNS FT 
                             LEFT OUTER JOIN PUB_TXNS PT ON PT.FINEOS_PEI_I_VALUE = FT.I
                             LEFT OUTER JOIN MMARS_TXNS MT ON MT.I = FT.I
                             LEFT OUTER JOIN FINEOS_CNCL FC ON FT.I = FC.I
                             LEFT OUTER JOIN FINEOS_RPLC FR ON FT.I = FR.I)
SELECT 'MMARS Payment Reconciliation (through ' || CAST(DATE_TRUNC('WEEK', CURRENT_DATE) AS DATE)-2 || ')' REPORT_NAME, NULL REPORT_VALUE 
UNION ALL
SELECT 'Total MMARS Payments' REPORT_NAME, COUNT(*) REPORT_VALUE FROM MMARS_SUMMARY_TXNS
UNION ALL
SELECT 'Matching FINEOS Payments' REPORT_NAME, SUM(CASE WHEN FTI IS NOT NULL AND FCI IS NULL AND FRI IS NULL AND FT_AMOUNT = MT_AMOUNT THEN 1 ELSE 0 END) REPORT_VALUE FROM MMARS_SUMMARY_TXNS
UNION ALL
SELECT '* Unmatching FINEOS Payments (Differing Amounts)' REPORT_NAME, SUM(CASE WHEN FTI IS NOT NULL AND FCI IS NULL AND FRI IS NULL AND FT_AMOUNT <> MT_AMOUNT THEN 1 ELSE 0 END) REPORT_VALUE FROM MMARS_SUMMARY_TXNS
UNION ALL
SELECT '* Unmatching FINEOS Payments' REPORT_NAME, SUM(CASE WHEN FTI IS NULL THEN 1 ELSE 0 END) REPORT_VALUE FROM MMARS_SUMMARY_TXNS
UNION ALL
SELECT '* Matching FINEOS Cancelled Payments' REPORT_NAME, SUM(CASE WHEN FCI IS NOT NULL AND FTI IS NOT NULL THEN 1 ELSE 0 END) REPORT_VALUE FROM MMARS_SUMMARY_TXNS
UNION ALL
SELECT '* Matching FINEOS Replaced Payments' REPORT_NAME, SUM(CASE WHEN FRI IS NOT NULL AND FTI IS NOT NULL THEN 1 ELSE 0 END) REPORT_VALUE FROM MMARS_SUMMARY_TXNS
UNION ALL
SELECT NULL REPORT_NAME, NULL REPORT_VALUE 
UNION ALL
SELECT 'PUB Payment Reconciliation (through ' || CAST(DATE_TRUNC('WEEK', CURRENT_DATE) AS DATE)-2 || ')' REPORT_NAME, NULL REPORT_VALUE 
UNION ALL
SELECT 'Total PUB Payments' REPORT_NAME, COUNT(*) REPORT_VALUE FROM PUB_SUMMARY_TXNS
UNION ALL
SELECT 'Matching FINEOS Payments' REPORT_NAME, SUM(CASE WHEN FTI IS NOT NULL AND FCI IS NULL AND FRI IS NULL AND FT_AMOUNT = PT_AMOUNT THEN 1 ELSE 0 END) REPORT_VALUE FROM PUB_SUMMARY_TXNS
UNION ALL
SELECT '** Unmatching FINEOS Payments (Differing Amounts)' REPORT_NAME, SUM(CASE WHEN FTI IS NOT NULL AND FCI IS NULL AND FRI IS NULL AND FT_AMOUNT <> PT_AMOUNT THEN 1 ELSE 0 END) REPORT_VALUE FROM PUB_SUMMARY_TXNS
UNION ALL
SELECT '** Unmatching FINEOS Payments' REPORT_NAME, SUM(CASE WHEN FTI IS NULL THEN 1 ELSE 0 END) REPORT_VALUE FROM PUB_SUMMARY_TXNS
UNION ALL
SELECT '** Matching FINEOS Cancelled Payments' REPORT_NAME, SUM(CASE WHEN FCI IS NOT NULL AND FTI IS NOT NULL THEN 1 ELSE 0 END) REPORT_VALUE FROM PUB_SUMMARY_TXNS
UNION ALL
SELECT '** Matching FINEOS Replaced Payments' REPORT_NAME, SUM(CASE WHEN FRI IS NOT NULL AND FTI IS NOT NULL THEN 1 ELSE 0 END)  REPORT_VALUE FROM PUB_SUMMARY_TXNS
UNION ALL
SELECT NULL REPORT_NAME, NULL REPORT_VALUE 
UNION ALL
SELECT 'FINEOS Payment Reconciliation (through ' || CAST(DATE_TRUNC('WEEK', CURRENT_DATE) AS DATE)-2 || ')' REPORT_NAME, NULL REPORT_VALUE 
UNION ALL
SELECT 'Total FINEOS Payments' REPORT_NAME, COUNT(*) REPORT_VALUE FROM FINEOS_SUMMARY_TXNS
UNION ALL
SELECT 'Matching PUB Payments' REPORT_NAME, SUM(CASE WHEN PUB_PAYMENT_ID IS NOT NULL AND CANELLED_PAYMENT_ID IS NULL AND REPLACED_PAYMENT_ID IS NULL THEN 1 ELSE 0 END) REPORT_VALUE FROM FINEOS_SUMMARY_TXNS
UNION ALL
SELECT 'Matching MMARS Payments' REPORT_NAME, SUM(CASE WHEN MMARS_PAYMENT_DATA_ID IS NOT NULL AND CANELLED_PAYMENT_ID IS NULL AND REPLACED_PAYMENT_ID IS NULL THEN 1 ELSE 0 END) REPORT_VALUE FROM FINEOS_SUMMARY_TXNS
UNION ALL
SELECT 'Cancelled Payments' REPORT_NAME, SUM(CASE WHEN CANELLED_PAYMENT_ID IS NOT NULL THEN 1 ELSE 0 END) REPORT_VALUE FROM FINEOS_SUMMARY_TXNS
UNION ALL
SELECT 'Replaced Payments' REPORT_NAME, SUM(CASE WHEN REPLACED_PAYMENT_ID IS NOT NULL THEN 1 ELSE 0 END) REPORT_VALUE FROM FINEOS_SUMMARY_TXNS
UNION ALL
SELECT '*** Other Payment Transactions' REPORT_NAME, SUM(CASE WHEN MMARS_PAYMENT_DATA_ID IS NULL AND PUB_PAYMENT_ID IS NULL AND REPLACED_PAYMENT_ID IS NULL AND CANELLED_PAYMENT_ID IS NULL THEN 1 ELSE 0 END) REPORT_VALUE FROM FINEOS_SUMMARY_TXNS
UNION ALL
SELECT NULL REPORT_NAME, NULL REPORT_VALUE 
UNION ALL
SELECT 'Other Payment Transactions Breakdown' REPORT_NAME, NULL REPORT_VALUE 
UNION ALL
SELECT TRANSACTION_STATUS REPORT_NAME, COUNT(*) REPORT_VALUE
FROM FINEOS_SUMMARY_TXNS
WHERE MMARS_PAYMENT_DATA_ID IS NULL 
  AND PUB_PAYMENT_ID IS NULL 
  AND REPLACED_PAYMENT_ID IS NULL
  AND CANELLED_PAYMENT_ID IS NULL
GROUP BY TRANSACTION_STATUS
