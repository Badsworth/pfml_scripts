[tool.poetry]
name = "massgov.pfml.api"
version = "0.1.0"
description = "Massachusetts Paid Family & Medical Leave API"
authors = ["Mass PFML API Team <ma-pfml-alerts@mass.gov>"]
packages = [
  { include = "massgov" },
]
include = ["openapi.yaml", "newrelic.ini"]

[tool.poetry.dependencies]
alembic = "^1.4.2"
boto3 = "^1.13.7"
boto3_extensions = "^0.14.1"
connexion = {extras = ["swagger-ui"], version = "^2.7.0", optional = true}
cryptography = "^3.4.4"
csvsorter = "^1.4"
ebcdic = "^1.1.1"
factory_boy = "^2.12.0"
faker = "^4.2.0"
flask-bouncer = { version = "^0.3.0", optional = true }
flask_cors = { version = "^3.0.9", optional = true }
Flask-HTTPAuth = { version = "^4.2.0", optional = true }
gunicorn = { version = "^20.0.4", optional = true }
# Locking indirect lxml dependency to version that addresses CVE-2021-28957. Can remove when Zeep
# pins lxml dependency to version that addresses CVE-2021-28957.
lxml = { version = "^4.6.3", optional = true }
newrelic = "^5.14.1"
paramiko = "^2.7.2"
phonenumbers = "^8.12.13"
psycopg2-binary = "^2.8.5"
puremagic = "^1.10"
pydantic = {extras = ["dotenv"], version = "^1.8.1"}
pydash = "^4.7.6"
pyodbc = {version = "^4.0.30", optional = true}
python = "^3.8"
python-dateutil = "^2.8.1"
python-gnupg = "^0.4.6"
python-jose = {extras = ["cryptography"], version = "^3.2.0"}
pyyaml = "^5.4.0"
requests = "^2.24.0"
requests-pkcs12 = "^1.7"
requests_oauthlib = "^1.3.0"
smart_open = "^2.0.0"
sqlalchemy = "~1.3.15"
strict-rfc3339 = "^0.7"
tenacity = "^6.2.0"
xmlschema = "^1.2.2"
zeep = { version = "^3.4.0", optional = true }
Flask = "^1.1.0"


[tool.poetry.dev-dependencies]
bandit = "^1.6.2"
black = "^19.10b0"
click = "^7.1.2"
coverage = "^5.0.4"
datamodel-code-generator = "^0.5.13"
flake8 = "^3.7.9"
flake8-alfred = "^1.1.1"
flake8-bugbear = "^20.1.4"
freezegun = "^0.3.15"
isort = "^4.3.21"
moto = "^1.3.14"
mypy = "^0.770"
oyaml = "^1.0"
pyopenssl = "^19.1.0"
pytest = "^6.0.0"
pytest-httpserver = "^0.3.6"
pytest-mock = "^3.3.1"
pytest-testmon = "^1.0.2"
pytest-timeout = "^1.4.1"
pytest-watch = "^4.2.0"
pytest-xdist = "^2.2.1"
safety = "^1.9.0"
sqlalchemy-stubs = {git = "https://github.com/dropbox/sqlalchemy-stubs", rev = "55470ceab8149db983411d5c094c9fe16343c58b"}

[tool.poetry.extras]
# pyodbc requires building/linking against native libraries. Historically, this
# was an issue when building AWS Lambdas via AWS SAM, as one doesn't have
# control over the build environment for SAM (when using the docker build
# option). Making it optional makes AWS SAM skip trying to include the package.
#
# It's only required for connecting to Data Mart (part of the manual payments
# ECS tasks).
mssql-server = ["pyodbc"]
# These are packages only used by the API component itself. Historically, these
# were separated out so they could be excluded from the AWS Lambda builds to
# reduce the size of the Lambda package below AWS limits.
api-only-dependencies = [
 "connexion",
 "flask-bouncer",
 "flask_cors",
 "Flask-HTTPAuth",
 "gunicorn",
 "lxml",
 "zeep",
]

[tool.poetry.scripts]
massgov-pfml-api = "massgov.pfml.api.__main__:main"
db-migrate-up = "massgov.pfml.db.migrations.run:up"
db-migrate-down = "massgov.pfml.db.migrations.run:down"
db-migrate-down-all = "massgov.pfml.db.migrations.run:downall"
db-admin-create-db-users = "massgov.pfml.db.admin:create_users"
db-create-fineos-user = "massgov.pfml.db.create_api_user:create_fineos_user"
execute-sql = "massgov.pfml.db.execute_sql:execute_sql"
register-leave-admins-with-fineos = "massgov.pfml.fineos.leave_admin_creation.register_leave_admins_with_fineos:main"
dor-generate = "massgov.pfml.dor.mock.generate:main"
dor-import = "massgov.pfml.dor.importer.import_dor:handler"
generate-wagesandcontributions = "massgov.pfml.api.generate_wagesandcontributions:main"
load-employers-to-fineos = "massgov.pfml.fineos.employer_load:handler"
fineos-eligibility-feed-export = "massgov.pfml.fineos.eligibility_feed_export.eligibility_export:main"
payments-ctr-process = "massgov.pfml.payments.process_ctr_payments:ctr_process"
payments-fineos-process = "massgov.pfml.payments.process_payments:fineos_process"
payments-mock-generate = "massgov.pfml.payments.mock.generate:main"
payments-rotate-data-mart-password = "massgov.pfml.payments.rotate_data_mart_password:main"
payments-manual-payment-voucher = "massgov.pfml.payments.manual.payment_voucher:main"
payments-ctr-vc-code-cleanup = "massgov.pfml.payments.ctr_vendor_customer_code_cleanup:main"
payments-payment-voucher-plus = "massgov.pfml.payments.payment_voucher_plus:main"
pub-payments-process-fineos = "massgov.pfml.delegated_payments.task.process_fineos_extracts:main"
pub-payments-create-pub-files = "massgov.pfml.delegated_payments.task.process_pub_payments:main"
pub-payments-process-pub-returns = "massgov.pfml.delegated_payments.task.process_pub_responses:main"
ach-reader = "massgov.pfml.delegated_payments.util.ach.ach_tool:ach_reader"
check-reader = "massgov.pfml.delegated_payments.pub.check_tool:check_reader"
fineos-payments-mock-generate = "massgov.pfml.payments.mock.fineos_extract_generator:main"
fineos-test-vendor-export-generate = "massgov.pfml.payments.mock.fineos_extract_generator:create_test_vendor_export"
fineos-daily-generate = "massgov.pfml.fineos.mock.generate:main"
fineos-import-employee-updates = "massgov.pfml.fineos.import_fineos_updates:handler"
fineos-bucket-tool = "massgov.pfml.fineos.tool.bucket:main"
cps-errors-crawler = "massgov.pfml.fineos.etl.cps_errors_crawler:main"
import-fineos-to-warehouse = "massgov.pfml.fineos.import_fineos_to_warehouse:handler"
reductions-process-agency-data = "massgov.pfml.reductions.process_agency_data:main"
reductions-send-claimant-lists-to-agencies = "massgov.pfml.reductions.send_claimant_lists_to_agencies:main"
transmogrify-state-logs = "massgov.pfml.util.tasks.transmogrify_states:transmogrify_states"
delegated-payment-audit-rejects-generate = "massgov.pfml.delegated_payments.audit.mock.delegated_payment_audit_generator:generate_payment_rejects_file"
delegated-payment-check-response-generate = "massgov.pfml.delegated_payments.mock.generate_check_response:generate_check_response_files"

[tool.black]
line-length = 100

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 100

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
